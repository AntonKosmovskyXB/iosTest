/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { GLOBALS } from './globals';
import { SortablejsDirective } from './sortablejs.directive';
import * as ɵngcc0 from '@angular/core';
var SortablejsModule = /** @class */ (function () {
    function SortablejsModule() {
    }
    /**
     * @param {?} globalOptions
     * @return {?}
     */
    SortablejsModule.forRoot = /**
     * @param {?} globalOptions
     * @return {?}
     */
    function (globalOptions) {
        return {
            ngModule: SortablejsModule,
            providers: [
                { provide: GLOBALS, useValue: globalOptions },
            ],
        };
    };
SortablejsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SortablejsModule });
SortablejsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SortablejsModule_Factory(t) { return new (t || SortablejsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SortablejsModule, { declarations: function () { return [SortablejsDirective]; }, exports: function () { return [SortablejsDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SortablejsModule, [{
        type: NgModule,
        args: [{
                declarations: [SortablejsDirective],
                exports: [SortablejsDirective]
            }]
    }], function () { return []; }, null); })();
    return SortablejsModule;
}());
export { SortablejsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGFibGVqcy5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtc29ydGFibGVqcy9saWIvc29ydGFibGVqcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFcEMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBRTdEO0FBRUMsSUFGRDtBQUNrQixJQWNsQixDQUFDO0FBQ0Q7QUFBUTtBQUFnQztBQUFtQjtBQUFRLElBVm5ELHdCQUFPO0FBQU87QUFBZ0M7QUFDOUQ7QUFBUSxJQUROLFVBQXNCLGFBQWdDO0FBQUksUUFDeEQsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLGdCQUFnQjtBQUNoQyxZQUFNLFNBQVMsRUFBRTtBQUNqQixnQkFBUSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRTtBQUNyRCxhQUFPO0FBQ1AsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO29EQWJGLFFBQVEsU0FBQztjQUNSLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLHNCQUNuQyxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxtQkFDL0I7Ozs7Ozs7O2dEQUNRO0FBQUMsSUFXVix1QkFBQztBQUNBLENBREEsQUFmRCxJQWVDO0FBQ0QsU0FaYSxnQkFBZ0I7QUFFN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR0xPQkFMUyB9IGZyb20gJy4vZ2xvYmFscyc7XG5pbXBvcnQgeyBTb3J0YWJsZWpzT3B0aW9ucyB9IGZyb20gJy4vc29ydGFibGVqcy1vcHRpb25zJztcbmltcG9ydCB7IFNvcnRhYmxlanNEaXJlY3RpdmUgfSBmcm9tICcuL3NvcnRhYmxlanMuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbU29ydGFibGVqc0RpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFtTb3J0YWJsZWpzRGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgU29ydGFibGVqc01vZHVsZSB7XG5cbiAgcHVibGljIHN0YXRpYyBmb3JSb290KGdsb2JhbE9wdGlvbnM6IFNvcnRhYmxlanNPcHRpb25zKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBTb3J0YWJsZWpzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogR0xPQkFMUywgdXNlVmFsdWU6IGdsb2JhbE9wdGlvbnMgfSxcbiAgICAgIF0sXG4gICAgfTtcbiAgfVxuXG59XG4iXX0=