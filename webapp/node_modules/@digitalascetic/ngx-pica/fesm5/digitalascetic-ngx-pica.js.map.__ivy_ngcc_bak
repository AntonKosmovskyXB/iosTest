{"version":3,"file":"digitalascetic-ngx-pica.js","sources":["ng://@digitalascetic/ngx-pica/lib/ngx-pica-error.interface.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica-exif.service.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica.service.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica-image.service.ts","ng://@digitalascetic/ngx-pica/lib/ngx-pica.module.ts","ng://@digitalascetic/ngx-pica/public_api.ts","ng://@digitalascetic/ngx-pica/digitalascetic-ngx-pica.ts"],"sourcesContent":["export enum NgxPicaErrorType {\n    NO_FILES_RECEIVED = 'NO_FILES_RECEIVED',\n    CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED = 'CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED',\n    NOT_BE_ABLE_TO_COMPRESS_ENOUGH = 'NOT_BE_ABLE_TO_COMPRESS_ENOUGH',\n    READ_ERROR = 'IMAGE_COULD_NOT_BE_LOADED'\n}\n\nexport interface NgxPicaErrorInterface {\n    err: NgxPicaErrorType;\n    file?: File;\n}\n","import {Injectable} from '@angular/core';\nimport * as exifr from 'exifr';\n\n\n@Injectable()\nexport class NgxPicaExifService {\n\n  public getExifOrientedImage(image: HTMLImageElement): Promise<HTMLImageElement> {\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n      exifr.orientation(image)\n        .catch(err => {\n          // IF SOMETHING WAS WRONG, WE RETURN ORIGINAL IMAGE\n          resolve(image);\n        })\n        .then(exifOrientation => {\n\n          if (exifOrientation && exifOrientation !== 1) {\n\n            if (exifOrientation < 1 || exifOrientation > 8) {\n              throw new Error('orientation should be [1-8]');\n            }\n\n            const canvas: HTMLCanvasElement = document.createElement('canvas'),\n              ctx = canvas.getContext('2d');\n\n            let deg = 0,\n              cx = 0,\n              cy = 0,\n              width: number = image.width,\n              height: number = image.height;\n\n            if ([5, 6, 7, 8].indexOf(exifOrientation) > -1) {\n              width = image.height;\n              height = image.width;\n            }\n\n            canvas.width = width;\n            canvas.height = height;\n\n            switch (exifOrientation) {\n              case 3:\n              case 4:\n                cx = -image.width;\n                cy = -image.height;\n                deg = 180;\n                break;\n              case 5:\n              case 6:\n                cy = -image.height;\n                deg = 90;\n                break;\n              case 7:\n              case 8:\n                cx = -image.width;\n                deg = 270;\n                break;\n              default:\n                break;\n            }\n\n            if ([2, 4, 5, 7].indexOf(exifOrientation) > -1) {\n              ctx.translate(width, 0);\n              ctx.scale(-1, 1);\n            }\n\n            ctx.rotate(deg / 180 * Math.PI);\n            ctx.drawImage(image, cx, cy);\n\n            const img = new Image();\n\n            img.width = width;\n            img.height = height;\n\n            img.onload = () => {\n              resolve(img);\n            };\n\n            img.src = canvas.toDataURL();\n          } else {\n            resolve(image);\n          }\n        });\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Observable, Subscription} from 'rxjs';\nimport {NgxPicaErrorInterface, NgxPicaErrorType} from './ngx-pica-error.interface';\nimport {\n  ExifOptions,\n  NgxPicaCompressOptionsInterface,\n  NgxPicaResizeOptionsInterface\n} from './ngx-pica-resize-options.interface';\nimport {NgxPicaExifService} from './ngx-pica-exif.service';\nimport Pica from 'pica';\nimport {switchMap} from \"rxjs/operators\";\n\n\ndeclare let window: any;\n\n@Injectable()\nexport class NgxPicaService {\n  private picaResizer = new Pica();\n  private MAX_STEPS = 20;\n\n  constructor(private _ngxPicaExifService: NgxPicaExifService) {\n    if (!this.picaResizer || !this.picaResizer.resize) {\n      this.picaResizer = new window.Pica();\n    }\n  }\n\n  public resizeImages(files: File[], width: number, height: number, options?: NgxPicaResizeOptionsInterface): Observable<File> {\n    const resizedImage: Subject<File> = new Subject();\n    const totalFiles: number = files.length;\n\n    if (totalFiles > 0) {\n      const nextFile: Subject<File> = new Subject();\n      let index = 0;\n\n      const subscription: Subscription = nextFile\n        .pipe(\n          switchMap((file: File) => this.resizeImage(file, width, height, options))\n        )\n        .subscribe(imageResized => {\n          index++;\n          resizedImage.next(imageResized);\n\n          if (index < totalFiles) {\n            nextFile.next(files[index]);\n\n          } else {\n            resizedImage.complete();\n            subscription.unsubscribe();\n          }\n        }, (err) => {\n          const ngxPicaError: NgxPicaErrorInterface = {\n            file: files[index],\n            err: err\n          };\n\n          resizedImage.error(ngxPicaError);\n        });\n\n      nextFile.next(files[index]);\n    } else {\n      const ngxPicaError: NgxPicaErrorInterface = {\n        err: NgxPicaErrorType.NO_FILES_RECEIVED\n      };\n\n      resizedImage.error(ngxPicaError);\n      resizedImage.complete();\n    }\n\n    return resizedImage.asObservable();\n  }\n\n  public resizeImage(file: File, width: number, height: number, options?: NgxPicaResizeOptionsInterface): Observable<File> {\n    const resizedImage: Subject<File> = new Subject();\n    const originCanvas: HTMLCanvasElement = document.createElement('canvas');\n    const ctx = originCanvas.getContext('2d');\n    const img = new Image();\n    const reader: FileReader = new FileReader();\n\n    if (!options) {\n      options = {\n        exifOptions: {\n          forceExifOrientation: true\n        }\n      };\n    }\n\n    if (ctx) {\n      reader.addEventListener('load', (event: any) => {\n        img.onerror = (err) => {\n          resizedImage.error({err: NgxPicaErrorType.READ_ERROR, file: file, original_error: err});\n        };\n\n        img.onload = () => {\n          this.processImageExifOptions(img, options.exifOptions)\n            .then(orientedImage => {\n              originCanvas.width = orientedImage.width;\n              originCanvas.height = orientedImage.height;\n\n              ctx.drawImage(orientedImage, 0, 0);\n\n              const imageData = ctx.getImageData(0, 0, orientedImage.width, orientedImage.height);\n              if (options && options.aspectRatio && options.aspectRatio.keepAspectRatio) {\n                let ratio = 0;\n\n                if (options.aspectRatio.forceMinDimensions) {\n                  ratio = Math.max(width / imageData.width, height / imageData.height);\n                } else {\n                  ratio = Math.min(width / imageData.width, height / imageData.height);\n                }\n\n                width = Math.round(imageData.width * ratio);\n                height = Math.round(imageData.height * ratio);\n              }\n\n              const destinationCanvas: HTMLCanvasElement = document.createElement('canvas');\n              destinationCanvas.width = width;\n              destinationCanvas.height = height;\n\n              this.picaResize(file, originCanvas, destinationCanvas, options)\n                .catch((err) => resizedImage.error(err))\n                .then((imgResized: File) => {\n                  resizedImage.next(imgResized);\n                  resizedImage.complete();\n                });\n            })\n            .catch((err) => {\n              resizedImage.error({err: NgxPicaErrorType.READ_ERROR, file: file, original_error: err});\n            });\n        };\n\n        img.src = <string>reader.result;\n      });\n\n      reader.readAsDataURL(file);\n    } else {\n      resizedImage.error(NgxPicaErrorType.CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED);\n    }\n\n    return resizedImage.asObservable();\n  }\n\n  public compressImages(files: File[], sizeInMB: number, options?: NgxPicaCompressOptionsInterface): Observable<File> {\n    const compressedImage: Subject<File> = new Subject();\n    const totalFiles: number = files.length;\n\n    if (totalFiles > 0) {\n      const nextFile: Subject<File> = new Subject();\n      let index = 0;\n\n      const subscription: Subscription = nextFile\n        .pipe(\n          switchMap((file: File) => this.compressImage(file, sizeInMB, options))\n        )\n        .subscribe(imageCompressed => {\n          index++;\n          compressedImage.next(imageCompressed);\n\n          if (index < totalFiles) {\n            nextFile.next(files[index]);\n\n          } else {\n            compressedImage.complete();\n            subscription.unsubscribe();\n          }\n        }, (err) => {\n          const ngxPicaError: NgxPicaErrorInterface = {\n            file: files[index],\n            err: err\n          };\n\n          compressedImage.error(ngxPicaError);\n        });\n\n      nextFile.next(files[index]);\n    } else {\n      const ngxPicaError: NgxPicaErrorInterface = {\n        err: NgxPicaErrorType.NO_FILES_RECEIVED\n      };\n\n      compressedImage.error(ngxPicaError);\n      compressedImage.complete();\n    }\n\n    return compressedImage.asObservable();\n  }\n\n  public compressImage(file: File, sizeInMB: number, options?: NgxPicaCompressOptionsInterface): Observable<File> {\n    const compressedImage: Subject<File> = new Subject();\n\n    if (this.bytesToMB(file.size) <= sizeInMB) {\n      setTimeout(() => {\n        compressedImage.next(file);\n        compressedImage.complete();\n      });\n    } else {\n\n      const originCanvas: HTMLCanvasElement = document.createElement('canvas');\n      const ctx = originCanvas.getContext('2d');\n      const img = new Image();\n      const reader: FileReader = new FileReader();\n\n      if (!options) {\n        options = {\n          exifOptions: {\n            forceExifOrientation: true\n          }\n        };\n      }\n\n      if (ctx) {\n        reader.addEventListener('load', (event: any) => {\n          img.onload = () => {\n            this.processImageExifOptions(img, options.exifOptions)\n              .then(orientedImage => {\n                originCanvas.width = orientedImage.width;\n                originCanvas.height = orientedImage.height;\n\n                ctx.drawImage(orientedImage, 0, 0);\n\n                this.getCompressedImage(originCanvas, file.type, 1, sizeInMB, 0)\n                  .catch((err) => compressedImage.error(err))\n                  .then((blob: Blob) => {\n                    const imgCompressed: File = this.blobToFile(blob, file.name, file.type, new Date().getTime());\n\n                    compressedImage.next(imgCompressed);\n                    compressedImage.complete();\n                  });\n              });\n          };\n\n          img.src = <string>reader.result;\n        });\n\n        reader.readAsDataURL(file);\n      } else {\n        compressedImage.error(NgxPicaErrorType.CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED);\n      }\n    }\n\n    return compressedImage.asObservable();\n  }\n\n  private processImageExifOptions(img: HTMLImageElement, exifOptions: ExifOptions): Promise<HTMLImageElement> {\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n      if (exifOptions.forceExifOrientation) {\n        this._ngxPicaExifService.getExifOrientedImage(img)\n          .then(orientedImage => resolve(orientedImage))\n          .catch(err => reject(err));\n      } else {\n        resolve(img);\n      }\n    });\n  }\n\n  private getCompressedImage(canvas: HTMLCanvasElement, type: string, quality: number, sizeInMB: number, step: number): Promise<Blob> {\n    return new Promise<Blob>((resolve, reject) => {\n      this.picaResizer.toBlob(canvas, type, quality)\n        .catch((err) => reject(err))\n        .then((blob: Blob) => {\n          this.checkCompressedImageSize(canvas, blob, quality, sizeInMB, step)\n            .catch((err) => reject(err))\n            .then((compressedBlob: Blob) => {\n                resolve(compressedBlob);\n              }\n            );\n        });\n    });\n  }\n\n  private checkCompressedImageSize(\n    canvas: HTMLCanvasElement,\n    blob: Blob,\n    quality: number,\n    sizeInMB: number,\n    step: number\n  ): Promise<Blob> {\n    return new Promise<Blob>((resolve,\n                              reject) => {\n\n      if (step > this.MAX_STEPS) {\n        reject(NgxPicaErrorType.NOT_BE_ABLE_TO_COMPRESS_ENOUGH);\n      } else if (this.bytesToMB(blob.size) < sizeInMB) {\n        resolve(blob);\n      } else {\n        const newQuality: number = quality - (quality * 0.1);\n        const newStep: number = step + 1;\n\n        // recursively compression\n        resolve(this.getCompressedImage(canvas, blob.type, newQuality, sizeInMB, newStep));\n      }\n    });\n  }\n\n  private picaResize(file: File, from: HTMLCanvasElement, to: HTMLCanvasElement, options: any): Promise<File> {\n    return new Promise<File>((resolve, reject) => {\n      this.picaResizer.resize(from, to, options)\n        .catch((err) => reject(err))\n        .then((resizedCanvas: HTMLCanvasElement) => this.picaResizer.toBlob(resizedCanvas, file.type))\n        .then((blob: Blob) => {\n          const fileResized: File = this.blobToFile(blob, file.name, file.type, new Date().getTime());\n          resolve(fileResized);\n        });\n    });\n  }\n\n  private blobToFile(blob: Blob, name: string, type: string, lastModified: number): File {\n    return Object.assign(new Blob([blob], {type: type}), {name: name, lastModified: lastModified});\n  }\n\n  private bytesToMB(bytes: number) {\n    return bytes / 1048576;\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class NgxPicaImageService {\n\n    private imageExtensions: string[] = [\n        'ase',\n        'art',\n        'bmp',\n        'blp',\n        'cd5',\n        'cit',\n        'cpt',\n        'cr2',\n        'cut',\n        'dds',\n        'dib',\n        'djvu',\n        'egt',\n        'exif',\n        'gif',\n        'gpl',\n        'grf',\n        'icns',\n        'ico',\n        'iff',\n        'jng',\n        'jpeg',\n        'jpg',\n        'jfif',\n        'jp2',\n        'jps',\n        'lbm',\n        'max',\n        'miff',\n        'mng',\n        'msp',\n        'nitf',\n        'ota',\n        'pbm',\n        'pc1',\n        'pc2',\n        'pc3',\n        'pcf',\n        'pcx',\n        'pdn',\n        'pgm',\n        'PI1',\n        'PI2',\n        'PI3',\n        'pict',\n        'pct',\n        'pnm',\n        'pns',\n        'ppm',\n        'psb',\n        'psd',\n        'pdd',\n        'psp',\n        'px',\n        'pxm',\n        'pxr',\n        'qfx',\n        'raw',\n        'rle',\n        'sct',\n        'sgi',\n        'rgb',\n        'int',\n        'bw',\n        'tga',\n        'tiff',\n        'tif',\n        'vtf',\n        'xbm',\n        'xcf',\n        'xpm',\n        '3dv',\n        'amf',\n        'ai',\n        'awg',\n        'cgm',\n        'cdr',\n        'cmx',\n        'dxf',\n        'e2d',\n        'egt',\n        'eps',\n        'fs',\n        'gbr',\n        'odg',\n        'svg',\n        'stl',\n        'vrml',\n        'x3d',\n        'sxd',\n        'v2d',\n        'vnd',\n        'wmf',\n        'emf',\n        'art',\n        'xar',\n        'png',\n        'webp',\n        'jxr',\n        'hdp',\n        'wdp',\n        'cur',\n        'ecw',\n        'iff',\n        'lbm',\n        'liff',\n        'nrrd',\n        'pam',\n        'pcx',\n        'pgf',\n        'sgi',\n        'rgb',\n        'rgba',\n        'bw',\n        'int',\n        'inta',\n        'sid',\n        'ras',\n        'sun',\n        'tga'\n    ];\n\n    public isImage(file: File): boolean {\n        const fileExtension: string = file.name.toLowerCase().substr(file.name.lastIndexOf('.') + 1);\n        return (this.imageExtensions.indexOf(fileExtension) !== -1);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NgxPicaService} from './ngx-pica.service';\nimport {NgxPicaExifService} from './ngx-pica-exif.service';\nimport {NgxPicaImageService} from './ngx-pica-image.service';\n\n@NgModule({\n    providers: [\n        {provide: NgxPicaService, useClass: NgxPicaService},\n        {provide: NgxPicaExifService, useClass: NgxPicaExifService},\n        {provide: NgxPicaImageService, useClass: NgxPicaImageService},\n    ]\n})\nexport class NgxPicaModule {}\n","/*\n * Public API Surface of ngx-pica\n */\n\nexport {NgxPicaModule} from './lib/ngx-pica.module';\nexport {NgxPicaService} from './lib/ngx-pica.service';\nexport {NgxPicaImageService} from './lib/ngx-pica-image.service';\nexport {NgxPicaErrorInterface} from './lib/ngx-pica-error.interface';\nexport {NgxPicaResizeOptionsInterface} from './lib/ngx-pica-resize-options.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgxPicaExifService as ɵa} from './lib/ngx-pica-exif.service';"],"names":["exifr.orientation"],"mappings":"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"}