{"version":3,"file":"digitalascetic-ngx-pica.js","sources":["ng:/@digitalascetic/ngx-pica/lib/ngx-pica-error.interface.ts","ng:/@digitalascetic/ngx-pica/lib/ngx-pica-exif.service.ts","ng:/@digitalascetic/ngx-pica/lib/ngx-pica.service.ts","ng:/@digitalascetic/ngx-pica/lib/ngx-pica-image.service.ts","ng:/@digitalascetic/ngx-pica/lib/ngx-pica.module.ts","ng:/@digitalascetic/ngx-pica/public_api.ts","ng:/@digitalascetic/ngx-pica/digitalascetic-ngx-pica.ts"],"names":["exifr.orientation"],"mappings":"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d,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,IAAI;AACZ,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,IAAI;AACZ,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,IAAI;AACZ,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,IAAI;AACZ,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,MAAM;AACd,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,IAAI;AACZ,YAAQ,KAAK;AACb,YAAQ,MAAM;AACd,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,YAAQ,KAAK;AACb,SAAK,CAAC;AACN,KAKC;AACD,IALW,qCAAO,GAAd,UAAe,IAAU;AAAI,QACzB,IAAM,aAAa,GAAW,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACrG,QAAQ,QAAQ,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE;AACpE,KAAK;IAhIQ,mBAAmB,wBAD/B,UAAU,EAAE,QACA,mBAAmB,CAiI/B;;;;gDACD;AAAC,IADD,0BAAC;AACA,CAlID;AAAK;AAAC;AAEa,ICOnB;AAA2B,KAAE;IAAhB,aAAa,wBAPzB,QAAQ,CAAC,cACN;EAAS,EAAE,kBACP,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,cAAc,EAAC,kBACnD,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE;SAAkB,EAAC,kBAC3D,EAAC,OAAO,EAAE,mBAAmB,EAAE;MAAQ,EAAE,mBAAmB,EAAC,eAChE,UACJ,CAAC,QACW;KAAa,CAAG;;;;;;;;;;;gDAC7B;AAAC,IAD2B,oBAAC;AAC5B,CADD;AAAK;ACZL;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AAE0D","sourcesContent":["export enum NgxPicaErrorType {\n    NO_FILES_RECEIVED = 'NO_FILES_RECEIVED',\n    CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED = 'CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED',\n    NOT_BE_ABLE_TO_COMPRESS_ENOUGH = 'NOT_BE_ABLE_TO_COMPRESS_ENOUGH',\n    READ_ERROR = 'IMAGE_COULD_NOT_BE_LOADED'\n}\n\nexport interface NgxPicaErrorInterface {\n    err: NgxPicaErrorType;\n    file?: File;\n}\n","import {Injectable} from '@angular/core';\nimport * as exifr from 'exifr';\n\n\n@Injectable()\nexport class NgxPicaExifService {\n\n  public getExifOrientedImage(image: HTMLImageElement): Promise<HTMLImageElement> {\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n      exifr.orientation(image)\n        .catch(err => {\n          // IF SOMETHING WAS WRONG, WE RETURN ORIGINAL IMAGE\n          resolve(image);\n        })\n        .then(exifOrientation => {\n\n          if (exifOrientation && exifOrientation !== 1) {\n\n            if (exifOrientation < 1 || exifOrientation > 8) {\n              throw new Error('orientation should be [1-8]');\n            }\n\n            const canvas: HTMLCanvasElement = document.createElement('canvas'),\n              ctx = canvas.getContext('2d');\n\n            let deg = 0,\n              cx = 0,\n              cy = 0,\n              width: number = image.width,\n              height: number = image.height;\n\n            if ([5, 6, 7, 8].indexOf(exifOrientation) > -1) {\n              width = image.height;\n              height = image.width;\n            }\n\n            canvas.width = width;\n            canvas.height = height;\n\n            switch (exifOrientation) {\n              case 3:\n              case 4:\n                cx = -image.width;\n                cy = -image.height;\n                deg = 180;\n                break;\n              case 5:\n              case 6:\n                cy = -image.height;\n                deg = 90;\n                break;\n              case 7:\n              case 8:\n                cx = -image.width;\n                deg = 270;\n                break;\n              default:\n                break;\n            }\n\n            if ([2, 4, 5, 7].indexOf(exifOrientation) > -1) {\n              ctx.translate(width, 0);\n              ctx.scale(-1, 1);\n            }\n\n            ctx.rotate(deg / 180 * Math.PI);\n            ctx.drawImage(image, cx, cy);\n\n            const img = new Image();\n\n            img.width = width;\n            img.height = height;\n\n            img.onload = () => {\n              resolve(img);\n            };\n\n            img.src = canvas.toDataURL();\n          } else {\n            resolve(image);\n          }\n        });\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Observable, Subscription} from 'rxjs';\nimport {NgxPicaErrorInterface, NgxPicaErrorType} from './ngx-pica-error.interface';\nimport {\n  ExifOptions,\n  NgxPicaCompressOptionsInterface,\n  NgxPicaResizeOptionsInterface\n} from './ngx-pica-resize-options.interface';\nimport {NgxPicaExifService} from './ngx-pica-exif.service';\nimport Pica from 'pica';\nimport {switchMap} from \"rxjs/operators\";\n\n\ndeclare let window: any;\n\n@Injectable()\nexport class NgxPicaService {\n  private picaResizer = new Pica();\n  private MAX_STEPS = 20;\n\n  constructor(private _ngxPicaExifService: NgxPicaExifService) {\n    if (!this.picaResizer || !this.picaResizer.resize) {\n      this.picaResizer = new window.Pica();\n    }\n  }\n\n  public resizeImages(files: File[], width: number, height: number, options?: NgxPicaResizeOptionsInterface): Observable<File> {\n    const resizedImage: Subject<File> = new Subject();\n    const totalFiles: number = files.length;\n\n    if (totalFiles > 0) {\n      const nextFile: Subject<File> = new Subject();\n      let index = 0;\n\n      const subscription: Subscription = nextFile\n        .pipe(\n          switchMap((file: File) => this.resizeImage(file, width, height, options))\n        )\n        .subscribe(imageResized => {\n          index++;\n          resizedImage.next(imageResized);\n\n          if (index < totalFiles) {\n            nextFile.next(files[index]);\n\n          } else {\n            resizedImage.complete();\n            subscription.unsubscribe();\n          }\n        }, (err) => {\n          const ngxPicaError: NgxPicaErrorInterface = {\n            file: files[index],\n            err: err\n          };\n\n          resizedImage.error(ngxPicaError);\n        });\n\n      nextFile.next(files[index]);\n    } else {\n      const ngxPicaError: NgxPicaErrorInterface = {\n        err: NgxPicaErrorType.NO_FILES_RECEIVED\n      };\n\n      resizedImage.error(ngxPicaError);\n      resizedImage.complete();\n    }\n\n    return resizedImage.asObservable();\n  }\n\n  public resizeImage(file: File, width: number, height: number, options?: NgxPicaResizeOptionsInterface): Observable<File> {\n    const resizedImage: Subject<File> = new Subject();\n    const originCanvas: HTMLCanvasElement = document.createElement('canvas');\n    const ctx = originCanvas.getContext('2d');\n    const img = new Image();\n    const reader: FileReader = new FileReader();\n\n    if (!options) {\n      options = {\n        exifOptions: {\n          forceExifOrientation: true\n        }\n      };\n    }\n\n    if (ctx) {\n      reader.addEventListener('load', (event: any) => {\n        img.onerror = (err) => {\n          resizedImage.error({err: NgxPicaErrorType.READ_ERROR, file: file, original_error: err});\n        };\n\n        img.onload = () => {\n          this.processImageExifOptions(img, options.exifOptions)\n            .then(orientedImage => {\n              originCanvas.width = orientedImage.width;\n              originCanvas.height = orientedImage.height;\n\n              ctx.drawImage(orientedImage, 0, 0);\n\n              const imageData = ctx.getImageData(0, 0, orientedImage.width, orientedImage.height);\n              if (options && options.aspectRatio && options.aspectRatio.keepAspectRatio) {\n                let ratio = 0;\n\n                if (options.aspectRatio.forceMinDimensions) {\n                  ratio = Math.max(width / imageData.width, height / imageData.height);\n                } else {\n                  ratio = Math.min(width / imageData.width, height / imageData.height);\n                }\n\n                width = Math.round(imageData.width * ratio);\n                height = Math.round(imageData.height * ratio);\n              }\n\n              const destinationCanvas: HTMLCanvasElement = document.createElement('canvas');\n              destinationCanvas.width = width;\n              destinationCanvas.height = height;\n\n              this.picaResize(file, originCanvas, destinationCanvas, options)\n                .catch((err) => resizedImage.error(err))\n                .then((imgResized: File) => {\n                  resizedImage.next(imgResized);\n                  resizedImage.complete();\n                });\n            })\n            .catch((err) => {\n              resizedImage.error({err: NgxPicaErrorType.READ_ERROR, file: file, original_error: err});\n            });\n        };\n\n        img.src = <string>reader.result;\n      });\n\n      reader.readAsDataURL(file);\n    } else {\n      resizedImage.error(NgxPicaErrorType.CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED);\n    }\n\n    return resizedImage.asObservable();\n  }\n\n  public compressImages(files: File[], sizeInMB: number, options?: NgxPicaCompressOptionsInterface): Observable<File> {\n    const compressedImage: Subject<File> = new Subject();\n    const totalFiles: number = files.length;\n\n    if (totalFiles > 0) {\n      const nextFile: Subject<File> = new Subject();\n      let index = 0;\n\n      const subscription: Subscription = nextFile\n        .pipe(\n          switchMap((file: File) => this.compressImage(file, sizeInMB, options))\n        )\n        .subscribe(imageCompressed => {\n          index++;\n          compressedImage.next(imageCompressed);\n\n          if (index < totalFiles) {\n            nextFile.next(files[index]);\n\n          } else {\n            compressedImage.complete();\n            subscription.unsubscribe();\n          }\n        }, (err) => {\n          const ngxPicaError: NgxPicaErrorInterface = {\n            file: files[index],\n            err: err\n          };\n\n          compressedImage.error(ngxPicaError);\n        });\n\n      nextFile.next(files[index]);\n    } else {\n      const ngxPicaError: NgxPicaErrorInterface = {\n        err: NgxPicaErrorType.NO_FILES_RECEIVED\n      };\n\n      compressedImage.error(ngxPicaError);\n      compressedImage.complete();\n    }\n\n    return compressedImage.asObservable();\n  }\n\n  public compressImage(file: File, sizeInMB: number, options?: NgxPicaCompressOptionsInterface): Observable<File> {\n    const compressedImage: Subject<File> = new Subject();\n\n    if (this.bytesToMB(file.size) <= sizeInMB) {\n      setTimeout(() => {\n        compressedImage.next(file);\n        compressedImage.complete();\n      });\n    } else {\n\n      const originCanvas: HTMLCanvasElement = document.createElement('canvas');\n      const ctx = originCanvas.getContext('2d');\n      const img = new Image();\n      const reader: FileReader = new FileReader();\n\n      if (!options) {\n        options = {\n          exifOptions: {\n            forceExifOrientation: true\n          }\n        };\n      }\n\n      if (ctx) {\n        reader.addEventListener('load', (event: any) => {\n          img.onload = () => {\n            this.processImageExifOptions(img, options.exifOptions)\n              .then(orientedImage => {\n                originCanvas.width = orientedImage.width;\n                originCanvas.height = orientedImage.height;\n\n                ctx.drawImage(orientedImage, 0, 0);\n\n                this.getCompressedImage(originCanvas, file.type, 1, sizeInMB, 0)\n                  .catch((err) => compressedImage.error(err))\n                  .then((blob: Blob) => {\n                    const imgCompressed: File = this.blobToFile(blob, file.name, file.type, new Date().getTime());\n\n                    compressedImage.next(imgCompressed);\n                    compressedImage.complete();\n                  });\n              });\n          };\n\n          img.src = <string>reader.result;\n        });\n\n        reader.readAsDataURL(file);\n      } else {\n        compressedImage.error(NgxPicaErrorType.CANVAS_CONTEXT_IDENTIFIER_NOT_SUPPORTED);\n      }\n    }\n\n    return compressedImage.asObservable();\n  }\n\n  private processImageExifOptions(img: HTMLImageElement, exifOptions: ExifOptions): Promise<HTMLImageElement> {\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n      if (exifOptions.forceExifOrientation) {\n        this._ngxPicaExifService.getExifOrientedImage(img)\n          .then(orientedImage => resolve(orientedImage))\n          .catch(err => reject(err));\n      } else {\n        resolve(img);\n      }\n    });\n  }\n\n  private getCompressedImage(canvas: HTMLCanvasElement, type: string, quality: number, sizeInMB: number, step: number): Promise<Blob> {\n    return new Promise<Blob>((resolve, reject) => {\n      this.picaResizer.toBlob(canvas, type, quality)\n        .catch((err) => reject(err))\n        .then((blob: Blob) => {\n          this.checkCompressedImageSize(canvas, blob, quality, sizeInMB, step)\n            .catch((err) => reject(err))\n            .then((compressedBlob: Blob) => {\n                resolve(compressedBlob);\n              }\n            );\n        });\n    });\n  }\n\n  private checkCompressedImageSize(\n    canvas: HTMLCanvasElement,\n    blob: Blob,\n    quality: number,\n    sizeInMB: number,\n    step: number\n  ): Promise<Blob> {\n    return new Promise<Blob>((resolve,\n                              reject) => {\n\n      if (step > this.MAX_STEPS) {\n        reject(NgxPicaErrorType.NOT_BE_ABLE_TO_COMPRESS_ENOUGH);\n      } else if (this.bytesToMB(blob.size) < sizeInMB) {\n        resolve(blob);\n      } else {\n        const newQuality: number = quality - (quality * 0.1);\n        const newStep: number = step + 1;\n\n        // recursively compression\n        resolve(this.getCompressedImage(canvas, blob.type, newQuality, sizeInMB, newStep));\n      }\n    });\n  }\n\n  private picaResize(file: File, from: HTMLCanvasElement, to: HTMLCanvasElement, options: any): Promise<File> {\n    return new Promise<File>((resolve, reject) => {\n      this.picaResizer.resize(from, to, options)\n        .catch((err) => reject(err))\n        .then((resizedCanvas: HTMLCanvasElement) => this.picaResizer.toBlob(resizedCanvas, file.type))\n        .then((blob: Blob) => {\n          const fileResized: File = this.blobToFile(blob, file.name, file.type, new Date().getTime());\n          resolve(fileResized);\n        });\n    });\n  }\n\n  private blobToFile(blob: Blob, name: string, type: string, lastModified: number): File {\n    return Object.assign(new Blob([blob], {type: type}), {name: name, lastModified: lastModified});\n  }\n\n  private bytesToMB(bytes: number) {\n    return bytes / 1048576;\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class NgxPicaImageService {\n\n    private imageExtensions: string[] = [\n        'ase',\n        'art',\n        'bmp',\n        'blp',\n        'cd5',\n        'cit',\n        'cpt',\n        'cr2',\n        'cut',\n        'dds',\n        'dib',\n        'djvu',\n        'egt',\n        'exif',\n        'gif',\n        'gpl',\n        'grf',\n        'icns',\n        'ico',\n        'iff',\n        'jng',\n        'jpeg',\n        'jpg',\n        'jfif',\n        'jp2',\n        'jps',\n        'lbm',\n        'max',\n        'miff',\n        'mng',\n        'msp',\n        'nitf',\n        'ota',\n        'pbm',\n        'pc1',\n        'pc2',\n        'pc3',\n        'pcf',\n        'pcx',\n        'pdn',\n        'pgm',\n        'PI1',\n        'PI2',\n        'PI3',\n        'pict',\n        'pct',\n        'pnm',\n        'pns',\n        'ppm',\n        'psb',\n        'psd',\n        'pdd',\n        'psp',\n        'px',\n        'pxm',\n        'pxr',\n        'qfx',\n        'raw',\n        'rle',\n        'sct',\n        'sgi',\n        'rgb',\n        'int',\n        'bw',\n        'tga',\n        'tiff',\n        'tif',\n        'vtf',\n        'xbm',\n        'xcf',\n        'xpm',\n        '3dv',\n        'amf',\n        'ai',\n        'awg',\n        'cgm',\n        'cdr',\n        'cmx',\n        'dxf',\n        'e2d',\n        'egt',\n        'eps',\n        'fs',\n        'gbr',\n        'odg',\n        'svg',\n        'stl',\n        'vrml',\n        'x3d',\n        'sxd',\n        'v2d',\n        'vnd',\n        'wmf',\n        'emf',\n        'art',\n        'xar',\n        'png',\n        'webp',\n        'jxr',\n        'hdp',\n        'wdp',\n        'cur',\n        'ecw',\n        'iff',\n        'lbm',\n        'liff',\n        'nrrd',\n        'pam',\n        'pcx',\n        'pgf',\n        'sgi',\n        'rgb',\n        'rgba',\n        'bw',\n        'int',\n        'inta',\n        'sid',\n        'ras',\n        'sun',\n        'tga'\n    ];\n\n    public isImage(file: File): boolean {\n        const fileExtension: string = file.name.toLowerCase().substr(file.name.lastIndexOf('.') + 1);\n        return (this.imageExtensions.indexOf(fileExtension) !== -1);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NgxPicaService} from './ngx-pica.service';\nimport {NgxPicaExifService} from './ngx-pica-exif.service';\nimport {NgxPicaImageService} from './ngx-pica-image.service';\n\n@NgModule({\n    providers: [\n        {provide: NgxPicaService, useClass: NgxPicaService},\n        {provide: NgxPicaExifService, useClass: NgxPicaExifService},\n        {provide: NgxPicaImageService, useClass: NgxPicaImageService},\n    ]\n})\nexport class NgxPicaModule {}\n","/*\n * Public API Surface of ngx-pica\n */\n\nexport {NgxPicaModule} from './lib/ngx-pica.module';\nexport {NgxPicaService} from './lib/ngx-pica.service';\nexport {NgxPicaImageService} from './lib/ngx-pica-image.service';\nexport {NgxPicaErrorInterface} from './lib/ngx-pica-error.interface';\nexport {NgxPicaResizeOptionsInterface} from './lib/ngx-pica-resize-options.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgxPicaExifService as ɵa} from './lib/ngx-pica-exif.service';"]}