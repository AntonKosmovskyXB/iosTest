/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
var SecondsToTimePipe = /** @class */ (function () {
    function SecondsToTimePipe() {
        this.times = {
            year: 31557600,
            month: 2629746,
            day: 86400,
            hour: 3600
        };
    }
    /**
     * @param {?} seconds
     * @return {?}
     */
    SecondsToTimePipe.prototype.transform = /**
     * @param {?} seconds
     * @return {?}
     */
    function (seconds) {
        if (!seconds) {
            return "0:00";
        }
        else {
            /** @type {?} */
            var timeString = "";
            for (var key in this.times) {
                if (Math.floor(seconds / this.times[key]) > 0) {
                    timeString += Math.floor(seconds / this.times[key]).toString() + ":";
                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);
                }
            }
            timeString += Math.floor(seconds / 60).toString() + ":";
            seconds = seconds - 60 * Math.floor(seconds / 60);
            if (Math.floor(seconds) < 10) {
                timeString += "0";
            }
            timeString += Math.floor(seconds).toString();
            return timeString;
        }
    };
SecondsToTimePipe.ɵfac = function SecondsToTimePipe_Factory(t) { return new (t || SecondsToTimePipe)(); };
SecondsToTimePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "secondsToTime", type: SecondsToTimePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SecondsToTimePipe, [{
        type: Pipe,
        args: [{
                name: "secondsToTime"
            }]
    }], function () { return []; }, null); })();
    return SecondsToTimePipe;
}());
export { SecondsToTimePipe };
if (false) {
    /** @type {?} */
    SecondsToTimePipe.prototype.times;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vjb25kcy10by10aW1lLnBpcGUuanMiLCJzb3VyY2VzIjpbIm5nOi9tYXQtdmlkZW8vbGliL3BpcGVzL3NlY29uZHMtdG8tdGltZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFFcEQ7QUFHa0IsSUFIbEI7QUFDdUIsUUFHckIsVUFBSyxHQUFHO0FBQ1YsWUFBSSxJQUFJLEVBQUUsUUFBUTtBQUNsQixZQUFJLEtBQUssRUFBRSxPQUFPO0FBQ2xCLFlBQUksR0FBRyxFQUFFLEtBQUs7QUFDZCxZQUFJLElBQUksRUFBRSxJQUFJO0FBQ2QsU0FBRyxDQUFDO0FBQ0osSUFxQkEsQ0FBQztBQUNEO0FBQVE7QUFBMEI7QUFBbUI7QUFBUSxJQXJCM0QscUNBQVM7QUFBTztBQUNMO0FBQ0Q7QUFBUSxJQUZsQixVQUFVLE9BQWU7QUFDM0IsUUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQ2xCLFlBQU0sT0FBTyxNQUFNLENBQUM7QUFDcEIsU0FBSztBQUFDLGFBQUs7QUFDWDtBQUNFLGdCQURRLFVBQVUsR0FBRyxFQUFFO0FBQ3pCLFlBQU0sS0FBSyxJQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO0FBQ3BDLGdCQUFRLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUN2RCxvQkFBVSxVQUFVLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLEdBQUcsQ0FBQztBQUMvRSxvQkFBVSxPQUFPLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3RGLGlCQUFTO0FBQ1QsYUFBTztBQUNQLFlBQU0sVUFBVSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLEdBQUcsQ0FBQztBQUM5RCxZQUFNLE9BQU8sR0FBRyxPQUFPLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBQ3hELFlBQU0sSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRTtBQUNwQyxnQkFBUSxVQUFVLElBQUksR0FBRyxDQUFDO0FBQzFCLGFBQU87QUFDUCxZQUFNLFVBQVUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ25ELFlBQU0sT0FBTyxVQUFVLENBQUM7QUFDeEIsU0FBSztBQUNMLElBQUUsQ0FBQztxREE5QkYsSUFBSSxTQUFDLHNCQUNKLElBQUksRUFBRTtFQUFlLGtCQUN0Qjs7Ozs7O2dEQUNRO0FBQUMsSUE0QlYsd0JBQUM7QUFDQSxDQURBLEFBL0JELElBK0JDO0FBQ0QsU0E3QmEsaUJBQWlCO0FBQUk7QUFBYTtBQUNyQyxJQUFSLGtDQUtFOztBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBSUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBc0JBLEFBQUEsQUFwQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQTlCQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBNkJBLEFBQUEsQUFBQSxBQS9CQSxBQStCQSxBQTVCQSxBQUFBLEFBQ0EsQUFLQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuQFBpcGUoe1xyXG4gIG5hbWU6IFwic2Vjb25kc1RvVGltZVwiXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZWNvbmRzVG9UaW1lUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRpbWVzID0ge1xyXG4gICAgeWVhcjogMzE1NTc2MDAsXHJcbiAgICBtb250aDogMjYyOTc0NixcclxuICAgIGRheTogODY0MDAsXHJcbiAgICBob3VyOiAzNjAwXHJcbiAgfTtcclxuXHJcbiAgdHJhbnNmb3JtKHNlY29uZHM6IG51bWJlcikge1xyXG4gICAgaWYgKCFzZWNvbmRzKSB7XHJcbiAgICAgIHJldHVybiBcIjA6MDBcIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxldCB0aW1lU3RyaW5nID0gXCJcIjtcclxuICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy50aW1lcykge1xyXG4gICAgICAgIGlmIChNYXRoLmZsb29yKHNlY29uZHMgLyB0aGlzLnRpbWVzW2tleV0pID4gMCkge1xyXG4gICAgICAgICAgdGltZVN0cmluZyArPSBNYXRoLmZsb29yKHNlY29uZHMgLyB0aGlzLnRpbWVzW2tleV0pLnRvU3RyaW5nKCkgKyBcIjpcIjtcclxuICAgICAgICAgIHNlY29uZHMgPSBzZWNvbmRzIC0gdGhpcy50aW1lc1trZXldICogTWF0aC5mbG9vcihzZWNvbmRzIC8gdGhpcy50aW1lc1trZXldKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgdGltZVN0cmluZyArPSBNYXRoLmZsb29yKHNlY29uZHMgLyA2MCkudG9TdHJpbmcoKSArIFwiOlwiO1xyXG4gICAgICBzZWNvbmRzID0gc2Vjb25kcyAtIDYwICogTWF0aC5mbG9vcihzZWNvbmRzIC8gNjApO1xyXG4gICAgICBpZiAoTWF0aC5mbG9vcihzZWNvbmRzKSA8IDEwKSB7XHJcbiAgICAgICAgdGltZVN0cmluZyArPSBcIjBcIjtcclxuICAgICAgfVxyXG4gICAgICB0aW1lU3RyaW5nICs9IE1hdGguZmxvb3Ioc2Vjb25kcykudG9TdHJpbmcoKTtcclxuICAgICAgcmV0dXJuIHRpbWVTdHJpbmc7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==