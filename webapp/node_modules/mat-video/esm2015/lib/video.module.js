/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from "@angular/common";
import { NgModule } from "@angular/core";
import { MatButtonModule } from "@angular/material/button";
import { MatIconModule } from "@angular/material/icon";
import { MatSliderModule } from "@angular/material/slider";
import { MatVideoSourceDirective } from "./directives/mat-video-source.directive";
import { MatVideoTrackDirective } from "./directives/mat-video-track.directive";
import { MatSliderProgressBarComponent } from "./internal/mat-slider-progress-bar/mat-slider-progress-bar.component";
import { SecondsToTimePipe } from "./pipes/seconds-to-time.pipe";
import { EventService } from "./services/event.service";
import { FullscreenService } from "./services/fullscreen.service";
import { MatDownloadButtonComponent } from "./ui/mat-download-button/mat-download-button.component";
import { MatFrameByFrameControlComponent } from "./ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component";
import { MatFullscreenButtonComponent } from "./ui/mat-fullscreen-button/mat-fullscreen-button.component";
import { MatPlayButtonComponent } from "./ui/mat-play-button/mat-play-button.component";
import { MatQualityControlComponent } from "./ui/mat-quality-control/mat-quality-control.component";
import { MatSeekProgressControlComponent } from "./ui/mat-seek-progress-control/mat-seek-progress-control.component";
import { MatTimeControlComponent } from "./ui/mat-time-control/mat-time-control.component";
import { MatVideoSpinnerComponent } from "./ui/mat-video-spinner/mat-video-spinner.component";
import { MatVolumeControlComponent } from "./ui/mat-volume-control/mat-volume-control.component";
import { MatVideoComponent } from "./video.component";
import * as ɵngcc0 from '@angular/core';
export class MatVideoModule {
}
MatVideoModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatVideoModule });
MatVideoModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatVideoModule_Factory(t) { return new (t || MatVideoModule)(); }, providers: [FullscreenService, EventService], imports: [[CommonModule, MatIconModule, MatButtonModule, MatSliderModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatVideoModule, { declarations: function () { return [SecondsToTimePipe,
        MatVideoComponent,
        MatSliderProgressBarComponent,
        MatPlayButtonComponent,
        MatVolumeControlComponent,
        MatDownloadButtonComponent,
        MatFullscreenButtonComponent,
        MatTimeControlComponent,
        MatQualityControlComponent,
        MatVideoSpinnerComponent,
        MatSeekProgressControlComponent,
        MatVideoSourceDirective,
        MatVideoTrackDirective,
        MatFrameByFrameControlComponent]; }, imports: function () { return [CommonModule, MatIconModule, MatButtonModule, MatSliderModule]; }, exports: function () { return [MatVideoComponent, MatVideoSourceDirective, MatVideoTrackDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVideoModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    SecondsToTimePipe,
                    MatVideoComponent,
                    MatSliderProgressBarComponent,
                    MatPlayButtonComponent,
                    MatVolumeControlComponent,
                    MatDownloadButtonComponent,
                    MatFullscreenButtonComponent,
                    MatTimeControlComponent,
                    MatQualityControlComponent,
                    MatVideoSpinnerComponent,
                    MatSeekProgressControlComponent,
                    MatVideoSourceDirective,
                    MatVideoTrackDirective,
                    MatFrameByFrameControlComponent
                ],
                imports: [CommonModule, MatIconModule, MatButtonModule, MatSliderModule],
                exports: [MatVideoComponent, MatVideoSourceDirective, MatVideoTrackDirective],
                providers: [FullscreenService, EventService]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW8ubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovbWF0LXZpZGVvL2xpYi92aWRlby5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTNELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHNFQUFzRSxDQUFDO0FBQ3JILE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNwRyxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzRUFBc0UsQ0FBQztBQUN2SCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUMxRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUN4RixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNwRyxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxvRUFBb0UsQ0FBQztBQUNySCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUMzRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUM5RixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUNqRyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7QUF1QnRELE1BQU0sT0FBTyxjQUFjO0FBQUc7MENBckI3QixRQUFRLFNBQUM7SUFDUixZQUFZLEVBQUUsc0JBQ1osaUJBQWlCLHNCQUNqQixpQkFBaUIsc0JBQ2pCLDZCQUE2QixzQkFDN0Isc0JBQXNCLHNCQUN0Qix5QkFBeUI7RUFDekIsMEJBQTBCLHNCQUMxQiw0QkFBNEIsc0JBQzVCLHVCQUF1QixzQkFDdkI7TUFBMEI7Q0FDMUIsd0JBQXdCO1FBQ3hCO09BQStCLHNCQUMvQjtpQkFBdUI7R0FDdkIsc0JBQXNCO1NBQ3RCO09BQStCLGtCQUNoQztPQUNELE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRTtVQUFhLEVBQUUsZUFBZSxFQUFFO0dBQWUsQ0FBQyxrQkFDeEUsT0FBTyxFQUFFLENBQUM7Z0JBQWlCLEVBQUU7U0FBdUIsRUFBRSxzQkFBc0IsQ0FBQyxrQkFDN0UsU0FBUyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsWUFBWSxDQUFDLGNBQzdDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBM0NBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQXVCQSxBQUFBLEFBQUEsQUFBQSxBQXJCQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgTWF0QnV0dG9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2J1dHRvblwiO1xyXG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2ljb25cIjtcclxuaW1wb3J0IHsgTWF0U2xpZGVyTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL3NsaWRlclwiO1xyXG5cclxuaW1wb3J0IHsgTWF0VmlkZW9Tb3VyY2VEaXJlY3RpdmUgfSBmcm9tIFwiLi9kaXJlY3RpdmVzL21hdC12aWRlby1zb3VyY2UuZGlyZWN0aXZlXCI7XHJcbmltcG9ydCB7IE1hdFZpZGVvVHJhY2tEaXJlY3RpdmUgfSBmcm9tIFwiLi9kaXJlY3RpdmVzL21hdC12aWRlby10cmFjay5kaXJlY3RpdmVcIjtcclxuaW1wb3J0IHsgTWF0U2xpZGVyUHJvZ3Jlc3NCYXJDb21wb25lbnQgfSBmcm9tIFwiLi9pbnRlcm5hbC9tYXQtc2xpZGVyLXByb2dyZXNzLWJhci9tYXQtc2xpZGVyLXByb2dyZXNzLWJhci5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgU2Vjb25kc1RvVGltZVBpcGUgfSBmcm9tIFwiLi9waXBlcy9zZWNvbmRzLXRvLXRpbWUucGlwZVwiO1xyXG5pbXBvcnQgeyBFdmVudFNlcnZpY2UgfSBmcm9tIFwiLi9zZXJ2aWNlcy9ldmVudC5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEZ1bGxzY3JlZW5TZXJ2aWNlIH0gZnJvbSBcIi4vc2VydmljZXMvZnVsbHNjcmVlbi5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IE1hdERvd25sb2FkQnV0dG9uQ29tcG9uZW50IH0gZnJvbSBcIi4vdWkvbWF0LWRvd25sb2FkLWJ1dHRvbi9tYXQtZG93bmxvYWQtYnV0dG9uLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBNYXRGcmFtZUJ5RnJhbWVDb250cm9sQ29tcG9uZW50IH0gZnJvbSBcIi4vdWkvbWF0LWZyYW1lLWJ5LWZyYW1lLWNvbnRyb2wvbWF0LWZyYW1lLWJ5LWZyYW1lLWNvbnRyb2wuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE1hdEZ1bGxzY3JlZW5CdXR0b25Db21wb25lbnQgfSBmcm9tIFwiLi91aS9tYXQtZnVsbHNjcmVlbi1idXR0b24vbWF0LWZ1bGxzY3JlZW4tYnV0dG9uLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBNYXRQbGF5QnV0dG9uQ29tcG9uZW50IH0gZnJvbSBcIi4vdWkvbWF0LXBsYXktYnV0dG9uL21hdC1wbGF5LWJ1dHRvbi5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTWF0UXVhbGl0eUNvbnRyb2xDb21wb25lbnQgfSBmcm9tIFwiLi91aS9tYXQtcXVhbGl0eS1jb250cm9sL21hdC1xdWFsaXR5LWNvbnRyb2wuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE1hdFNlZWtQcm9ncmVzc0NvbnRyb2xDb21wb25lbnQgfSBmcm9tIFwiLi91aS9tYXQtc2Vlay1wcm9ncmVzcy1jb250cm9sL21hdC1zZWVrLXByb2dyZXNzLWNvbnRyb2wuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE1hdFRpbWVDb250cm9sQ29tcG9uZW50IH0gZnJvbSBcIi4vdWkvbWF0LXRpbWUtY29udHJvbC9tYXQtdGltZS1jb250cm9sLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBNYXRWaWRlb1NwaW5uZXJDb21wb25lbnQgfSBmcm9tIFwiLi91aS9tYXQtdmlkZW8tc3Bpbm5lci9tYXQtdmlkZW8tc3Bpbm5lci5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTWF0Vm9sdW1lQ29udHJvbENvbXBvbmVudCB9IGZyb20gXCIuL3VpL21hdC12b2x1bWUtY29udHJvbC9tYXQtdm9sdW1lLWNvbnRyb2wuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE1hdFZpZGVvQ29tcG9uZW50IH0gZnJvbSBcIi4vdmlkZW8uY29tcG9uZW50XCI7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgU2Vjb25kc1RvVGltZVBpcGUsXHJcbiAgICBNYXRWaWRlb0NvbXBvbmVudCxcclxuICAgIE1hdFNsaWRlclByb2dyZXNzQmFyQ29tcG9uZW50LFxyXG4gICAgTWF0UGxheUJ1dHRvbkNvbXBvbmVudCxcclxuICAgIE1hdFZvbHVtZUNvbnRyb2xDb21wb25lbnQsXHJcbiAgICBNYXREb3dubG9hZEJ1dHRvbkNvbXBvbmVudCxcclxuICAgIE1hdEZ1bGxzY3JlZW5CdXR0b25Db21wb25lbnQsXHJcbiAgICBNYXRUaW1lQ29udHJvbENvbXBvbmVudCxcclxuICAgIE1hdFF1YWxpdHlDb250cm9sQ29tcG9uZW50LFxyXG4gICAgTWF0VmlkZW9TcGlubmVyQ29tcG9uZW50LFxyXG4gICAgTWF0U2Vla1Byb2dyZXNzQ29udHJvbENvbXBvbmVudCxcclxuICAgIE1hdFZpZGVvU291cmNlRGlyZWN0aXZlLFxyXG4gICAgTWF0VmlkZW9UcmFja0RpcmVjdGl2ZSxcclxuICAgIE1hdEZyYW1lQnlGcmFtZUNvbnRyb2xDb21wb25lbnRcclxuICBdLFxyXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIE1hdEljb25Nb2R1bGUsIE1hdEJ1dHRvbk1vZHVsZSwgTWF0U2xpZGVyTW9kdWxlXSxcclxuICBleHBvcnRzOiBbTWF0VmlkZW9Db21wb25lbnQsIE1hdFZpZGVvU291cmNlRGlyZWN0aXZlLCBNYXRWaWRlb1RyYWNrRGlyZWN0aXZlXSxcclxuICBwcm92aWRlcnM6IFtGdWxsc2NyZWVuU2VydmljZSwgRXZlbnRTZXJ2aWNlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWF0VmlkZW9Nb2R1bGUge31cclxuIl19