import { EventEmitter, OnChanges, ElementRef, Renderer2, SimpleChanges } from '@angular/core';
import { Color } from './../../../helpers/color.class';
import { BaseComponent } from './../base.component';
import * as ɵngcc0 from '@angular/core';
export declare class AlphaComponent extends BaseComponent implements OnChanges {
    color: Color;
    colorChange: EventEmitter<Color>;
    pointer: ElementRef;
    private isVertical;
    constructor(renderer: Renderer2, document: any, elementRef: ElementRef);
    onClick(event: any): void;
    set vertical(value: string);
    /**
     * color can be changed through inputs
     * and then we need to move pointer
     */
    ngOnChanges(changes: SimpleChanges): void;
    movePointer({ x, y, height, width }: {
        x: any;
        y: any;
        height: any;
        width: any;
    }): void;
    /**
     * hue value is in range from 0 to 360°
     */
    private changePointerPosition;
    get gradient(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AlphaComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AlphaComponent, "alpha-component", never, { "vertical": "vertical"; "color": "color"; }, { "colorChange": "colorChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxwaGEuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFscGhhLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4vLi4vLi4vLi4vaGVscGVycy9jb2xvci5jbGFzcyc7XHJcbmltcG9ydCB7IEJhc2VDb21wb25lbnQgfSBmcm9tICcuLy4uL2Jhc2UuY29tcG9uZW50JztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQWxwaGFDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICAgIGNvbG9yOiBDb2xvcjtcclxuICAgIGNvbG9yQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q29sb3I+O1xyXG4gICAgcG9pbnRlcjogRWxlbWVudFJlZjtcclxuICAgIHByaXZhdGUgaXNWZXJ0aWNhbDtcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGRvY3VtZW50OiBhbnksIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xyXG4gICAgb25DbGljayhldmVudDogYW55KTogdm9pZDtcclxuICAgIHNldCB2ZXJ0aWNhbCh2YWx1ZTogc3RyaW5nKTtcclxuICAgIC8qKlxyXG4gICAgICogY29sb3IgY2FuIGJlIGNoYW5nZWQgdGhyb3VnaCBpbnB1dHNcclxuICAgICAqIGFuZCB0aGVuIHdlIG5lZWQgdG8gbW92ZSBwb2ludGVyXHJcbiAgICAgKi9cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgbW92ZVBvaW50ZXIoeyB4LCB5LCBoZWlnaHQsIHdpZHRoIH06IHtcclxuICAgICAgICB4OiBhbnk7XHJcbiAgICAgICAgeTogYW55O1xyXG4gICAgICAgIGhlaWdodDogYW55O1xyXG4gICAgICAgIHdpZHRoOiBhbnk7XHJcbiAgICB9KTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogaHVlIHZhbHVlIGlzIGluIHJhbmdlIGZyb20gMCB0byAzNjDCsFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNoYW5nZVBvaW50ZXJQb3NpdGlvbjtcclxuICAgIGdldCBncmFkaWVudCgpOiBzdHJpbmc7XHJcbn1cclxuIl19