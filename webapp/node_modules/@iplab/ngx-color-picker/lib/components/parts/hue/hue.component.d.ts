import { Renderer2, ElementRef, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';
import { Color } from './../../../helpers/color.class';
import { BaseComponent } from './../base.component';
import * as ɵngcc0 from '@angular/core';
export declare class HueComponent extends BaseComponent implements OnChanges {
    hue: Color;
    hueChange: EventEmitter<Color>;
    color: Color;
    colorChange: EventEmitter<Color>;
    pointer: ElementRef;
    private isVertical;
    constructor(renderer: Renderer2, document: any, elementRef: ElementRef);
    onClick(event: any): void;
    set vertical(value: string);
    /**
     * color can be changed through inputs
     * and then we need to move pointer
     */
    ngOnChanges(changes: SimpleChanges): void;
    movePointer({ x, y, height, width }: {
        x: any;
        y: any;
        height: any;
        width: any;
    }): void;
    /**
     * hue value is in range from 0 to 360°
     */
    private changePointerPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HueComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HueComponent, "hue-component", never, { "vertical": "vertical"; "hue": "hue"; "color": "color"; }, { "hueChange": "hueChange"; "colorChange": "colorChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHVlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJodWUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlbmRlcmVyMiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICcuLy4uLy4uLy4uL2hlbHBlcnMvY29sb3IuY2xhc3MnO1xyXG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi8uLi9iYXNlLmNvbXBvbmVudCc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEh1ZUNvbXBvbmVudCBleHRlbmRzIEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gICAgaHVlOiBDb2xvcjtcclxuICAgIGh1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPENvbG9yPjtcclxuICAgIGNvbG9yOiBDb2xvcjtcclxuICAgIGNvbG9yQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q29sb3I+O1xyXG4gICAgcG9pbnRlcjogRWxlbWVudFJlZjtcclxuICAgIHByaXZhdGUgaXNWZXJ0aWNhbDtcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGRvY3VtZW50OiBhbnksIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xyXG4gICAgb25DbGljayhldmVudDogYW55KTogdm9pZDtcclxuICAgIHNldCB2ZXJ0aWNhbCh2YWx1ZTogc3RyaW5nKTtcclxuICAgIC8qKlxyXG4gICAgICogY29sb3IgY2FuIGJlIGNoYW5nZWQgdGhyb3VnaCBpbnB1dHNcclxuICAgICAqIGFuZCB0aGVuIHdlIG5lZWQgdG8gbW92ZSBwb2ludGVyXHJcbiAgICAgKi9cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgbW92ZVBvaW50ZXIoeyB4LCB5LCBoZWlnaHQsIHdpZHRoIH06IHtcclxuICAgICAgICB4OiBhbnk7XHJcbiAgICAgICAgeTogYW55O1xyXG4gICAgICAgIGhlaWdodDogYW55O1xyXG4gICAgICAgIHdpZHRoOiBhbnk7XHJcbiAgICB9KTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogaHVlIHZhbHVlIGlzIGluIHJhbmdlIGZyb20gMCB0byAzNjDCsFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNoYW5nZVBvaW50ZXJQb3NpdGlvbjtcclxufVxyXG4iXX0=