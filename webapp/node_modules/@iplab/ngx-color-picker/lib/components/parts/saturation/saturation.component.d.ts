import { EventEmitter, Renderer2, ElementRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { Color } from './../../../helpers/color.class';
import { BaseComponent } from './../base.component';
import * as ɵngcc0 from '@angular/core';
export declare class SaturationComponent extends BaseComponent implements OnInit, OnChanges {
    hue: Color;
    color: Color;
    colorChange: EventEmitter<Color>;
    pointer: ElementRef;
    constructor(renderer: Renderer2, document: any, elementRef: ElementRef);
    get backgroundColor(): string;
    onClick(event: any): void;
    ngOnInit(): void;
    /**
     * color can be changed through inputs
     * and then we need to move pointer
     */
    ngOnChanges(changes: SimpleChanges): void;
    movePointer({ x, y, height, width }: {
        x: any;
        y: any;
        height: any;
        width: any;
    }): void;
    private changePointerPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SaturationComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SaturationComponent, "saturation-component", never, { "hue": "hue"; "color": "color"; }, { "colorChange": "colorChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F0dXJhdGlvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic2F0dXJhdGlvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgUmVuZGVyZXIyLCBFbGVtZW50UmVmLCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4vLi4vLi4vLi4vaGVscGVycy9jb2xvci5jbGFzcyc7XHJcbmltcG9ydCB7IEJhc2VDb21wb25lbnQgfSBmcm9tICcuLy4uL2Jhc2UuY29tcG9uZW50JztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2F0dXJhdGlvbkNvbXBvbmVudCBleHRlbmRzIEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgICBodWU6IENvbG9yO1xyXG4gICAgY29sb3I6IENvbG9yO1xyXG4gICAgY29sb3JDaGFuZ2U6IEV2ZW50RW1pdHRlcjxDb2xvcj47XHJcbiAgICBwb2ludGVyOiBFbGVtZW50UmVmO1xyXG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZG9jdW1lbnQ6IGFueSwgZWxlbWVudFJlZjogRWxlbWVudFJlZik7XHJcbiAgICBnZXQgYmFja2dyb3VuZENvbG9yKCk6IHN0cmluZztcclxuICAgIG9uQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBjb2xvciBjYW4gYmUgY2hhbmdlZCB0aHJvdWdoIGlucHV0c1xyXG4gICAgICogYW5kIHRoZW4gd2UgbmVlZCB0byBtb3ZlIHBvaW50ZXJcclxuICAgICAqL1xyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XHJcbiAgICBtb3ZlUG9pbnRlcih7IHgsIHksIGhlaWdodCwgd2lkdGggfToge1xyXG4gICAgICAgIHg6IGFueTtcclxuICAgICAgICB5OiBhbnk7XHJcbiAgICAgICAgaGVpZ2h0OiBhbnk7XHJcbiAgICAgICAgd2lkdGg6IGFueTtcclxuICAgIH0pOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBjaGFuZ2VQb2ludGVyUG9zaXRpb247XHJcbn1cclxuIl19