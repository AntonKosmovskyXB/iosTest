{"version":3,"file":"iplab-ngx-color-picker.js","sources":["../../../projects/iplab/ngx-color-picker/src/lib/helpers/base-color.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/cmyk.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/hsla.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/hsva.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/rgba.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/colors-table.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/color.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/base.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/saturation/saturation.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/services/color-picker.service.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/indicator/indicator.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/hue/hue.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/alpha/alpha.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/rgba-input/rgba-input.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/hsla-input/hsla-input.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/inputs/hex-input/hex-input.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-presets/color-presets.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-preset/color-preset.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-preset-sublist/color-preset-sublist.animation.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/parts/color-preset-sublist/color-preset-sublist.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/directives/color-picker-input.directive.ts","../../../projects/iplab/ngx-color-picker/src/lib/pipes/chunks.pipe.ts","../../../projects/iplab/ngx-color-picker/src/lib/pipes/reverse.pipe.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/control.class.ts","../../../projects/iplab/ngx-color-picker/src/lib/helpers/helper.functions.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/chrome-picker/chrome-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/sketch-picker/sketch-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/compact-picker/compact-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/github-picker/github-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/swatches-picker/swatches-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/components/ip-picker/ip-picker.component.ts","../../../projects/iplab/ngx-color-picker/src/lib/color-picker.module.ts","../../../projects/iplab/ngx-color-picker/src/iplab-ngx-color-picker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEsB,SAAS;AAC/B;AAAE;ACDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,IAAK,SAAQ,SAAS;AACnC,IACI,YAAmB,IAAY,EAAS,OAAe,EAAS,MAAc,EAAS,KAAa;AACxG,QAAQ,KAAK,EAAE,CAAC;AAChB,QAFuB,SAAI,GAAJ,IAAI,CAAQ;AAAC,QAAQ,YAAO,GAAP,OAAO,CAAQ;AAAC,QAAQ,WAAM,GAAN,MAAM,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAQ;AAAC,KAEpG;AACL,IACW,QAAQ;AAAK,QAChB,OAAO,QAAQ,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AAC5G,KAAK;AACL,IACW,OAAO;AAClB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,KAAK;AACL,IACW,UAAU;AACrB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC,KAAK;AACL,IACW,SAAS;AACpB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,KAAK;AACL,IACW,QAAQ;AACnB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,KAAK;AACL;AACA;AClCA;AACA;AACA;AAAG;AAC2B;AACO;AACY;AACxB;AACtB,MACU,IAAK,SAAQ,SAAS;AACnC,IACI,YAAmB,GAAW,EAAS,UAAkB,EAAS,SAAiB,EAAS,KAAa;AAC7G,QAAQ,KAAK,EAAE,CAAC;AAChB,QAFuB,QAAG,GAAH,GAAG,CAAQ;AAAC,QAAQ,eAAU,GAAV,UAAU,CAAQ;AAAC,QAAQ,cAAS,GAAT,SAAS,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAQ;AAAC,KAEzG;AACL,IACW,QAAQ,CAAC,mBAA4B,IAAI;AAAI,QAChD,OAAO,gBAAgB;AAC/B,cAAc,QAAQ,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,aAAa,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,GAAG;AAC7G,cAAc,OAAO,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,aAAa,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC;AACzF,KAAK;AACL,IACW,MAAM;AACjB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,KAAK;AACL,IACW,aAAa;AACxB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,KAAK;AACL,IACW,YAAY;AACvB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC1C,KAAK;AACL,IACW,QAAQ;AAAK,QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAClD,KAAK;AACL;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,IAAK,SAAQ,SAAS;AACnC,IACI,YAAmB,GAAW,EAAS,UAAkB,EAAS,KAAa,EAAS,KAAa;AACzG,QAAQ,KAAK,EAAE,CAAC;AAChB,QAFuB,QAAG,GAAH,GAAG,CAAQ;AAAC,QAAQ,eAAU,GAAV,UAAU,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAQ;AAAC,KAErG;AACL,IACW,QAAQ,CAAC,mBAA4B,IAAI;AAAI,QAChD,OAAO,gBAAgB,GAAG,QAAQ,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,aAAa,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,GAAG;AAC7H,cAAc,OAAO,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,aAAa,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AACrF,KAAK;AACL,IACW,MAAM;AACjB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,KAAK;AACL,IACW,aAAa;AACxB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,KAAK;AACL,IACW,QAAQ;AACnB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,KAAK;AACL,IACW,QAAQ;AAAK,QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAClD,KAAK;AACL;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAa,IAAK,SAAQ,SAAS;AACnC,IACI,YAAmB,GAAW,EAAS,KAAa,EAAS,IAAY,EAAS,KAAa;AACnG,QAAQ,KAAK,EAAE,CAAC;AAChB,QAFuB,QAAG,GAAH,GAAG,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAQ;AAAC,QAAQ,SAAI,GAAJ,IAAI,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAQ;AAAC,KAE/F;AACL,IACW,QAAQ,CAAC,mBAA4B,IAAI;AAAI,QAChD,OAAO,gBAAgB;AAC/B,cAAc,QAAQ,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG;AACjG,cAAc,OAAO,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC;AAC7E,KAAK;AACL,IACW,MAAM;AAAK,QACd,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,KAAK;AACL,IACW,QAAQ;AAAK,QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,KAAK;AACL,IACW,OAAO;AAAK,QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,KAAK;AACL,IACW,QAAQ;AAAK,QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAClD,KAAK;AACL;AACA;ACpCA;AACA;AACA;AACA,MAAa,WAAW;AACxB;AAAkB,uBAAW,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,wBAAY,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,gBAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAChC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,iBAAK,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7B,0BAAc,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,gBAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9B,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,qBAAS,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACtC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAClC,0BAAc,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,oBAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACnC,gBAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAChC,oBAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,oBAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,yBAAa,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1C,oBAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,qBAAS,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,oBAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;AAChC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,0BAAc,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1C,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,wBAAY,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,yBAAa,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,yBAAa,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACxC,yBAAa,GAAG,WAAW,CAAC,aAAa,CAAC;AAC1C,yBAAa,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,oBAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,uBAAW,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,mBAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAC9B,sBAAU,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACrC,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,uBAAW,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACvC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,gBAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACtC,gBAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,gBAAI,GAAG,WAAW,CAAC,IAAI,CAAC;AACxB,iBAAK,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACxC,oBAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACrC,kBAAM,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACjC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,oBAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,yBAAa,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC3C,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC,wBAAY,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,gCAAoB,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClD,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,qBAAS,GAAG,WAAW,CAAC,SAAS,CAAC;AAClC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,yBAAa,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,wBAAY,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,0BAAc,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,0BAAc,GAAG,WAAW,CAAC,cAAc,CAAC;AAC5C,0BAAc,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,gBAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B,qBAAS,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACrC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,4BAAgB,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9C,sBAAU,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,wBAAY,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,wBAAY,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,0BAAc,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC3C,2BAAe,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7C,6BAAiB,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7C,2BAAe,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,2BAAe,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,wBAAY,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,oBAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,gBAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9B,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACtC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,yBAAa,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC3C,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,yBAAa,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC3C,yBAAa,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC3C,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,gBAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACjC,gBAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,gBAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,eAAG,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7B,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,qBAAS,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACvC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACvC,oBAAQ,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACpC,oBAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAClC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,qBAAS,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,qBAAS,GAAG,WAAW,CAAC,SAAS,CAAC;AAClC,gBAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,uBAAW,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACvC,qBAAS,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,eAAG,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACjC,gBAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAChC,mBAAO,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAClC,qBAAS,GAAG,IAAI,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,iBAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACnC,sBAAU,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,kBAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,uBAAW,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;AACzD;AAAC,MClJY,KAAK;AAClB,IAWI,YAAY,WAAyB;AACzC;AAAY;AACmB;AAE9B;AAEmB;AAA6B;AAAmB;AAAY,QATpE,SAAI,GAAS,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C,QAAY,SAAI,GAAS,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChD,QAEQ,IAAI,WAAW,EAAE;AACzB,YAAY,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAC5C,SAAS;AACT,KAAK;AACL,IACW,OAAO,IAAI,CAAC,KAA+C;AAAI,QAClE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,YAAY,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,SAAS;AAAC,aAAK,IAAI,KAAK,YAAY,KAAK,EAAE;AAC3C,YAAY,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;AACjC,SAAS;AAAC,aAAK,IAAI,KAAK,YAAY,IAAI,EAAE;AAC1C,YAAY,OAAO,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACxF,SAAS;AAAC,aAAK,IAAI,KAAK,YAAY,IAAI,EAAE;AAC1C,YAAY,OAAO,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9F,SAAS;AAAC,aAAK,IAAI,KAAK,YAAY,IAAI,EAAE;AAC1C,YAAY,OAAO,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAClG,SAAS;AACT,QACQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACO;AACyC;AACzC,IACI,KAAK;AAAK,QACb,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AAC1C,KAAK;AACL;AACO;AAC0D;AAC1D,IACI,aAAa,CAAC,KAAkB;AAAI,QACvC,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACzC,KAAK;AACL;AACO;AAC4B;AAC5B,IACI,OAAO,CAAC,MAAc,IAAI,EAAE,aAAqB,GAAG,EAAE,aAAqB,GAAG,EAAE,QAAgB,CAAC;AAAI,QACxG,IAAI,GAAG,IAAI,IAAI,EAAE;AACzB,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAChC,SAAS;AACT,QACQ,IAAI,UAAU,IAAI,IAAI,EAAE;AAChC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC9C,SAAS;AACT,QACQ,IAAI,UAAU,IAAI,IAAI,EAAE;AAChC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;AACzC,SAAS;AACT,QACQ,IAAI,KAAK,IAAI,IAAI,EAAE;AAC3B,YAAY,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC1D,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACpC,SAAS;AACT,QACQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACO;AACsB;AACtB,IACI,OAAO,CAAC,MAAc,IAAI,EAAE,QAAgB,IAAI,EAAE,OAAe,IAAI,EAAE,QAAgB,CAAC;AAAI,QAC/F,IAAI,GAAG,IAAI,IAAI,EAAE;AACzB,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAChC,SAAS;AACT,QACQ,IAAI,KAAK,IAAI,IAAI,EAAE;AAC3B,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACpC,SAAS;AACT,QACQ,IAAI,IAAI,IAAI,IAAI,EAAE;AAC1B,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAClC,SAAS;AACT,QACQ,IAAI,KAAK,IAAI,IAAI,EAAE;AAC3B,YAAY,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC1D,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACpC,SAAS;AACT,QACQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACO;AACsB;AACtB,IACI,OAAO,CAAC,GAAW,EAAE,UAAkB,EAAE,SAAiB,EAAE,QAAgB,CAAC;AAAI,QACpF,IAAI,KAAK,IAAI,IAAI,EAAE;AAC3B,YAAY,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC1D,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACpC,SAAS;AACT,QACQ,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACjE,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACO;AAC0F;AAC1F,IACI,WAAW,CAAC,QAAiB,KAAK;AAAI;AACtB,QACnB,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5I,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACzF,SAAS;AACT;AACA,QAAQ,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AACjC,KAAK;AACL;AACO;AACmD;AACnD,IACI,YAAY;AAAK,QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAK;AACL;AACO;AAC8C;AAC9C,IACI,WAAW;AAAK,QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzC,KAAK;AACL;AACO;AACsD;AACtD,IACI,YAAY;AAAK,QACpB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;AACzC,KAAK;AACL;AACO;AACiD;AACjD,IACI,WAAW;AAAK,QACnB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAK;AACL;AACO;AACyD;AACzD,IACI,YAAY;AAAK,QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpC,KAAK;AACL;AACO;AACiD;AACjD,IACI,WAAW;AAAK,QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzC,KAAK;AACL;AACO;AAC4D;AAC5D,IACI,YAAY;AAAK,QACpB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;AACzC,KAAK;AACL,IACW,OAAO;AAAK,QACf,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/F,KAAK;AACL,IACW,OAAO;AAAK,QACf,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzF,KAAK;AACL,IACW,OAAO;AAAK,QACf,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1C,KAAK;AACL,IACW,OAAO;AAAK,QACf,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1C,KAAK;AACL,IACY,UAAU,CAAC,KAAW;AAAI,QAC9B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;AACzC,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AACpC,QAAQ,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;AACtD,QAAQ,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACzF,QACQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,SAAS,GAAG,GAAG,EAAE,UAAU,GAAG,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7E,KAAK;AACL,IACY,UAAU,CAAC,KAAW;AAAI,QAC9B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,IAAI,CAAC,CAAC;AAC9C,QAAQ,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAClE,QAAQ,MAAM,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClC,QAAQ,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAClD,QACQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7D,KAAK;AACL,IACY,UAAU,CAAC,KAAW;AAAI,QAC9B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AACpC,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AACxC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;AACtC,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAClC,QACQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAChD,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAChD,QAAQ,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;AAClC,QACQ,IAAI,GAAG,GAAG,CAAC,CAAC;AACpB,QAAQ,IAAI,UAAU,GAAW,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;AAC/D,QAAQ,IAAI,UAAU,GAAW,IAAI,CAAC;AACtC,QACQ,IAAI,IAAI,KAAK,IAAI,EAAE;AAC3B,YAAY,QAAQ,IAAI;AACxB,gBAAgB,KAAK,GAAG;AACxB,oBAAoB,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,KAAK;AAC1B,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC;AACnD,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,IAAI;AACzB,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,KAAK,CAAC;AACpD,oBAAoB,MAAM;AAC1B,aAAa;AACb,YAAY,GAAG,IAAI,CAAC,CAAC;AACrB,SAAS;AACT,QACQ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAQ,UAAU,GAAG,UAAU,GAAG,GAAG,CAAC;AACtC,QAAQ,UAAU,GAAG,UAAU,GAAG,GAAG,CAAC;AACtC,QACQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC5D,KAAK;AACL,IACY,UAAU,CAAC,KAAW;AAAI,QAC9B,IAAI,GAAG,GAAG,CAAC,CAAC;AACpB,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;AACtB,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;AACrB,QAAQ,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;AAClD,QAAQ,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AAC7C,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAClC,QAAQ,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;AACnC,QACQ,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxC,QAAQ,MAAM,UAAU,GAAG,GAAG,GAAG,OAAO,CAAC;AACzC,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,IAAI,UAAU,CAAC;AAChD,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,UAAU,CAAC,IAAI,UAAU,CAAC;AAC/D,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,IAAI,UAAU,CAAC;AACrE,QACQ,QAAQ,OAAO;AACvB,YAAY,KAAK,CAAC,CAAC;AACnB,YAAY,KAAK,CAAC;AAAE,gBAAA,GAAG,GAAG,UAAU,CAAC;AAAC,gBAAA,KAAK,GAAG,CAAC,CAAC;AAAC,gBAAA,IAAI,GAAG,CAAC,CAAC;AAAC,gBAAA,MAAM;AACjE,YAAY,KAAK,CAAC;AAAE,gBAAA,GAAG,GAAG,CAAC,CAAC;AAAC,gBAAA,KAAK,GAAG,UAAU,CAAC;AAAC,gBAAA,IAAI,GAAG,CAAC,CAAC;AAAC,gBAAA,MAAM;AACjE,YAAY,KAAK,CAAC;AAAE,gBAAA,GAAG,GAAG,CAAC,CAAC;AAAC,gBAAA,KAAK,GAAG,UAAU,CAAC;AAAC,gBAAA,IAAI,GAAG,CAAC,CAAC;AAAC,gBAAA,MAAM;AACjE,YAAY,KAAK,CAAC;AAAE,gBAAA,GAAG,GAAG,CAAC,CAAC;AAAC,gBAAA,KAAK,GAAG,CAAC,CAAC;AAAC,gBAAA,IAAI,GAAG,UAAU,CAAC;AAAC,gBAAA,MAAM;AACjE,YAAY,KAAK,CAAC;AAAE,gBAAA,GAAG,GAAG,CAAC,CAAC;AAAC,gBAAA,KAAK,GAAG,CAAC,CAAC;AAAC,gBAAA,IAAI,GAAG,UAAU,CAAC;AAAC,gBAAA,MAAM;AACjE,YAAY,KAAK,CAAC;AAAE,gBAAA,GAAG,GAAG,UAAU,CAAC;AAAC,gBAAA,KAAK,GAAG,CAAC,CAAC;AAAC,gBAAA,IAAI,GAAG,CAAC,CAAC;AAAC,gBAAA,MAAM;AACjE,SAAS;AACT,QACQ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAQ,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;AAC5B,QAAQ,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AAC1B,QACQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,IACY,UAAU,CAAC,KAAW;AAAI;AAChB,QACd,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AACpC,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AACxC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;AACtC,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAClC,QACQ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC/C,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC/C,QACQ,IAAI,GAAG,GAAG,CAAC,CAAC;AACpB,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;AAC3B,QAAQ,IAAI,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AACxC,QAAQ,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AAChC,QACQ,IAAI,GAAG,KAAK,GAAG,EAAE;AACzB,YAAY,UAAU,GAAG,SAAS,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3F,YAAY,QAAQ,GAAG;AACvB,gBAAgB,KAAK,GAAG;AACxB,oBAAoB,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,KAAK;AAC1B,oBAAoB,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,KAAK,GAAG,CAAC,CAAC;AACnD,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,IAAI;AACzB,oBAAoB,GAAG,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC;AACpD,oBAAoB,MAAM;AAC1B,aAAa;AACb,YACY,GAAG,IAAI,CAAC,CAAC;AACrB,SAAS;AACT,QACQ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAQ,UAAU,GAAG,UAAU,GAAG,GAAG,CAAC;AACtC,QAAQ,SAAS,GAAG,SAAS,GAAG,GAAG,CAAC;AACpC,QACQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAC3D,KAAK;AACL;AACO;AAC2B;AAC5B;AACe;AACK;AACD;AAClB,IACK,UAAU,CAAC,KAAW;AAAI,QAC9B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AACpC,QAAQ,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;AAClD,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;AAChD,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAClC,QACQ,IAAI,GAAG,GAAG,SAAS,CAAC;AAC5B,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC;AAC9B,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC;AAC7B,QACQ,IAAI,UAAU,KAAK,CAAC,EAAE;AAC9B,YAAY,MAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,SAAS,GAAG,UAAU,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC;AACzH,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;AACxC,YACY,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACrD,YAAY,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC7C,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtD,SAAS;AACT,QACQ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAQ,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;AAC5B,QAAQ,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AAC1B,QACQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,IACY,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAAI;AACZ,QACZ,IAAI,CAAC,GAAG,CAAC,EAAE;AAAE,YAAA,CAAC,IAAI,CAAC,CAAC;AAAC,SAAC;AAC9B,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;AAAE,YAAA,CAAC,IAAI,CAAC,CAAC;AAAC,SAAC;AAC9B,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAAE,YAAA,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAAC,SAAC;AACtD,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAAE,YAAA,OAAO,CAAC,CAAC;AAAC,SAAC;AACpC,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAAE,YAAA,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAAC,SAAC;AAChE,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL;AACO;AAC6D;AAC9D;AACqE;AACK;AACF;AACxE;AAC+C;AAC/C;AACsD;AACC;AACF;AACpD,IACK,UAAU,CAAC,KAAW;AAAI,QAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AACxC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;AACtC,QAAQ,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;AAC5C,QAAQ,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;AAC1C,QACQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACxD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAC7D,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAC3D,QACQ,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAQ,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;AAC5B,QAAQ,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AAC1B,QACQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7C,KAAK;AACL;AACO;AACmG;AAChD;AACvC;AACA;AACA;AACkE;AACd;AACgC;AACxE;AACzB;AACwH;AACjH;AACP;AAC+D;AACpC;AAC3B;AACqE;AAC1C;AAC3B;AACkE;AACtC;AAC3B,IACK,UAAU,CAAC,KAAW;AAAI,QAC9B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AACpC,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AACxC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;AACtC,QACQ,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;AAC3B,QAAQ,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC;AAChC,QAAQ,IAAI,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACpD,QACQ,IAAI,KAAK,KAAK,CAAC,EAAE;AACzB,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,SAAS;AACT,QACQ,IAAI,GAAG,CAAC,IAAI,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5C,QAAQ,OAAO,GAAG,CAAC,OAAO,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAClD,QAAQ,MAAM,GAAG,CAAC,MAAM,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAChD,QACQ,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;AAC5B,QAAQ,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;AAC1B,QAAQ,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC;AAChC,QAAQ,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;AAC9B,QACQ,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACtD,KAAK;AACL,IACY,WAAW,CAAC,CAAS;AAAI,QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACzC,KAAK;AACL,IACY,aAAa,CAAC,WAAwB;AAAI,QAC9C,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;AAChE;AACA;AACA;AACA,QAAQ,IAAI,IAAI,GAAS,WAAW,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;AAClD;AACW;AACQ;AACR,QACH,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC5B,YAAY,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpC,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACtC,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC;AACtB,YAAY,IAAI,QAAQ,CAAC;AACzB,YACY,IAAI,MAAM,KAAK,CAAC,EAAE;AAC9B,gBAAgB,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,CAAC,CAAC;AACvE,aAAa;AAAC,iBAAK,IAAI,MAAM,KAAK,CAAC,EAAE;AACrC,gBAAgB,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC9C,aAAa;AAAC,iBAAK,IAAI,MAAM,KAAK,CAAC,EAAE;AACrC,gBAAgB,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,gBAAgB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;AAChD,gBAAgB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;AACxE,gBAAgB,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC9C,aAAa;AACb,YACY,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACvC,gBAAgB,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpH,aAAa;AACb,SAAS;AACT,QACQ,MAAM,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD,QAAQ,MAAM,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAClD,QACQ,IAAI,eAAe,KAAK,CAAC,CAAC,IAAI,gBAAgB,GAAG,CAAC,KAAK,GAAG,CAAC,MAAM,EAAE;AAC3E,YAAY,MAAM,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;AACjE,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,GAAG,CAAC,EAAE,gBAAgB,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChH,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC;AAC1B,YACY,QAAQ,aAAa;AACjC,gBAAgB,KAAK,MAAM;AAC3B,oBAAoB,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;AACrD;AACA,gBAAgB,KAAK,KAAK;AAC1B,oBAAoB,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACtH,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,MAAM;AAC3B,oBAAoB,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;AACrD,gBAAgB,KAAK,KAAK;AAC1B,oBAAoB,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5H,oBAAoB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACjD,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,MAAM;AAC3B,oBAAoB,MAAM,IAAI,GAAG,IAAI,IAAI,CACjB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EACvB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACjD,oBAAoB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACjD,oBAAoB,MAAM;AAC1B,aAAa;AACb,SAAS;AACT,QACQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC7B,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9C,SAAS;AACT,QACQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACC;AC1gBD;AACA;AACA;AACA;AACA;AACA;AACA,MACsB,aAAa;AAAG,IAMlC,YAA6B,QAAQ,EAAqB,UAAsB,EAAqB,QAAmB;AAC5H,QADiC,aAAQ,GAAR,QAAQ,CAAA;AAAC,QAAoB,eAAU,GAAV,UAAU,CAAY;AAAC,QAAoB,aAAQ,GAAR,QAAQ,CAAW;AAAC,QAJjH,eAAU,GAAoB,EAAE,CAAC;AAC7C,QAAY,WAAM,GAAQ,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;AAC7D,QAGQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC;AAC3C,QAAQ,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACrE,KAAK;AACL,IAGc,aAAa,CAAC,KAA8B;AAAI,QACtD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC9B,QACQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAC/E,CAAC;AACV,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAChF,CAAC;AACV,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAC7E,CAAC;AACV,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAC7E,CAAC;AACV,KAAK;AACL,IACY,oBAAoB,CAAC,KAA8B;AAAI,QAC3D,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;AACrI,QACQ,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACtG,QAAQ,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACtG,QACQ,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;AAC7F,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC7F,QACQ,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;AACrE,KAAK;AACL,IACY,SAAS,CAAC,KAA8B;AAAI,QAChD,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACzC,YAAY,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AACpD,SAAS;AACT,QACQ,IAAI,CAAC,qBAAqB,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3E,KAAK;AACL,IACY,wBAAwB;AAAK,QACjC,OAAO,IAAI,CAAC,MAAM,CAAC,qBAAqB;AAChD,YAAY,IAAI,CAAC,MAAM,CAAC,2BAA2B;AACnD,YAAY,IAAI,CAAC,MAAM,CAAC,wBAAwB;AAChD,YAAY,IAAI,CAAC,MAAM,CAAC,sBAAsB;AAC9C,YAAY,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC;AAChD,KAAK;AACL,IACY,eAAe;AAAK,QACxB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;AAC9C,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AACnC,KAAK;AACL,IACW,WAAW;AAAK,QACnB,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,KAAK;AACL;yCApEC,SAAS;uEACR;AAAC;AAAuC;AAAU,YAT3C,UAAU;AAAI,YAAF,SAAS;AAAG;;;4HAAE;AAAC;AAAC,MC8BxB,mBAAoB,SAAQ,aAAa;AAAG,IAcrD,YAAY,QAAmB,EAAoB,QAAQ,EAAE,UAAsB;AACvF,QAAQ,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC9C,QAPW,gBAAW,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACxD,KAMK;AACL,IACI,IACW,eAAe;AAAK,QAC3B,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC;AACvD,KAAK;AACL,IAGW,OAAO,CAAC,KAAU;AAAI,QACzB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAClC,KAAK;AACL,IACW,QAAQ;AAAK,QAChB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;AACvB,YAAY,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AACvG,KAAK;AACL;AACO;AACmC;AACH;AAChC,IACI,WAAW,CAAC,OAAsB;AAAI,QACzC,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,aAAa,KAAK,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE;AACzF,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAC9C,YAAY,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACpE,SAAS;AACT,KAAK;AACL,IACW,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE;AAAI,QAC1C,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC;AAC7C,QAAQ,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC;AACnD,QACQ,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;AACvD,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;AACxC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAC3C,QAAQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACxF,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,KAAK;AACL,IACY,qBAAqB,CAAC,CAAS,EAAE,CAAS;AAAI,QAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACjF,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5E,KAAK;AACL;+CAvEC,SAAS,SAAC,kBACP,QAAQ,EAAE,sBAAsB,kBAChC,kDAA0C,kBAK1C,eAAe,EAAE;KAAuB,CAAC,MAAM;;;;;;;;;;;oueAClD,8pCACI;AAAC;AAA6C,YAtB/C,SAAS;AACX,4CAmCoC,MAAM,SAAC,QAAQ;AAAS,YAlC1D,UAAU;AACb;AAAG;AAGH,kBAkBI,KAAK;AACR,oBAEG,KAAK;AACR,0BAEG,MAAM;AACT,sBAEG,SAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACrC,8BAMA,WAAW,SAAC,uBAAuB;AACnC,sBAIA,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cACpC,YAAY,SAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;AACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MC9CK,iBAAiB;AAAG,IADjC;AACE,QACS,mBAAc,GAAW,yBAAyB,CAAC;AAC9D,QAAW,iBAAY,GAAW,2CAA2C,CAAC;AAC9E,KAAC;AACD;6CALC,UAAU;;;;gDACT;AAAC;AAAC,MCMS,kBAAkB;AAC/B,IAWI,YACqB,YAA+B,EAC/B,QAAmB,EACnB,UAAsB,EACJ,QAAQ;AACnD,QAJyB,iBAAY,GAAZ,YAAY,CAAmB;AAAC,QAChC,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACpB,eAAU,GAAV,UAAU,CAAY;AAAC,QACL,aAAQ,GAAR,QAAQ,CAAA;AAAC,QAXzC,cAAS,GAAqC,MAAM,CAAC;AAChE,KAWK;AACL,IAXI,IACW,KAAK;AACpB,QAAQ,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,EAAE,CAAC;AACzE,KAAK;AACL,IAQI,IAAW,eAAe;AAAK,QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;AACzC,KAAK;AACL,IAEW,OAAO,CAAC,KAA8B;AACjD,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAC9D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AACtD,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AACvD,QACQ,QAAQ,IAAI,CAAC,SAAS;AAC9B,YAAY,KAAK,MAAM;AACvB,gBAAgB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;AACxD,gBAAgB,MAAM;AACtB,YAAY,KAAK,KAAK;AACtB,gBAAgB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACrF,gBAAgB,MAAM;AACtB,YAAY;AACZ,gBAAgB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;AACnD,SAAS;AACT,QACQ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AACxE,QAAQ,KAAK,CAAC,MAAM,EAAE,CAAC;AACvB,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AACxE,KAAK;AACL;8CAvDC,SAAS,SAAC,kBACP,QAAQ,EAAE,qBAAqB,kBAC/B;;AAAyC,kBAKzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;;;;;;;;;;;;oDAClD,u/BACI;AAAC;AAEH,YAdM,iBAAiB;AAAI,YAHwB,SAAS;AAAI,YAAF,UAAU;AAAI,4CA+BtE,MAAM,SAAC,QAAQ;AAAQ;AAAG;AAGxB,oBAlBN,KAAK;AACR,wBAEG,KAAK;AACR,oBAEG,WAAW,SAAC,YAAY;AACxB,sBAeA,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;AACjC;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCZK,YAAa,SAAQ,aAAa;AAAG,IAmB9C,YAAY,QAAmB,EAAoB,QAAQ,EAAE,UAAsB;AACvF,QAAQ,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC9C,QAfW,cAAS,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACtD,QAKW,gBAAW,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACxD,QAIY,eAAU,GAAY,KAAK,CAAC;AACxC,KAGK;AACL,IAGW,OAAO,CAAC,KAAU;AAAI,QACzB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAClC,KAAK;AACL,IACI,IACW,QAAQ,CAAC,KAAa;AACrC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC/B,KAAK;AACL;AACO;AACmC;AACH;AAChC,IACI,WAAW,CAAC,OAAsB;AAAI,QACzC,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,KAAK,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE;AACnF,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;AAC5C,YAAY,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjD,SAAS;AACT,KAAK;AACL,IACW,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE;AAAI,QAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,GAAG,CAAC;AAC7E,QAAQ,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;AACxC,QACQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAC3C,QAAQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9F,QAAQ,MAAM,WAAW,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5E,QACQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACzC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,KAAK;AACL;AACO;AACoC;AACpC,IACK,qBAAqB,CAAC,GAAW;AAAI,QACzC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAClC,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC;AAC7D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACjF,KAAK;AACL;wCA1EC,SAAS,SAAC,kBACP,QAAQ,EAAE,eAAe,kBACzB,kDAAmC,kBAKnC,eAAe,EAAE;YAAuB,CAAC,MAAM;;;;;;;;;knHAClD,8kCACI;AAAC;AAAsC,YAvBxC,SAAS;AACX,4CAyCoC,MAAM,SAAC,QAAQ;AAAS,YAxC1D,UAAU;AACb;AAAG;AAEE,kBAoBD,KAAK;AACR,wBAEG,MAAM;AACT,oBAEG,KAAK;AACR,0BAEG,MAAM;AACT,sBAEG,SAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACrC,sBAQA,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cACpC,YAAY,SAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;AACrC,uBAIA,KAAK;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MC9BQ,cAAe,SAAQ,aAAa;AAAG,IAahD,YAAY,QAAmB,EAAoB,QAAQ,EAAE,UAAsB;AACvF,QAAQ,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC9C,QATW,gBAAW,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACxD,QAIY,eAAU,GAAY,KAAK,CAAC;AACxC,KAGK;AACL,IAGW,OAAO,CAAC,KAAU;AAAI,QACzB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAClC,KAAK;AACL,IACI,IACW,QAAQ,CAAC,KAAa;AACrC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC/B,KAAK;AACL;AACO;AACmC;AACH;AAChC,IACI,WAAW,CAAC,OAAsB;AAAI,QACzC,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,aAAa,KAAK,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE;AACzF,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAC9C,YAAY,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnD,SAAS;AACT,KAAK;AACL,IACW,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE;AAAI,QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC;AAC/D,QAAQ,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAC1C,QACQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAC1C,QAAQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3F,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,KAAK;AACL;AACO;AACoC;AACpC,IACK,qBAAqB,CAAC,KAAa;AAAI,QAC3C,MAAM,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC;AAC9B,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC;AAC7D,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACjF,KAAK;AACL,IACI,IAAW,QAAQ;AAAK,QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAC1C,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,OAAO,CAAC;AACjE,QAAQ,OAAO,sBAAsB,WAAW,UAAU,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,gBAAgB,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,SAAS,CAAC;AAC9J,KAAK;AACL;0CAvEC,SAAS,SAAC,kBACP,QAAQ,EAAE,iBAAiB,kBAC3B;iCAAqC,kBAKrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;;;;;;4KAClD;;;;;;42BACI;AAAC;AAAwC,YAhB1C,SAAS;AACX,4CA4BoC,MAAM,SAAC,QAAQ;AAAS,YAhC1D,UAAU;AACb;AAAG;AAEC,oBAkBA,KAAK;AACR,0BAEG,MAAM;AACT,sBAEG,SAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AACrC,sBAQA,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cACpC,YAAY,SAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;AACrC,uBAIA,KAAK;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCrCQ,aAAa;AAC1B,IAXA;AACG,QAeQ,cAAS,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACtD,QAKW,gBAAW,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACxD,QAQW,mBAAc,GAAY,IAAI,CAAC;AAC1C,KAuBC;AACD,IA9BI,IACW,KAAK,CAAC,KAAK;AAC1B,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACjC,KAAK;AACL,IAGI,IACW,KAAK,CAAC,SAAkB;AACvC,QAAQ,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;AACxC,KAAK;AACL,IACI,IAAW,KAAK;AACpB,QAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;AACxD,KAAK;AACL,IACW,aAAa,CAAC,QAAgB,EAAE,KAA4B;AACvE,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,QAAQ,MAAM,GAAG,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;AACzD,QAAQ,MAAM,KAAK,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;AAC7D,QAAQ,MAAM,IAAI,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC;AAC3D,QAAQ,MAAM,KAAK,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;AAC7D,QACQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACtE,QAAQ,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;AAChE,QACQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,KAAK;AACL;yCAvDC,SAAS,SAAC,kBACP,QAAQ,EAAE;cAAsB,kBAChC;;;;;;;;GAA0C,kBAM1C,eAAe,EAAE;eAAuB,CAAC,MAAM;;;;;;0CAClD;;;;;;;;;;;;;;;;;;;;siBACI;AAAC;AAEG,kBAAJ,KAAK;AACR,wBAEG,MAAM;AACT,oBAEG,KAAK;AACR,0BAEG,MAAM;AACT,oBAIG,KAAK;AACR,oBAMG,KAAK;AACT;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCxBQ,aAAa;AAC1B,IAXA;AACG,QAeQ,cAAS,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACtD,QAKW,gBAAW,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACxD,QAQW,mBAAc,GAAY,IAAI,CAAC;AAC1C,KAwBC;AACD,IA/BI,IACW,KAAK,CAAC,KAAK;AAC1B,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACjC,KAAK;AACL,IAGI,IACW,KAAK,CAAC,SAAkB;AACvC,QAAQ,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;AACxC,KAAK;AACL,IACI,IAAW,KAAK;AACpB,QAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;AACxD,KAAK;AACL,IACW,aAAa,CAAC,QAAgB,EAAE,KAA4B;AACvE,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,QAAQ,MAAM,GAAG,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;AACzD,QAAQ,MAAM,UAAU,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC;AACvE,QAAQ,MAAM,SAAS,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;AACrE,QAAQ,MAAM,KAAK,GAAG,KAAK,KAAK,GAAG,GAAG,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;AAC7D,QAEQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAChF,QAAQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;AACrE,QACQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,KAAK;AACL;yCAxDC,SAAS,SAAC,kBACP,QAAQ,EAAE;cAAsB,kBAChC;;;;;gEAA0C;IAM1C,eAAe,EAAE;aAAuB,CAAC,MAAM;;;;;;wCAClD;;;;;;;;;;;;;;;;;;;;;;siBACI;AAAC;AAEG,kBAAJ,KAAK;AACR,wBAEG,MAAM;AACT,oBAEG,KAAK;AACR,0BAEG,MAAM;AACT,oBAIG,KAAK;AACR,oBAMG,KAAK;AACT;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCxBQ,YAAY;AACzB,IAXA;AACG,QAeQ,cAAS,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACtD,QAKW,gBAAW,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACxD,QAEY,gBAAW,GAAW,EAAE,CAAC;AACrC,KAsCC;AACD,IAtCI,IACW,KAAK,CAAC,KAAK;AAC1B,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACjC,KAAK;AACL,IACI,IACW,MAAM,CAAC,KAAK;AAC3B,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,KAAK;AACL,IACI,IAAW,KAAK;AACpB,QAAQ,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC9H,KAAK;AACL,IACW,aAAa,CAAC,KAAoB,EAAE,UAAkB;AAAI,QAC7D,MAAM,KAAK,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAChE,QACQ,IACA,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,OAAO,KAAK,KAAK,CAAC,MAAM,KAAK,CAAC;AAC5F,eAAW,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACrD,YAAY,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC5C,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5C;AACe;AACiB;AACW;AACc;AACkB;AAC5D,YACH,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;AACtF,gBAAgB,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;AACxD,gBAAgB,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;AACxE,gBAAgB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzC,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChD,aAAa;AACb,SAAS;AACT,KAAK;AACL;wCAhEC,SAAS,SAAC,kBACP,QAAQ,EAAE;eAAqB,kBAC/B,kMAAyC,kBAMzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;;;wIAClD;;;;;;;;;mfACI;AAAC;AAEG,kBAAJ,KAAK;AACR,wBAEG,MAAM;AACT,oBAEG,KAAK;AACR,0BAEG,MAAM;AACT,oBAKG,KAAK;AACR,qBAIG,KAAK;AACT;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCzBQ,qBAAqB;AAClC,IAVA;AACG,QAWQ,YAAO,GAAW,CAAC,CAAC;AAC/B,QAQW,cAAS,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACtD,QAKW,gBAAW,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AACxD,QAEW,cAAS,GAAqC,IAAI,CAAC;AAC9D,KAeC;AAAC,IAdS,iBAAiB,CAAC,KAAY;AAAI,QACrC,MAAM,iBAAiB,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;AAClD,QAAQ,MAAM,iBAAiB,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;AAClD,QACQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,EAAE,iBAAiB,CAAC,KAAK,EAAE,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC9I,QAAQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACpE,QACQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,KAAK;AACL,IACW,MAAM,CAAC,WAAwC;AAAI,QACtD,OAAO,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC1C,KAAK;AACL;iDA9CC,SAAS,SAAC,kBACP,QAAQ,EAAE;CAAyB,kBACnC;;;;;GAA6C,kBAK7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;6MAClD,kNACI;AAAC;AAEG,sBAAJ,KAAK;AACR,2BAEG,KAAK;AACR,kBAEG,KAAK;AACR,wBAEG,MAAM;AACT,oBAEG,KAAK;AACR,0BAEG,MAAM;AACT,wBAEG,KAAK;AACT;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCTQ,oBAAoB;AAAG,IAuBhC,YAA6B,YAA+B;AAAI,QAAnC,iBAAY,GAAZ,YAAY,CAAmB;AAAC,QATtD,oBAAe,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AAC5D,QAEW,cAAS,GAAG,IAAI,YAAY,CAAU,KAAK,CAAC,CAAC;AACxD,QACY,YAAO,GAAG,IAAI,OAAO,EAA2B,CAAC;AAC7D,QACY,kBAAa,GAAY,KAAK,CAAC;AAC3C,KACqE;AACrE,IAhBI,IACW,KAAK,CAAC,aAAsB;AAC3C,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC;AAC7C,KAAK;AACL,IAaW,WAAW;AAAK,QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AAC5B,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;AAChC,KAAK;AACL,IACI,IACW,OAAO;AAAK,QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;AACzC,KAAK;AACL,IACI,IACW,KAAK;AACpB,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;AACjE,QACQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,KAAK,EAAE,UAAU,KAAK,KAAK,CAAC,CAAC;AAC5G,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IACI,IACW,SAAS;AAAK,QACrB,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,GAAG,KAAK,CAAC;AACxG,KAAK;AACL,IAGW,OAAO,CAAC,KAA8B;AAAI,QAC7C,EAAE,CAAC,KAAK,CAAC;AACjB,aAAa,IAAI,CACD,GAAG,CAAC,CAAC,CAA0B,KAAK,CAAC,CAAC,SAAS,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,EACxE,KAAK,CAAC,GAAG,CAAC,EACV,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAC1B;AACb,aAAa,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,QACQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAK;AACL,IAGW,UAAU,CAAC,KAA8B;AAAI,QAChD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,KAAK;AACL;gDA9EC,SAAS,SAAC,kBACP,QAAQ,EAAE,cAAc,kBACxB,QAAQ,EAAE,EAAE,kBAKZ;YAAe,EAAE,uBAAuB,CAAC,MAAM;kDAClD;;;;;6eACI;AAAC;AAA8C,YAX3C,iBAAiB;AAAG;AAAG;AAAwC,0BAanE,KAAK;AACR,oBAEG,KAAK;AACR,oBAEG,KAAK,SAAC,kBAAkB;AACxB,8BAIA,MAAM;AACT,wBAEG,MAAM;AACT,sBAaG,WAAW,SAAC,uBAAuB;AACnC,oBAIA,WAAW,SAAC,YAAY;AACxB,wBASA,WAAW,SAAC,gBAAgB;AAC5B,sBAIA,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cACpC,YAAY,SAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;AACrC,yBAYA,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,cAClC,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;AACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCpFK,gBAAgB,GAAG,OAAO,CAAC,kBAAkB,EAAE;AAC5D,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACxC,IAAI,UAAU,CAAC,WAAW,EAAE;AAC5B,QAAQ,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;AAC7B,QAAQ,OAAO,CAAC,cAAc,CAAC;AAC/B,KAAK,CAAC;AACN,CAAC,EAAC;AACF,MAEa,aAAa,GAAG,OAAO,CAAC,eAAe,EAAE;AACtD,IAAI,UAAU,CAAC,SAAS,EAAE;AAC1B,QAAQ,KAAK,CAAC,QAAQ,EAAE;AACxB,YAAY,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAC5C,YAAY,OAAO,CAAC,CAAC,EAAE,EAAE;AACzB,gBAAgB,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AACnE,aAAa,CAAC;AACd,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC9B,KAAK,CAAC;AACN,IAAI,UAAU,CAAC,YAAY,EAAE;AAC7B,QAAQ,KAAK,CAAC,QAAQ,EAAE;AACxB,YAAY,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAC5C,YAAY,OAAO,CAAC,CAAC,EAAE,EAAE;AACzB,gBAAgB,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AACnE,aAAa,CAAC;AACd,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC9B,KAAK,CAAC;AACN,IAAI,UAAU,CAAC,WAAW,EAAE;AAC5B,QAAQ,KAAK,CAAC,QAAQ,EAAE;AACxB,YAAY,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAC5C,YAAY,OAAO,CAAC,EAAE,EAAE;AACxB,gBAAgB,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AACnE,aAAa,CAAC;AACd,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC9B,KAAK,CAAC;AACN,IAAI,UAAU,CAAC,WAAW,EAAE;AAC5B,QAAQ,KAAK,CAAC,QAAQ,EAAE;AACxB,YAAY,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAC5C,YAAY,OAAO,CAAC,EAAE,EAAE;AACxB,gBAAgB,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AACnE,aAAa,CAAC;AACd,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC9B,KAAK,CAAC;AACN,CAAC;AAAG;AAAC,MCtBQ,kBAAkB;AAAG,IAkB9B,YACqB,QAAmB,EACD,QAAQ,EAC1B,GAAsB;AAC/C,QAHyB,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACF,aAAQ,GAAR,QAAQ,CAAA;AAAC,QAC3B,QAAG,GAAH,GAAG,CAAmB;AAAC,QAfrC,oBAAe,GAAG,IAAI,YAAY,CAAQ,KAAK,CAAC,CAAC;AAC5D,QAEW,cAAS,GAAqC,IAAI,CAAC;AAC9D,QAIW,iBAAY,GAAY,KAAK,CAAC;AACzC,QACY,UAAK,GAAoB,EAAE,CAAC;AACxC,KAKK;AACL,IACW,WAAW;AAAK,QACnB,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;AAC1B,KAAK;AACL,IACY,eAAe;AAAK,QACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC,CAAC;AACrD,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9B,KAAK;AACL;AACO;AACiB;AACjB,IACI,iBAAiB,CAAC,KAAY;AAAI,QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzC,KAAK;AACL,IACW,WAAW;AAAK,QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACjC,QAAQ,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACnC,KAAK;AACL,IACY,mBAAmB;AAAK,QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AAClG,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACnG,KAAK;AACL,IACY,SAAS;AAAK,QAClB,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,YAAY,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AACtC,YAAY,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AACpC,YAAY,IAAI,CAAC,eAAe,EAAE,CAAC;AACnC,SAAS;AACT,KAAK;AACL,IACI,IACW,SAAS;AAAK,QACrB,OAAO,aAAa,IAAI,CAAC,SAAS,EAAE,CAAC;AAC7C,KAAK;AACL;8CAzEC,SAAS,SAAC,kBACP,QAAQ,EAAE,sBAAsB,kBAChC;;;iZAAoD,kBAKpD,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,UAAU,EAAE,CAAC;QAAgB,EAAE,aAAa,CAAC;;;;;;;;;;;MAChD;;;yyCACI;AAAC;AAA4C,YAtB9C,SAAS;AACX,4CAyCO,MAAM,SAAC,QAAQ;AAAS,YAvC7B,iBAAiB;AACpB;AAAG;AAEQ,mBAkBP,KAAK;AACR,8BAEG,MAAM;AACT,wBAEG,KAAK;AACR,0BAEG,KAAK;AACR,wBA+CG,WAAW,SAAC,WAAW;AACxB;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MChFK,yBAAyB;AACtC,IAJA;AACG,QAUQ,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;AACpD,KAYC;AACD,IAXW,YAAY,CAAC,KAAU;AAAI,QAC9B,MAAM,OAAO,GAAG,KAAK,CAAC,MAA0B,IAAI,KAAK,CAAC,UAA8B,CAAC;AACjG,QAAQ,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACpC,QACQ,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;AAChE,YAAY,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AAC/C,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3C,SAAS;AACT,KAAK;AACL;qDAxBC,SAAS,SAAC,kBACP,QAAQ,EAAE,eAAe,cAC5B;;;wFACI;AAAC;AACI,kBAAL,KAAK;AACR,kBAEG,KAAK;AACR,0BAEG,MAAM;AACT,2BAEG,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;AACjC;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCbK,UAAU;AAAG,IACtB,SAAS,CAAC,GAAQ,EAAE,SAAiB;AACzC,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACrH,KAAK;AACL;sCALC,IAAI,SAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;;;;;0BACnB;AAAC;AAAC,MCAM,WAAW;AAAG,IACvB,SAAS,CAAC,GAAe,EAAE,aAAsB,IAAI;AACzD,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY,OAAO,GAAG,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;AACzC,SAAS;AACT,QACQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL;uCATC,IAAI,SAAC,EAAE,IAAI,EAAE,SAAS,EAAE;;;;;0BACpB;AAAC;ACGN,IAAY,SAQX;AARD,WAAY,SAAS;AACpB,IAAG,wBAAW,CAAA;AAAC,IACZ,0BAAa,CAAA;AAAC,IACd,0BAAa,CAAA;AAAC,IACd,wBAAW,CAAA;AAAC,IACZ,0BAAa,CAAA;AAAC,IACd,wBAAW,CAAA;AAAC,IACZ,0BAAa,CAAA;AACjB,CAAC,EARW,SAAS,KAAT,SAAS,QAQpB;AACD,MACa,kBAAkB;AAC/B,IAaI;AACJ,QAbY,eAAU,GAAU,IAAI,CAAC;AACrC,QAAY,aAAQ,GAAU,IAAI,CAAC;AACnC,QAAY,cAAS,GAAU,IAAI,CAAC;AACpC,QAAqB,iBAAY,GAAmB,IAAI,OAAO,EAAE,CAAC;AAClE,QACoB,6BAAwB,GAA6B,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AACnG,QAAW,aAAQ,GAAc,IAAI,CAAC;AACtC,QAAoB,kCAA6B,GAA6B,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AACxG,QAAoB,iBAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/I,QACY,iBAAY,GAAgC,EAAE,CAAC;AAC3D,QAEQ,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAChC,KAAK;AACL,IACW,YAAY,CAAC,KAA+C;AAAI,QACnE,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC7B,YAAY,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/C,SAAS;AACT,QACQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,YAAY,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACxC,SAAS;AACT,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAChC,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACY,WAAW,CAAC,KAAY;AACpC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACxE,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;AACrE,SAAS;AACT,KAAK;AACL,IACI,IAAW,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC;AAC7B,KAAK;AACL;AACO;AACS;AACoB;AAC7B,IACH,IAAW,GAAG,CAAC,QAAe;AAClC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,KAAK;AACL,IACY,QAAQ,CAAC,KAAY;AAAI,QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACI,IAAW,KAAK;AAAK,QACjB,OAAO,IAAI,CAAC,UAAU,CAAC;AAC/B,KAAK;AACL;AACO;AACS;AACoB;AAC7B,IACH,IAAW,KAAK,CAAC,KAAY;AACjC,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,KAAK;AACL;AACO;AACsB;AACtB,IACI,KAAK;AAAK,QACb,IAAI,KAAK,CAAC;AAClB,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC7B,YAAY,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvD,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;AACrE,SAAS;AAAC,aAAK;AACf,YAAY,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AAC3C,YAAY,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACpC,SAAS;AACT,QACQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACW,qBAAqB;AAAK,QAC7B,OAAO,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;AACxD,KAAK;AACL,IACW,gBAAgB;AAAK,QACxB,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACW,gBAAgB;AAAK,QACxB,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvD,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACY,eAAe,CAAC,WAAwB;AACpD,QAAQ,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;AAChE,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC5B,YAAY,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC;AAC1C,YAAY,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;AAChC,gBAAgB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;AAC/C,aAAa;AACb,SAAS;AACT,QACQ,MAAM,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD,QAAQ,MAAM,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;AAC7D,QAAQ,QAAQ,aAAa;AAC7B,YAAY,KAAK,SAAS,CAAC,IAAI;AAC/B,gBAAgB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;AAC/C,gBAAgB,MAAM;AACtB,YAAY,KAAK,SAAS,CAAC,GAAG;AAC9B,gBAAgB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC;AAC9C,gBAAgB,MAAM;AACtB,YAAY,KAAK,SAAS,CAAC,IAAI;AAC/B,gBAAgB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;AAC/C,gBAAgB,MAAM;AACtB,YAAY,KAAK,SAAS,CAAC,GAAG;AAC9B,gBAAgB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC;AAC9C,gBAAgB,MAAM;AACtB,YAAY,KAAK,SAAS,CAAC,IAAI;AAC/B,gBAAgB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;AAC/C,gBAAgB,MAAM;AACtB,SAAS;AACT,KAAK;AACL,IACW,eAAe,CAAC,YAAqD;AAAI,QAC5E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAC1D,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACY,UAAU,CAAC,YAAqD;AAAI,QACxE,MAAM,OAAO,GAAG,EAAE,CAAC;AAC3B,QACQ,KAAK,MAAM,KAAK,IAAI,YAAY,EAAE;AAC1C,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACtC,gBAAgB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,aAAa;AAAC,iBAAK;AACnB,gBAAgB,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/C,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,IACI,IAAW,OAAO;AACtB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC;AACjC,KAAK;AACL,IACW,UAAU;AAAK,QAClB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5C,KAAK;AACL,IACW,eAAe;AAAK,QACvB,OAAO,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;AACnD,KAAK;AACL,IACW,WAAW;AAAK,QACnB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IACW,WAAW;AAAK,QACnB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA;AAAC,SCxLe,cAAc,CAAC,KAAY,EAAE,IAAe;AAAI,IAC5D,QAAQ,IAAI;AAChB,QAAQ,KAAK,SAAS,CAAC,GAAG;AAC1B,YAAY,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;AACvC,QAAQ,KAAK,SAAS,CAAC,IAAI;AAC3B,YAAY,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC3C,QAAQ,KAAK,SAAS,CAAC,GAAG;AAC1B,YAAY,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;AACvC,QAAQ,KAAK,SAAS,CAAC,IAAI;AAC3B,YAAY,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;AACxC,QAAQ,KAAK,SAAS,CAAC,GAAG;AAC1B,YAAY,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;AACvC,QAAQ,KAAK,SAAS,CAAC,IAAI;AAC3B,YAAY,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;AACxC,QAAQ;AACR,YAAY,OAAO,KAAK,CAAC,YAAY,EAAE,CAAC;AACxC,KAAK;AACL;AACA;AAAC,MCIY,qBAAqB;AAAG,IAgBjC,YAA6B,GAAsB;AACvD,QADiC,QAAG,GAAH,GAAG,CAAmB;AAAC,QAd7C,yBAAoB,GAAW,CAAC,CAAC;AAC5C,QAAW,kBAAa,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACnD,QAQW,gBAAW,GAA8B,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;AAC5E,QACY,kBAAa,GAAwB,EAAE,CAAC;AACpD,KAEK;AACL,IACW,QAAQ;AAAK,QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC3B,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,kBAAkB,EAAE,CAAC;AACpD,SAAS;AACT,QACQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD,SAAS;AACT;AACW;AACiB;AAC4B;AAC7C,QACH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AACxC,YAAY,IAAI,CAAC,OAAO;AACxB,iBAAiB,eAAe,CAAC;AACjC,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,E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SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gBAAoB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAC7I,gB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","sourcesContent":["\r\n\r\nexport abstract class BaseColor {\r\n    public abstract toString(showAlpha?: boolean): string;\r\n}\r\n","import { BaseColor } from './base-color.class';\r\n\r\n/**\r\n * CMYK color space\r\n *\r\n * Cyan = ranges from 0 to 100%\r\n * Magenta = ranges from 0 to 100%\r\n * Yellow = ranges from 0 to 100%\r\n * blacK = ranges from 0 to 100%\r\n */\r\nexport class Cmyk extends BaseColor {\r\n\r\n    constructor(public cyan: number, public magenta: number, public yellow: number, public black: number) {\r\n        super();\r\n    }\r\n\r\n    public toString(): string {\r\n        return `cmyk(${this.getCyan()}%, ${this.getMagenta()}%, ${this.getYellow()}%, ${this.getBlack()}%)`;\r\n    }\r\n\r\n    public getCyan() {\r\n        return Math.round(this.cyan);\r\n    }\r\n\r\n    public getMagenta() {\r\n        return Math.round(this.magenta);\r\n    }\r\n\r\n    public getYellow() {\r\n        return Math.round(this.yellow);\r\n    }\r\n\r\n    public getBlack() {\r\n        return Math.round(this.black);\r\n    }\r\n}\r\n","import { BaseColor } from './base-color.class';\r\n\r\n/**\r\n * HSL and HSI are the same\r\n * \r\n * Hue = ranges from 0 to 360°\r\n * Saturation = ranges from 0 to 100%\r\n * Lightness or Intensity = ranges from 0 to 100%\r\n * Alpha = range from 0-1\r\n */\r\nexport class Hsla extends BaseColor {\r\n\r\n    constructor(public hue: number, public saturation: number, public lightness: number, public alpha: number) {\r\n        super();\r\n    }\r\n\r\n    public toString(showAlphaChannel: boolean = true): string {\r\n        return showAlphaChannel\r\n            ? `hsla(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%, ${this.getAlpha()})`\r\n            : `hsl(${this.getHue()}, ${this.getSaturation()}%, ${this.getLightness()}%)`;\r\n    }\r\n\r\n    public getHue() {\r\n        return Math.round(this.hue);\r\n    }\r\n\r\n    public getSaturation() {\r\n        return Math.round(this.saturation);\r\n    }\r\n\r\n    public getLightness() {\r\n        return Math.round(this.lightness);\r\n    }\r\n\r\n    public getAlpha(): number {\r\n        return Math.round(this.alpha * 100) / 100;\r\n    }\r\n}\r\n","import { BaseColor } from './base-color.class';\r\n\r\n/**\r\n * HSB and HSV are the same\r\n *\r\n * Hue = ranges from 0 to 360°\r\n * Saturation = ranges from 0 to 100%\r\n * Brightness or Value = ranges from 0 to 100%\r\n * Alpha = range from 0-1\r\n */\r\nexport class Hsva extends BaseColor {\r\n\r\n    constructor(public hue: number, public saturation: number, public value: number, public alpha: number) {\r\n        super();\r\n    }\r\n\r\n    public toString(showAlphaChannel: boolean = true): string {\r\n        return showAlphaChannel ? `hsva(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%, ${this.getAlpha()})`\r\n            : `hsv(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%)`;\r\n    }\r\n\r\n    public getHue() {\r\n        return Math.round(this.hue);\r\n    }\r\n\r\n    public getSaturation() {\r\n        return Math.round(this.saturation);\r\n    }\r\n\r\n    public getValue() {\r\n        return Math.round(this.value);\r\n    }\r\n\r\n    public getAlpha(): number {\r\n        return Math.round(this.alpha * 100) / 100;\r\n    }\r\n}\r\n","import { BaseColor } from './base-color.class';\r\n\r\n/**\r\n * RGB (Red Green Blue)\r\n *\r\n * Red = ranges from 0-255\r\n * Green = ranges from 0-255\r\n * Blue = ranges from 0-255\r\n * Alpha = range from 0-1\r\n */\r\nexport class Rgba extends BaseColor {\r\n\r\n    constructor(public red: number, public green: number, public blue: number, public alpha: number) {\r\n        super();\r\n    }\r\n\r\n    public toString(showAlphaChannel: boolean = true): string {\r\n        return showAlphaChannel\r\n            ? `rgba(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()}, ${this.getAlpha()})`\r\n            : `rgb(${this.getRed()}, ${this.getGreen()}, ${this.getBlue()})`;\r\n    }\r\n\r\n    public getRed(): number {\r\n        return Math.round(this.red);\r\n    }\r\n\r\n    public getGreen(): number {\r\n        return Math.round(this.green);\r\n    }\r\n\r\n    public getBlue(): number {\r\n        return Math.round(this.blue);\r\n    }\r\n\r\n    public getAlpha(): number {\r\n        return Math.round(this.alpha * 100) / 100;\r\n    }\r\n}\r\n","import { Rgba } from './rgba.class';\r\n\r\n/**\r\n * http://www.w3.org/TR/css3-color/\r\n */\r\nexport class ColorsTable {\r\n    public static transparent = new Rgba(0, 0, 0, 0);\r\n    public static aliceblue = new Rgba(240, 248, 255, 1);\r\n    public static antiquewhite = new Rgba(250, 235, 215, 1);\r\n    public static aqua = new Rgba(0, 255, 255, 1);\r\n    public static aquamarine = new Rgba(127, 255, 212, 1);\r\n    public static azure = new Rgba(240, 255, 255, 1);\r\n    public static beige = new Rgba(245, 245, 220, 1);\r\n    public static bisque = new Rgba(255, 228, 196, 1);\r\n    public static black = new Rgba(0, 0, 0, 1);\r\n    public static blanchedalmond = new Rgba(255, 235, 205, 1);\r\n    public static blue = new Rgba(0, 0, 255, 1);\r\n    public static blueviolet = new Rgba(138, 43, 226, 1);\r\n    public static brown = new Rgba(165, 42, 42, 1);\r\n    public static burlywood = new Rgba(222, 184, 135, 1);\r\n    public static cadetblue = new Rgba(95, 158, 160, 1);\r\n    public static chartreuse = new Rgba(127, 255, 0, 1);\r\n    public static chocolate = new Rgba(210, 105, 30, 1);\r\n    public static coral = new Rgba(255, 127, 80, 1);\r\n    public static cornflowerblue = new Rgba(100, 149, 237, 1);\r\n    public static cornsilk = new Rgba(255, 248, 220, 1);\r\n    public static crimson = new Rgba(220, 20, 60, 1);\r\n    public static cyan = new Rgba(0, 255, 255, 1);\r\n    public static darkblue = new Rgba(0, 0, 139, 1);\r\n    public static darkcyan = new Rgba(0, 139, 139, 1);\r\n    public static darkgoldenrod = new Rgba(184, 134, 11, 1);\r\n    public static darkgray = new Rgba(169, 169, 169, 1);\r\n    public static darkgreen = new Rgba(0, 100, 0, 1);\r\n    public static darkgrey = ColorsTable.darkgray;\r\n    public static darkkhaki = new Rgba(189, 183, 107, 1);\r\n    public static darkmagenta = new Rgba(139, 0, 139, 1);\r\n    public static darkolivegreen = new Rgba(85, 107, 47, 1);\r\n    public static darkorange = new Rgba(255, 140, 0, 1);\r\n    public static darkorchid = new Rgba(153, 50, 204, 1);\r\n    public static darkred = new Rgba(139, 0, 0, 1);\r\n    public static darksalmon = new Rgba(233, 150, 122, 1);\r\n    public static darkseagreen = new Rgba(143, 188, 143, 1);\r\n    public static darkslateblue = new Rgba(72, 61, 139, 1);\r\n    public static darkslategray = new Rgba(47, 79, 79, 1);\r\n    public static darkslategrey = ColorsTable.darkslategray;\r\n    public static darkturquoise = new Rgba(0, 206, 209, 1);\r\n    public static darkviolet = new Rgba(148, 0, 211, 1);\r\n    public static deeppink = new Rgba(255, 20, 147, 1);\r\n    public static deepskyblue = new Rgba(0, 191, 255, 1);\r\n    public static dimgray = new Rgba(105, 105, 105, 1);\r\n    public static dimgrey = ColorsTable.dimgray;\r\n    public static dodgerblue = new Rgba(30, 144, 255, 1);\r\n    public static firebrick = new Rgba(178, 34, 34, 1);\r\n    public static floralwhite = new Rgba(255, 250, 240, 1);\r\n    public static forestgreen = new Rgba(34, 139, 34, 1);\r\n    public static fuchsia = new Rgba(255, 0, 255, 1);\r\n    public static gainsboro = new Rgba(220, 220, 220, 1);\r\n    public static ghostwhite = new Rgba(248, 248, 255, 1);\r\n    public static gold = new Rgba(255, 215, 0, 1);\r\n    public static goldenrod = new Rgba(218, 165, 32, 1);\r\n    public static gray = new Rgba(128, 128, 128, 1);\r\n    public static grey = ColorsTable.gray;\r\n    public static green = new Rgba(0, 128, 0, 1);\r\n    public static greenyellow = new Rgba(173, 255, 47, 1);\r\n    public static honeydew = new Rgba(240, 255, 240, 1);\r\n    public static hotpink = new Rgba(255, 105, 180, 1);\r\n    public static indianred = new Rgba(205, 92, 92, 1);\r\n    public static indigo = new Rgba(75, 0, 130, 1);\r\n    public static ivory = new Rgba(255, 255, 240, 1);\r\n    public static khaki = new Rgba(240, 230, 140, 1);\r\n    public static lavender = new Rgba(230, 230, 250, 1);\r\n    public static lavenderblush = new Rgba(255, 240, 245, 1);\r\n    public static lawngreen = new Rgba(124, 252, 0, 1);\r\n    public static lemonchiffon = new Rgba(255, 250, 205, 1);\r\n    public static lightblue = new Rgba(173, 216, 230, 1);\r\n    public static lightcoral = new Rgba(240, 128, 128, 1);\r\n    public static lightcyan = new Rgba(224, 255, 255, 1);\r\n    public static lightgoldenrodyellow = new Rgba(250, 250, 210, 1);\r\n    public static lightgray = new Rgba(211, 211, 211, 1);\r\n    public static lightgreen = new Rgba(144, 238, 144, 1);\r\n    public static lightgrey = ColorsTable.lightgray;\r\n    public static lightpink = new Rgba(255, 182, 193, 1);\r\n    public static lightsalmon = new Rgba(255, 160, 122, 1);\r\n    public static lightseagreen = new Rgba(32, 178, 170, 1);\r\n    public static lightskyblue = new Rgba(135, 206, 250, 1);\r\n    public static lightslategray = new Rgba(119, 136, 153, 1);\r\n    public static lightslategrey = ColorsTable.lightslategray;\r\n    public static lightsteelblue = new Rgba(176, 196, 222, 1);\r\n    public static lightyellow = new Rgba(255, 255, 224, 1);\r\n    public static lime = new Rgba(0, 255, 0, 1);\r\n    public static limegreen = new Rgba(50, 205, 50, 1);\r\n    public static linen = new Rgba(250, 240, 230, 1);\r\n    public static magenta = new Rgba(255, 0, 255, 1);\r\n    public static maroon = new Rgba(128, 0, 0, 1);\r\n    public static mediumaquamarine = new Rgba(102, 205, 170, 1);\r\n    public static mediumblue = new Rgba(0, 0, 205, 1);\r\n    public static mediumorchid = new Rgba(186, 85, 211, 1);\r\n    public static mediumpurple = new Rgba(147, 112, 219, 1);\r\n    public static mediumseagreen = new Rgba(60, 179, 113, 1);\r\n    public static mediumslateblue = new Rgba(123, 104, 238, 1);\r\n    public static mediumspringgreen = new Rgba(0, 250, 154, 1);\r\n    public static mediumturquoise = new Rgba(72, 209, 204, 1);\r\n    public static mediumvioletred = new Rgba(199, 21, 133, 1);\r\n    public static midnightblue = new Rgba(25, 25, 112, 1);\r\n    public static mintcream = new Rgba(245, 255, 250, 1);\r\n    public static mistyrose = new Rgba(255, 228, 225, 1);\r\n    public static moccasin = new Rgba(255, 228, 181, 1);\r\n    public static navajowhite = new Rgba(255, 222, 173, 1);\r\n    public static navy = new Rgba(0, 0, 128, 1);\r\n    public static oldlace = new Rgba(253, 245, 230, 1);\r\n    public static olive = new Rgba(128, 128, 0, 1);\r\n    public static olivedrab = new Rgba(107, 142, 35, 1);\r\n    public static orange = new Rgba(255, 165, 0, 1);\r\n    public static orangered = new Rgba(255, 69, 0, 1);\r\n    public static orchid = new Rgba(218, 112, 214, 1);\r\n    public static palegoldenrod = new Rgba(238, 232, 170, 1);\r\n    public static palegreen = new Rgba(152, 251, 152, 1);\r\n    public static paleturquoise = new Rgba(175, 238, 238, 1);\r\n    public static palevioletred = new Rgba(219, 112, 147, 1);\r\n    public static papayawhip = new Rgba(255, 239, 213, 1);\r\n    public static peachpuff = new Rgba(255, 218, 185, 1);\r\n    public static peru = new Rgba(205, 133, 63, 1);\r\n    public static pink = new Rgba(255, 192, 203, 1);\r\n    public static plum = new Rgba(221, 160, 221, 1);\r\n    public static powderblue = new Rgba(176, 224, 230, 1);\r\n    public static purple = new Rgba(128, 0, 128, 1);\r\n    public static red = new Rgba(255, 0, 0, 1);\r\n    public static rosybrown = new Rgba(188, 143, 143, 1);\r\n    public static royalblue = new Rgba(65, 105, 225, 1);\r\n    public static saddlebrown = new Rgba(139, 69, 19, 1);\r\n    public static salmon = new Rgba(250, 128, 114, 1);\r\n    public static sandybrown = new Rgba(244, 164, 96, 1);\r\n    public static seagreen = new Rgba(46, 139, 87, 1);\r\n    public static seashell = new Rgba(255, 245, 238, 1);\r\n    public static sienna = new Rgba(160, 82, 45, 1);\r\n    public static silver = new Rgba(192, 192, 192, 1);\r\n    public static skyblue = new Rgba(135, 206, 235, 1);\r\n    public static slateblue = new Rgba(106, 90, 205, 1);\r\n    public static slategray = new Rgba(112, 128, 144, 1);\r\n    public static slategrey = ColorsTable.slategray;\r\n    public static snow = new Rgba(255, 250, 250, 1);\r\n    public static springgreen = new Rgba(0, 255, 127, 1);\r\n    public static steelblue = new Rgba(70, 130, 180, 1);\r\n    public static tan = new Rgba(210, 180, 140, 1);\r\n    public static teal = new Rgba(0, 128, 128, 1);\r\n    public static thistle = new Rgba(216, 191, 216, 1);\r\n    public static tomato = new Rgba(255, 99, 71, 1);\r\n    public static turquoise = new Rgba(64, 224, 208, 1);\r\n    public static violet = new Rgba(238, 130, 238, 1);\r\n    public static wheat = new Rgba(245, 222, 179, 1);\r\n    public static white = new Rgba(255, 255, 255, 1);\r\n    public static whitesmoke = new Rgba(245, 245, 245, 1);\r\n    public static yellow = new Rgba(255, 255, 0, 1);\r\n    public static yellowgreen = new Rgba(154, 205, 50, 1);\r\n}\r\n","import { Cmyk } from './cmyk.class';\r\nimport { Hsla } from './hsla.class';\r\nimport { Hsva } from './hsva.class';\r\nimport { Rgba } from './rgba.class';\r\nimport { ColorsTable } from './colors-table.class';\r\n\r\nexport type ColorString = string;\r\n\r\nexport class Color {\r\n\r\n    /**\r\n     * base color used to calculate other\r\n     * default color\r\n     * rgb(255, 0, 0)\r\n     * hsl(0, 100%, 50%)\r\n     * #ff0000\r\n     */\r\n    private hsva: Hsva = new Hsva(0, 1, 1, 1);\r\n    private rgba: Rgba = new Rgba(255, 0, 0, 1);\r\n\r\n    constructor(colorString?: ColorString) {\r\n        if (colorString) {\r\n            this.stringToColor(colorString);\r\n        }\r\n    }\r\n\r\n    public static from(color: ColorString | Color | Hsva | Rgba | Hsla): Color {\r\n        if (typeof color === 'string') {\r\n            return new Color(color);\r\n        } else if (color instanceof Color) {\r\n            return color.clone();\r\n        } else if (color instanceof Rgba) {\r\n            return new Color().setRgba(color.red, color.green, color.blue, color.alpha);\r\n        } else if (color instanceof Hsva) {\r\n            return new Color().setHsva(color.hue, color.saturation, color.value, color.alpha);\r\n        } else if (color instanceof Hsla) {\r\n            return new Color().setHsla(color.hue, color.saturation, color.lightness, color.alpha);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * make from existing color new color object\r\n     */\r\n    public clone(): Color {\r\n        return Color.from(this.getRgba());\r\n    }\r\n\r\n    /**\r\n     * define Color from hex, rgb, rgba, hsl, hsla or cmyk string\r\n     */\r\n    public setFromString(color: ColorString): this {\r\n        return this.stringToColor(color);\r\n    }\r\n\r\n    /**\r\n     * define Color from HSV values\r\n     */\r\n    public setHsva(hue: number = null, saturation: number = 100, brightness: number = 100, alpha: number = 1): this {\r\n        if (hue != null) {\r\n            this.hsva.hue = hue;\r\n        }\r\n\r\n        if (saturation != null) {\r\n            this.hsva.saturation = saturation;\r\n        }\r\n\r\n        if (brightness != null) {\r\n            this.hsva.value = brightness;\r\n        }\r\n\r\n        if (alpha != null) {\r\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\r\n            this.hsva.alpha = alpha;\r\n        }\r\n\r\n        this.rgba = this.hsvaToRgba(this.hsva);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * define Color from RGBa\r\n     */\r\n    public setRgba(red: number = null, green: number = null, blue: number = null, alpha: number = 1): this {\r\n        if (red != null) {\r\n            this.rgba.red = red;\r\n        }\r\n\r\n        if (green != null) {\r\n            this.rgba.green = green;\r\n        }\r\n\r\n        if (blue != null) {\r\n            this.rgba.blue = blue;\r\n        }\r\n\r\n        if (alpha != null) {\r\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\r\n            this.rgba.alpha = alpha;\r\n        }\r\n\r\n        this.hsva = this.rgbaToHsva(this.rgba);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * define Color from HSLa\r\n     */\r\n    public setHsla(hue: number, saturation: number, lightness: number, alpha: number = 1): this {\r\n        if (alpha != null) {\r\n            alpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;\r\n            this.rgba.alpha = alpha;\r\n        }\r\n\r\n        const hsla = new Hsla(hue, saturation, lightness, alpha);\r\n        this.rgba = this.hslaToRgba(hsla);\r\n        this.hsva = this.rgbaToHsva(this.rgba);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * return hexadecimal value formatted as '#341d2a' or '#341d2aFF' if alhpa channel is enabled\r\n     */\r\n    public toHexString(alpha: boolean = false): ColorString {\r\n        /* tslint:disable:no-bitwise */\r\n        let hex = '#' + ((1 << 24) | (this.rgba.getRed() << 16) | (this.rgba.getGreen() << 8) | this.rgba.getBlue()).toString(16).substr(1);\r\n        if (alpha) {\r\n            hex += ((1 << 8) | Math.round(this.rgba.alpha * 255)).toString(16).substr(1);\r\n        }\r\n        /* tslint:enable:no-bitwise */\r\n        return hex.toUpperCase();\r\n    }\r\n\r\n    /**\r\n     * return rgba string formatted as rgba(52, 29, 42, 1)\r\n     */\r\n    public toRgbaString(): ColorString {\r\n        return this.rgba.toString();\r\n    }\r\n\r\n    /**\r\n     * return rgb string formatted as rgb(52, 29, 42)\r\n     */\r\n    public toRgbString(): ColorString {\r\n        return this.rgba.toString(false);\r\n    }\r\n\r\n    /**\r\n     * return hsla string formatted as hsla(327, 29%, 16%, 1)\r\n     */\r\n    public toHslaString(): ColorString {\r\n        return this.getHsla().toString();\r\n    }\r\n\r\n    /**\r\n     * return hsl string formatted as hsl(327, 29%, 16%)\r\n     */\r\n    public toHslString(): ColorString {\r\n        return this.getHsla().toString(false);\r\n    }\r\n\r\n    /**\r\n     * return hsva string formatted as hsva(327, 29%, 16%, 100%)\r\n     */\r\n    public toHsvaString(): ColorString {\r\n        return this.hsva.toString();\r\n    }\r\n\r\n    /**\r\n     * return hsv string formatted as hsv(327, 29%, 16%)\r\n     */\r\n    public toHsvString(): ColorString {\r\n        return this.hsva.toString(false);\r\n    }\r\n\r\n    /**\r\n     * return Cmyk string formatted as cmyk(100%, 100%, 100%, 100%)\r\n     */\r\n    public toCmykString(): ColorString {\r\n        return this.getCmyk().toString();\r\n    }\r\n\r\n    public getHsva(): Hsva {\r\n        return new Hsva(this.hsva.hue, this.hsva.saturation, this.hsva.value, this.hsva.alpha);\r\n    }\r\n\r\n    public getRgba(): Rgba {\r\n        return new Rgba(this.rgba.red, this.rgba.green, this.rgba.blue, this.rgba.alpha);\r\n    }\r\n\r\n    public getHsla(): Hsla {\r\n        return this.rgbaToHsla(this.rgba);\r\n    }\r\n\r\n    public getCmyk(): Cmyk {\r\n        return this.rgbaToCmyk(this.rgba);\r\n    }\r\n\r\n    private hsvaToHsla(color: Hsva): Hsla {\r\n        const hue = color.hue;\r\n        const s = color.saturation / 100;\r\n        const v = color.value / 100;\r\n        const lightness = ((2 - s) * color.value) / 2;\r\n        const saturation = (s * v) / ((lightness <= 1) ? lightness : 2 - lightness) || 0;\r\n\r\n        return new Hsla(hue, lightness * 100, saturation * 100, color.alpha);\r\n    }\r\n\r\n    private hslaToHsva(color: Hsla): Hsva {\r\n        const hue = color.hue;\r\n        const l = (color.lightness / 100) * 2;\r\n        const s = (color.saturation / 100) * (l <= 1 ? l : 2 - l);\r\n        const value = (l + s) / 2;\r\n        const saturation = (2 * s) / (l + s) || 0;\r\n\r\n        return new Hsva(hue, saturation, value, color.alpha);\r\n    }\r\n\r\n    private rgbaToHsva(color: Rgba): Hsva {\r\n        const red = color.red / 255;\r\n        const green = color.green / 255;\r\n        const blue = color.blue / 255;\r\n        const alpha = color.alpha;\r\n\r\n        const Cmax = Math.max(red, green, blue);\r\n        const Cmin = Math.min(red, green, blue);\r\n        const delta = Cmax - Cmin;\r\n\r\n        let hue = 0;\r\n        let saturation: number = Cmax === 0 ? 0 : delta / Cmax;\r\n        let brightness: number = Cmax;\r\n\r\n        if (Cmax !== Cmin) {\r\n            switch (Cmax) {\r\n                case red:\r\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\r\n                    break;\r\n                case green:\r\n                    hue = 2 + (blue - red) / delta;\r\n                    break;\r\n                case blue:\r\n                    hue = 4 + (red - green) / delta;\r\n                    break;\r\n            }\r\n            hue /= 6;\r\n        }\r\n\r\n        hue = hue * 360;\r\n        saturation = saturation * 100;\r\n        brightness = brightness * 100;\r\n\r\n        return new Hsva(hue, saturation, brightness, alpha);\r\n    }\r\n\r\n    private hsvaToRgba(color: Hsva): Rgba {\r\n        let red = 1;\r\n        let green = 0;\r\n        let blue = 0;\r\n        const saturation = color.saturation / 100;\r\n        const brightness = color.value / 100;\r\n        const alpha = color.alpha;\r\n        const hex = color.hue / 60;\r\n\r\n        const primary = Math.floor(hex);\r\n        const secoundary = hex - primary;\r\n        const a = (1 - saturation) * brightness;\r\n        const b = (1 - (saturation * secoundary)) * brightness;\r\n        const c = (1 - (saturation * (1 - secoundary))) * brightness;\r\n\r\n        switch (primary) {\r\n            case 6:\r\n            case 0: red = brightness; green = c; blue = a; break;\r\n            case 1: red = b; green = brightness; blue = a; break;\r\n            case 2: red = a; green = brightness; blue = c; break;\r\n            case 3: red = a; green = b; blue = brightness; break;\r\n            case 4: red = c; green = a; blue = brightness; break;\r\n            case 5: red = brightness; green = a; blue = b; break;\r\n        }\r\n\r\n        red = red * 255;\r\n        green = green * 255;\r\n        blue = blue * 255;\r\n\r\n        return new Rgba(red, green, blue, alpha);\r\n    }\r\n\r\n    private rgbaToHsla(color: Rgba): Hsla {\r\n        // based on CamanJS\r\n        const red = color.red / 255;\r\n        const green = color.green / 255;\r\n        const blue = color.blue / 255;\r\n        const alpha = color.alpha;\r\n\r\n        const max = Math.max(red, green, blue);\r\n        const min = Math.min(red, green, blue);\r\n\r\n        let hue = 0;\r\n        let saturation = 0;\r\n        let luminance = (max + min) / 2;\r\n        const delta = max - min;\r\n\r\n        if (max !== min) {\r\n            saturation = luminance > 0.5 ? delta / (2.0 - max - min) : delta / (max + min);\r\n            switch (max) {\r\n                case red:\r\n                    hue = (green - blue) / delta + (green < blue ? 6 : 0);\r\n                    break;\r\n                case green:\r\n                    hue = (blue - red) / delta + 2;\r\n                    break;\r\n                case blue:\r\n                    hue = (red - green) / delta + 4;\r\n                    break;\r\n            }\r\n\r\n            hue /= 6;\r\n        }\r\n\r\n        hue = hue * 360;\r\n        saturation = saturation * 100;\r\n        luminance = luminance * 100;\r\n\r\n        return new Hsla(hue, saturation, luminance, alpha);\r\n    }\r\n\r\n    /**\r\n     * convert rgb color from HSLa\r\n     *\r\n     * hue = 0 => 360\r\n     * saturation = 0 => 1\r\n     * lightness = 0 => 1\r\n     */\r\n    private hslaToRgba(color: Hsla): Rgba {\r\n        const hue = color.hue / 360;\r\n        const saturation = color.saturation / 100;\r\n        const lightness = color.lightness / 100;\r\n        const alpha = color.alpha;\r\n\r\n        let red = lightness;\r\n        let green = lightness;\r\n        let blue = lightness;\r\n\r\n        if (saturation !== 0) {\r\n            const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - (lightness * saturation);\r\n            const p = 2 * lightness - q;\r\n\r\n            red = this.hueToRgb(p, q, hue + (1 / 3));\r\n            green = this.hueToRgb(p, q, hue);\r\n            blue = this.hueToRgb(p, q, hue - (1 / 3));\r\n        }\r\n\r\n        red = red * 255;\r\n        green = green * 255;\r\n        blue = blue * 255;\r\n\r\n        return new Rgba(red, green, blue, alpha);\r\n    }\r\n\r\n    private hueToRgb(p, q, t): number {\r\n        // based on CamanJS\r\n        if (t < 0) { t += 1; }\r\n        if (t > 1) { t -= 1; }\r\n        if (t < 1 / 6) { return p + (q - p) * 6 * t; }\r\n        if (t < 1 / 2) { return q; }\r\n        if (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * The Red, Green, Blue values are given in the range of 0..255,\r\n     *\r\n     * the red color(R) is calculated from the cyan(C) and black(K) colors,\r\n     * the green color(G) is calculated from the magenta(M) and black(K) colors,\r\n     * The blue color(B) is calculated from the yellow(Y) and black(K) colors.\r\n     *\r\n     * Below is the formula of CMYK to RGB convertion\r\n     *\r\n     * Red = 255 × 1 - min( (1 - Cyan ÷ 100) × (1 - Black) )\r\n     * Green = 255 × 1 - min(1 - Magenta ÷ 100) × (1 - Black)\r\n     * Blue = 255 × 1 - min(1 - Yellow ÷ 100) × (1 - Black)\r\n     */\r\n    private cmykToRgba(color: Cmyk): Rgba {\r\n        const black = color.black / 100;\r\n        const cyan = color.cyan / 100;\r\n        const magenta = color.magenta / 100;\r\n        const yellow = color.yellow / 100;\r\n\r\n        let red = Math.min(1, (1 - cyan) * (1 - black));\r\n        let green = Math.min(1, (1 - magenta) * (1 - black));\r\n        let blue = Math.min(1, (1 - yellow) * (1 - black));\r\n\r\n        red = red * 255;\r\n        green = green * 255;\r\n        blue = blue * 255;\r\n\r\n        return new Rgba(red, green, blue, 1);\r\n    }\r\n\r\n    /**\r\n     * The max number of R, G, B values are 255, first of all, we divided them by 255 to become the number\r\n     * of 0~1, this ratio will be used in the calculation.\r\n     * Rc = R ÷ 255\r\n     * Gc = G ÷ 255\r\n     * Bc = B ÷ 255\r\n     * The black key(K) color could be many result, when we assume a black key value,\r\n     * the other three colors(cyan, magenta, yellow) can be calculated.\r\n     * we can calculate it from the red, green and blue colors, the max number of black key should be :\r\n     * K = 1 - min(Rc, Gc, Bc);\r\n     *\r\n     * or we can assume we run out of the black ink, need use the remaining other three color inks to finish the printing job.\r\n     * K = 0;\r\n     *\r\n     * The cyan color(C) is calculated from the red and black colors:\r\n     * C = (1 - Rc - K) ÷ (1 - K)\r\n     *\r\n     * The magenta color (M) is calculated from the green and black colors:\r\n     * M = (1 - Gr - K) ÷ (1 - K)\r\n     *\r\n     * The yellow color(Y) is calculated from the blue and black colors:\r\n     * Y = (1 - Bc - K) ÷ ( 1 - K)\r\n     */\r\n    private rgbaToCmyk(color: Rgba): Cmyk {\r\n        const red = color.red / 255;\r\n        const green = color.green / 255;\r\n        const blue = color.blue / 255;\r\n\r\n        let cyan = 1 - red;\r\n        let magenta = 1 - green;\r\n        let yellow = 1 - blue;\r\n        let black = Math.min(cyan, magenta, yellow);\r\n\r\n        if (black === 1) {\r\n            return new Cmyk(0, 0, 0, 1);\r\n        }\r\n\r\n        cyan = (cyan - black) / (1 - black);\r\n        magenta = (magenta - black) / (1 - black);\r\n        yellow = (yellow - black) / (1 - black);\r\n\r\n        black = black * 100;\r\n        cyan = cyan * 100;\r\n        magenta = magenta * 100;\r\n        yellow = yellow * 100;\r\n\r\n        return new Cmyk(cyan, magenta, yellow, black);\r\n    }\r\n\r\n    private roundNumber(n: number): number {\r\n        return Math.round(n * 100) / 100;\r\n    }\r\n\r\n    private stringToColor(colorString: ColorString): this {\r\n        const str = colorString.replace(/ /g, '').toLowerCase();\r\n        /**\r\n         * try to find color by name in table\r\n         */\r\n        let rgba: Rgba = ColorsTable[str] || null;\r\n\r\n        /**\r\n         * hex find\r\n         */\r\n        if (str[0] === '#') {\r\n            let hex = str.substr(1);\r\n            const length = hex.length;\r\n            let a = 1;\r\n            let hexArray;\r\n\r\n            if (length === 3) {\r\n                hexArray = hex.split('').map((value) => value + value);\r\n            } else if (length === 6) {\r\n                hexArray = hex.match(/.{2}/g);\r\n            } else if (length === 8) {\r\n                const alpha = hex.substr(-2);\r\n                hex = hex.substr(0, length - 2);\r\n                a = this.roundNumber(parseInt(alpha || 'FF', 16) / 255);\r\n                hexArray = hex.match(/.{2}/g);\r\n            }\r\n\r\n            if (hexArray.length === 3) {\r\n                rgba = new Rgba(parseInt(hexArray[0], 16), parseInt(hexArray[1], 16), parseInt(hexArray[2], 16), a);\r\n            }\r\n        }\r\n\r\n        const OpenParenthesis = str.indexOf('(');\r\n        const CloseParenthesis = str.indexOf(')');\r\n\r\n        if (OpenParenthesis !== -1 && CloseParenthesis + 1 === str.length) {\r\n            const colorTypeName = str.substr(0, OpenParenthesis);\r\n            const params = str.substr(OpenParenthesis + 1, CloseParenthesis - (OpenParenthesis + 1)).split(',');\r\n            let alpha = 1;\r\n\r\n            switch (colorTypeName) {\r\n                case 'rgba':\r\n                    alpha = parseFloat(params.pop());\r\n                // Fall through.\r\n                case 'rgb':\r\n                    rgba = new Rgba(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\r\n                    break;\r\n                case 'hsla':\r\n                    alpha = parseFloat(params.pop());\r\n                case 'hsl':\r\n                    const hsla = new Hsla(parseInt(params[0], 10), parseInt(params[1], 10), parseInt(params[2], 10), alpha);\r\n                    rgba = this.hslaToRgba(hsla);\r\n                    break;\r\n                case 'cmyk':\r\n                    const cmyk = new Cmyk(\r\n                        parseInt(params[0], 10),\r\n                        parseInt(params[1], 10),\r\n                        parseInt(params[2], 10),\r\n                        parseInt(params[3], 10));\r\n                    rgba = this.cmykToRgba(cmyk);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (rgba) {\r\n            this.rgba = rgba;\r\n            this.hsva = this.rgbaToHsva(rgba);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n","import { ElementRef, Renderer2, OnDestroy, Directive } from '@angular/core';\r\n\r\n/**\r\n * because a dynamic directive yet is not implemented,\r\n * we have a base class which will\r\n * help us to implement position calculation in our\r\n * components\r\n */\r\n@Directive()\r\nexport abstract class BaseComponent implements OnDestroy {\r\n\r\n    private eventHooks: Array<Function> = [];\r\n    private window: any = { pageXOffset: 0, pageYOffset: 0 };\r\n    private readonly requestAnimationFrame;\r\n\r\n    constructor(private readonly document, protected readonly elementRef: ElementRef, protected readonly renderer: Renderer2) {\r\n        this.window = document.defaultView;\r\n        this.requestAnimationFrame = this.getRequestAnimationFrame();\r\n    }\r\n\r\n    public abstract movePointer(coordinates: { x: number; y: number; height: number; width: number; }): void;\r\n\r\n    protected onEventChange(event: MouseEvent | TouchEvent): void {\r\n        this.calculate(event);\r\n\r\n        this.eventHooks.push(\r\n            this.renderer.listen(this.document, 'mouseup', () => this.removeListeners())\r\n        );\r\n        this.eventHooks.push(\r\n            this.renderer.listen(this.document, 'touchend', () => this.removeListeners())\r\n        );\r\n        this.eventHooks.push(\r\n            this.renderer.listen(this.document, 'mousemove', (e) => this.calculate(e))\r\n        );\r\n        this.eventHooks.push(\r\n            this.renderer.listen(this.document, 'touchmove', (e) => this.calculate(e))\r\n        );\r\n    }\r\n\r\n    private calculateCoordinates(event: MouseEvent | TouchEvent): void {\r\n        const { width: elWidth, height: elHeight, top: elTop, left: elLeft } = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n        const pageX = typeof event['pageX'] === 'number' ? event['pageX'] : event['touches'][0].pageX;\r\n        const pageY = typeof event['pageY'] === 'number' ? event['pageY'] : event['touches'][0].pageY;\r\n\r\n        const x = Math.max(0, Math.min(pageX - (elLeft + this.window.pageXOffset), elWidth));\r\n        const y = Math.max(0, Math.min(pageY - (elTop + this.window.pageYOffset), elHeight));\r\n\r\n        this.movePointer({ x, y, height: elHeight, width: elWidth });\r\n    }\r\n\r\n    private calculate(event: MouseEvent | TouchEvent): void {\r\n        event.preventDefault();\r\n        if (!this.requestAnimationFrame) {\r\n            return this.calculateCoordinates(event);\r\n        }\r\n\r\n        this.requestAnimationFrame(() => this.calculateCoordinates(event));\r\n    }\r\n\r\n    private getRequestAnimationFrame(): Function {\r\n        return this.window.requestAnimationFrame ||\r\n            this.window.webkitRequestAnimationFrame ||\r\n            this.window.mozRequestAnimationFrame ||\r\n            this.window.oRequestAnimationFrame ||\r\n            this.window.msRequestAnimationFrame;\r\n    }\r\n\r\n    private removeListeners(): void {\r\n        this.eventHooks.forEach((cb) => cb());\r\n        this.eventHooks.length = 0;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.removeListeners();\r\n    }\r\n}","import {\r\n    Component,\r\n    HostBinding,\r\n    Input,\r\n    EventEmitter,\r\n    Output,\r\n    ChangeDetectionStrategy,\r\n    HostListener,\r\n    Renderer2,\r\n    Inject,\r\n    ElementRef,\r\n    ViewChild,\r\n    OnInit,\r\n    OnChanges,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Color } from './../../../helpers/color.class';\r\nimport { BaseComponent } from './../base.component';\r\n\r\n\r\n@Component({\r\n    selector: `saturation-component`,\r\n    templateUrl: `./saturation.component.html`,\r\n    styleUrls: [\r\n        `./../base.style.scss`,\r\n        './saturation.component.scss'\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SaturationComponent extends BaseComponent implements OnInit, OnChanges {\r\n\r\n    @Input()\r\n    public hue: Color;\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Output()\r\n    public colorChange = new EventEmitter<Color>(false);\r\n\r\n    @ViewChild('pointer', { static: true })\r\n    public pointer: ElementRef;\r\n\r\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\r\n        super(document, elementRef, renderer);\r\n    }\r\n\r\n    @HostBinding('style.backgroundColor')\r\n    public get backgroundColor(): string {\r\n        return this.hue ? this.hue.toRgbaString() : '';\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    @HostListener('touchstart', ['$event'])\r\n    public onClick(event: any): void {\r\n        this.onEventChange(event);\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.hue) {\r\n            this.hue = Color.from(this.color.getHsva());\r\n        }\r\n        this.renderer.setStyle(this.elementRef.nativeElement, 'backgroundColor', this.backgroundColor);\r\n    }\r\n\r\n    /**\r\n     * color can be changed through inputs\r\n     * and then we need to move pointer\r\n     */\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\r\n            const hsva = this.color.getHsva();\r\n            this.changePointerPosition(hsva.saturation, hsva.value);\r\n        }\r\n    }\r\n\r\n    public movePointer({ x, y, height, width }): void {\r\n        const saturation = (x * 100) / width;\r\n        const bright = -((y * 100) / height) + 100;\r\n\r\n        this.changePointerPosition(saturation, bright);\r\n        const hsva = this.hue.getHsva();\r\n        const color = this.color.getHsva();\r\n        const newColor = new Color().setHsva(hsva.hue, saturation, bright, color.alpha);\r\n        this.colorChange.emit(newColor);\r\n    }\r\n\r\n    private changePointerPosition(x: number, y: number): void {\r\n        this.renderer.setStyle(this.pointer.nativeElement, 'top', `${100 - y}%`);\r\n        this.renderer.setStyle(this.pointer.nativeElement, 'left', `${x}%`);\r\n    }\r\n}\r\n","import { Class } from 'estree';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nexport interface IColorPickerConfig {\r\n    indicatorTitle: string;\r\n    presetsTitle: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ColorPickerConfig implements IColorPickerConfig {\r\n    public indicatorTitle: string = 'Copy color to clipboard';\r\n    public presetsTitle: string = '{0}. Long-click to show alternate shades.';\r\n}\r\n","import { Component, Input, HostBinding, HostListener, Renderer2, ElementRef, ChangeDetectionStrategy, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Color } from './../../../helpers/color.class';\r\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\r\n\r\n\r\n@Component({\r\n    selector: `indicator-component`,\r\n    templateUrl: `./indicator.component.html`,\r\n    styleUrls: [\r\n        `./../base.style.scss`,\r\n        `./indicator.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IndicatorComponent {\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Input()\r\n    public colorType: 'rgba' | 'hex' | 'hsla' | string = 'rgba';\r\n\r\n    @HostBinding('attr.title')\r\n    public get title() {\r\n        return this.pickerConfig ? this.pickerConfig.indicatorTitle : '';\r\n    }\r\n\r\n    constructor(\r\n        private readonly pickerConfig: ColorPickerConfig,\r\n        private readonly renderer: Renderer2,\r\n        private readonly elementRef: ElementRef,\r\n        @Inject(DOCUMENT) private readonly document) {\r\n    }\r\n\r\n    public get backgroundColor(): string {\r\n        return this.color.toRgbaString();\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    public onClick(event: MouseEvent | TouchEvent) {\r\n        const input = this.renderer.createElement('input');\r\n        this.renderer.setStyle(input, 'position', 'absolute');\r\n        this.renderer.setStyle(input, 'top', '-100%');\r\n        this.renderer.setStyle(input, 'left', '-100%');\r\n\r\n        switch (this.colorType) {\r\n            case 'hsla':\r\n                input.value = this.color.toHslaString();\r\n                break;\r\n            case 'hex':\r\n                input.value = this.color.toHexString(this.color.getRgba().alpha < 1);\r\n                break;\r\n            default:\r\n                input.value = this.backgroundColor;\r\n        }\r\n\r\n        this.renderer.appendChild(this.elementRef.nativeElement, input);\r\n        input.select();\r\n        this.document.execCommand('copy');\r\n        this.renderer.removeChild(this.elementRef.nativeElement, input);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ChangeDetectionStrategy,\r\n    Input,\r\n    Renderer2,\r\n    Inject,\r\n    ElementRef,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    HostListener,\r\n    SimpleChanges,\r\n    OnChanges\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Color } from './../../../helpers/color.class';\r\nimport { BaseComponent } from './../base.component';\r\n\r\n@Component({\r\n    selector: `hue-component`,\r\n    templateUrl: `./hue.component.html`,\r\n    styleUrls: [\r\n        `./../base.style.scss`,\r\n        `./hue.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HueComponent extends BaseComponent implements OnChanges {\r\n\r\n    @Input()\r\n    public hue: Color;\r\n\r\n    @Output()\r\n    public hueChange = new EventEmitter<Color>(false);\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Output()\r\n    public colorChange = new EventEmitter<Color>(false);\r\n\r\n    @ViewChild('pointer', { static: true })\r\n    public pointer: ElementRef;\r\n\r\n    private isVertical: boolean = false;\r\n\r\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\r\n        super(document, elementRef, renderer);\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    @HostListener('touchstart', ['$event'])\r\n    public onClick(event: any): void {\r\n        this.onEventChange(event);\r\n    }\r\n\r\n    @Input()\r\n    public set vertical(value: string) {\r\n        this.isVertical = true;\r\n    }\r\n\r\n    /**\r\n     * color can be changed through inputs\r\n     * and then we need to move pointer\r\n     */\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.hue && changes.hue.previousValue !== changes.hue.currentValue) {\r\n            const hsva = this.hue.getHsva();\r\n            this.changePointerPosition(hsva.hue);\r\n        }\r\n    }\r\n\r\n    public movePointer({ x, y, height, width }): void {\r\n        const hue = this.isVertical ? (y / height) * 360 : (x / width) * 360;\r\n        this.changePointerPosition(hue);\r\n\r\n        const color = this.color.getHsva();\r\n        const newColor = new Color().setHsva(hue, color.saturation, color.value, color.alpha);\r\n        const newHueColor = new Color().setHsva(hue, 100, 100, color.alpha);\r\n\r\n        this.hueChange.emit(newHueColor);\r\n        this.colorChange.emit(newColor);\r\n    }\r\n\r\n    /**\r\n     * hue value is in range from 0 to 360°\r\n     */\r\n    private changePointerPosition(hue: number): void {\r\n        const x = hue / 360 * 100;\r\n        const orientation = this.isVertical ? 'top' : 'left';\r\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\r\n    }\r\n}","import {\r\n    Component,\r\n    Input,\r\n    EventEmitter,\r\n    Output,\r\n    ChangeDetectionStrategy,\r\n    OnChanges,\r\n    Inject,\r\n    ElementRef,\r\n    ViewChild,\r\n    HostListener,\r\n    Renderer2,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Color } from './../../../helpers/color.class';\r\nimport { BaseComponent } from './../base.component';\r\n\r\n@Component({\r\n    selector: `alpha-component`,\r\n    templateUrl: `./alpha.component.html`,\r\n    styleUrls: [\r\n        `./../base.style.scss`,\r\n        `./alpha.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AlphaComponent extends BaseComponent implements OnChanges {\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Output()\r\n    public colorChange = new EventEmitter<Color>(false);\r\n\r\n    @ViewChild('pointer', { static: true })\r\n    public pointer: ElementRef;\r\n\r\n    private isVertical: boolean = false;\r\n\r\n    constructor(renderer: Renderer2, @Inject(DOCUMENT) document, elementRef: ElementRef) {\r\n        super(document, elementRef, renderer);\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    @HostListener('touchstart', ['$event'])\r\n    public onClick(event: any): void {\r\n        this.onEventChange(event);\r\n    }\r\n\r\n    @Input()\r\n    public set vertical(value: string) {\r\n        this.isVertical = true;\r\n    }\r\n\r\n    /**\r\n     * color can be changed through inputs\r\n     * and then we need to move pointer\r\n     */\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.color && changes.color.previousValue !== changes.color.currentValue) {\r\n            const hsva = this.color.getHsva();\r\n            this.changePointerPosition(hsva.alpha);\r\n        }\r\n    }\r\n\r\n    public movePointer({ x, y, height, width }): void {\r\n        const alpha = this.isVertical ? y / height : x / width;\r\n        this.changePointerPosition(alpha);\r\n\r\n        const hsva = this.color.getHsva();\r\n        const newColor = new Color().setHsva(hsva.hue, hsva.saturation, hsva.value, alpha);\r\n        this.colorChange.emit(newColor);\r\n    }\r\n\r\n    /**\r\n     * hue value is in range from 0 to 360°\r\n     */\r\n    private changePointerPosition(alpha: number): void {\r\n        const x = alpha * 100;\r\n        const orientation = this.isVertical ? 'top' : 'left';\r\n        this.renderer.setStyle(this.pointer.nativeElement, orientation, `${x}%`);\r\n    }\r\n\r\n    public get gradient(): string {\r\n        const rgba = this.color.getRgba();\r\n        const orientation = this.isVertical ? 'bottom' : 'right';\r\n        return `linear-gradient(to ${orientation}, rgba(${rgba.red}, ${rgba.green}, ${rgba.blue}, 0) 0%, rgb(${rgba.red}, ${rgba.green}, ${rgba.blue}) 100%)`;\r\n    }\r\n\r\n}","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Color } from './../../../../helpers/color.class';\r\n\r\n\r\n@Component({\r\n    selector: `rgba-input-component`,\r\n    templateUrl: `./rgba-input.component.html`,\r\n    styleUrls: [\r\n        `./../../base.style.scss`,\r\n        `./../input.component.scss`,\r\n        `./rgba-input.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RgbaComponent {\r\n\r\n    @Input()\r\n    public hue: Color;\r\n\r\n    @Output()\r\n    public hueChange = new EventEmitter<Color>(false);\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Output()\r\n    public colorChange = new EventEmitter<Color>(false);\r\n\r\n    public labelVisible: boolean;\r\n\r\n    @Input()\r\n    public set label(value) {\r\n        this.labelVisible = true;\r\n    }\r\n\r\n    public isAlphaVisible: boolean = true;\r\n\r\n    @Input()\r\n    public set alpha(isVisible: boolean) {\r\n        this.isAlphaVisible = isVisible;\r\n    }\r\n\r\n    public get value() {\r\n        return this.color ? this.color.getRgba() : null;\r\n    }\r\n\r\n    public onInputChange(newValue: number, color: 'R' | 'G' | 'B' | 'A') {\r\n        const value = this.value;\r\n        const red = color === 'R' ? newValue : value.red;\r\n        const green = color === 'G' ? newValue : value.green;\r\n        const blue = color === 'B' ? newValue : value.blue;\r\n        const alpha = color === 'A' ? newValue : value.alpha;\r\n\r\n        const newColor = new Color().setRgba(red, green, blue, alpha);\r\n        const hue = new Color().setHsva(newColor.getHsva().hue);\r\n\r\n        this.hueChange.emit(hue);\r\n        this.colorChange.emit(newColor);\r\n    }\r\n}\r\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Color } from './../../../../helpers/color.class';\r\n\r\n\r\n@Component({\r\n    selector: `hsla-input-component`,\r\n    templateUrl: `./hsla-input.component.html`,\r\n    styleUrls: [\r\n        `./../../base.style.scss`,\r\n        `./../input.component.scss`,\r\n        `./hsla-input.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HslaComponent {\r\n\r\n    @Input()\r\n    public hue: Color;\r\n\r\n    @Output()\r\n    public hueChange = new EventEmitter<Color>(false);\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Output()\r\n    public colorChange = new EventEmitter<Color>(false);\r\n\r\n    public labelVisible: boolean;\r\n\r\n    @Input()\r\n    public set label(value) {\r\n        this.labelVisible = true;\r\n    }\r\n\r\n    public isAlphaVisible: boolean = true;\r\n\r\n    @Input()\r\n    public set alpha(isVisible: boolean) {\r\n        this.isAlphaVisible = isVisible;\r\n    }\r\n\r\n    public get value() {\r\n        return this.color ? this.color.getHsla() : null;\r\n    }\r\n\r\n    public onInputChange(newValue: number, color: 'H' | 'S' | 'L' | 'A') {\r\n        const value = this.value;\r\n        const hue = color === 'H' ? newValue : value.hue;\r\n        const saturation = color === 'S' ? newValue : value.saturation;\r\n        const lightness = color === 'L' ? newValue : value.lightness;\r\n        const alpha = color === 'A' ? newValue : value.alpha;\r\n\r\n\r\n        const newColor = new Color().setHsla(hue, saturation, lightness, alpha);\r\n        const hueColor = new Color().setHsva(newColor.getHsva().hue);\r\n\r\n        this.hueChange.emit(hueColor);\r\n        this.colorChange.emit(newColor);\r\n    }\r\n}\r\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Color } from '../../../../helpers/color.class';\r\n\r\n\r\n@Component({\r\n    selector: `hex-input-component`,\r\n    templateUrl: `./hex-input.component.html`,\r\n    styleUrls: [\r\n        `./../../base.style.scss`,\r\n        `./../input.component.scss`,\r\n        `./hex-input.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HexComponent {\r\n\r\n    @Input()\r\n    public hue: Color;\r\n\r\n    @Output()\r\n    public hueChange = new EventEmitter<Color>(false);\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Output()\r\n    public colorChange = new EventEmitter<Color>(false);\r\n\r\n    public labelVisible: boolean;\r\n    private prefixValue: string = '';\r\n\r\n    @Input()\r\n    public set label(value) {\r\n        this.labelVisible = true;\r\n    }\r\n\r\n    @Input()\r\n    public set prefix(value) {\r\n        this.prefixValue = value;\r\n    }\r\n\r\n    public get value() {\r\n        return this.prefixValue + (this.color ? this.color.toHexString(this.color.getRgba().alpha < 1).replace('#', '') : '');\r\n    }\r\n\r\n    public onInputChange(event: KeyboardEvent, inputValue: string): void {\r\n        const value = inputValue.toLowerCase().replace('#', '');\r\n\r\n        if (\r\n        ((event.keyCode === 13 || event.key.toLowerCase() === 'enter') && value.length === 3)\r\n        || value.length === 6 || value.length === 8) {\r\n            const hex = parseInt(value, 16);\r\n            const hexStr = hex.toString(16);\r\n\r\n            /**\r\n             * if value is valid\r\n             * change color else do nothing\r\n             * after parsing number leading 0 is removed,\r\n             * compare length and add leading 0 before comparing two values\r\n             */\r\n            if (hexStr.padStart(value.length, '0') === value && this.value !== value) {\r\n                const newColor = new Color(`#${value}`);\r\n                const hue = new Color().setHsva(newColor.getHsva().hue);\r\n                this.hueChange.emit(hue);\r\n                this.colorChange.emit(newColor);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Color } from './../../../helpers/color.class';\r\n\r\n@Component({\r\n    selector: `color-presets-component`,\r\n    templateUrl: `./color-presets.component.html`,\r\n    styleUrls: [\r\n        `./../base.style.scss`,\r\n        `./color-presets.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ColorPresetsComponent {\r\n\r\n    @Input()\r\n    public columns: number = 8;\r\n\r\n    @Input()\r\n    public colorPresets: Array<Array<Color> | Color>;\r\n\r\n    @Input()\r\n    public hue: Color;\r\n\r\n    @Output()\r\n    public hueChange = new EventEmitter<Color>(false);\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Output()\r\n    public colorChange = new EventEmitter<Color>(false);\r\n\r\n    @Input()\r\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\r\n\r\n    public onSelectionChange(color: Color): void {\r\n        const selectedRgbaColor = color.getRgba();\r\n        const selectedHsvaColor = color.getHsva();\r\n\r\n        const newColor = new Color().setRgba(selectedRgbaColor.red, selectedRgbaColor.green, selectedRgbaColor.blue, selectedRgbaColor.alpha);\r\n        const hueColor = new Color().setHsva(selectedHsvaColor.hue);\r\n\r\n        this.hueChange.emit(hueColor);\r\n        this.colorChange.emit(newColor);\r\n    }\r\n\r\n    public isList(colorPreset: Array<Array<Color> | Color>): boolean {\r\n        return Array.isArray(colorPreset);\r\n    }\r\n}","import {\r\n    Component,\r\n    HostBinding,\r\n    Input,\r\n    EventEmitter,\r\n    Output,\r\n    ChangeDetectionStrategy,\r\n    HostListener,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport { Color, ColorString } from './../../../helpers/color.class';\r\nimport { Subject, of } from 'rxjs';\r\nimport { takeUntil, delay, map } from 'rxjs/operators';\r\nimport { ColorPickerConfig } from './../../../services/color-picker.service';\r\n\r\n@Component({\r\n    selector: `color-preset`,\r\n    template: ``,\r\n    styleUrls: [\r\n        `./../base.style.scss`,\r\n        `./color-preset.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ColorPresetComponent implements OnDestroy {\r\n\r\n    @Input()\r\n    public activeColor: Color;\r\n\r\n    @Input()\r\n    public color: Color;\r\n\r\n    @Input('show-depth-title')\r\n    public set depth(showDepthText: boolean) {\r\n        this.showDepthText = !!showDepthText;\r\n    }\r\n\r\n    @Output()\r\n    public selectionChange = new EventEmitter<Color>(false);\r\n\r\n    @Output()\r\n    public longPress = new EventEmitter<boolean>(false);\r\n\r\n    private mouseup = new Subject<MouseEvent | TouchEvent>();\r\n\r\n    private showDepthText: boolean = false;\r\n\r\n    constructor(private readonly pickerConfig: ColorPickerConfig) { }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.mouseup.next();\r\n        this.mouseup.complete();\r\n    }\r\n\r\n    @HostBinding('style.backgroundColor')\r\n    public get bgColor(): ColorString {\r\n        return this.color.toRgbaString();\r\n    }\r\n\r\n    @HostBinding('attr.title')\r\n    public get title() {\r\n        const color = this.color ? this.color.toHexString() : '';\r\n\r\n        if (this.showDepthText) {\r\n            return this.pickerConfig.presetsTitle.replace(/\\{\\s*(.+?)\\s*\\}/g, (match, firstMatch) => color);\r\n        }\r\n        return color;\r\n    }\r\n\r\n    @HostBinding('class.selected')\r\n    public get className(): boolean {\r\n        return this.activeColor ? this.color.toRgbaString() === this.activeColor.toRgbaString() : false;\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    @HostListener('touchstart', ['$event'])\r\n    public onTouch(event: MouseEvent | TouchEvent): void {\r\n        of(event)\r\n            .pipe(\r\n                map((e: MouseEvent | TouchEvent) => e.timeStamp || new Date().getTime()),\r\n                delay(350),\r\n                takeUntil(this.mouseup)\r\n            )\r\n            .subscribe(() => this.longPress.next(true));\r\n\r\n        this.selectionChange.emit(this.color);\r\n    }\r\n\r\n    @HostListener('mouseup', ['$event'])\r\n    @HostListener('touchend', ['$event'])\r\n    public onTouchEnd(event: MouseEvent | TouchEvent): void {\r\n        this.mouseup.next(event);\r\n    }\r\n\r\n}\r\n","import {\r\n    trigger, stagger, query,\r\n    transition, animate, style, state\r\n} from '@angular/animations';\r\n\r\n\r\nexport const OpacityAnimation = trigger('opacityAnimation', [\r\n    state('true', style({ opacity: 1 })),\r\n    transition('void => *', [\r\n        style({ opacity: 0 }),\r\n        animate('.08s ease-in')\r\n    ])\r\n])\r\n\r\n\r\nexport const ListAnimation = trigger('listAnimation', [\r\n    transition('* => up', [\r\n        query(':enter', [\r\n            style({ opacity: 0, height: 0 }),\r\n            stagger(-10, [\r\n                animate('.08s', style({ opacity: 1, height: '*' }))\r\n            ])\r\n        ], { optional: true })\r\n    ]),\r\n    transition('* => right', [\r\n        query(':enter', [\r\n            style({ opacity: 0, height: 0 }),\r\n            stagger(-10, [\r\n                animate('.08s', style({ opacity: 1, height: '*' }))\r\n            ])\r\n        ], { optional: true })\r\n    ]),\r\n    transition('* => down', [\r\n        query(':enter', [\r\n            style({ opacity: 0, height: 0 }),\r\n            stagger(10, [\r\n                animate('.08s', style({ opacity: 1, height: '*' }))\r\n            ])\r\n        ], { optional: true })\r\n    ]),\r\n    transition('* => left', [\r\n        query(':enter', [\r\n            style({ opacity: 0, height: 0 }),\r\n            stagger(10, [\r\n                animate('.08s', style({ opacity: 1, height: '*' }))\r\n            ])\r\n        ], { optional: true })\r\n    ])\r\n])","import {\r\n    Component,\r\n    Input,\r\n    ChangeDetectionStrategy,\r\n    Renderer2,\r\n    Inject,\r\n    OnDestroy,\r\n    ChangeDetectorRef,\r\n    Output,\r\n    EventEmitter,\r\n    HostBinding\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Color } from './../../../helpers/color.class';\r\nimport { OpacityAnimation, ListAnimation } from './color-preset-sublist.animation';\r\n\r\n@Component({\r\n    selector: `color-preset-sublist`,\r\n    templateUrl: `./color-preset-sublist.component.html`,\r\n    styleUrls: [\r\n        `./../base.style.scss`,\r\n        `./color-preset-sublist.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    animations: [OpacityAnimation, ListAnimation]\r\n})\r\nexport class ColorPresetSublist implements OnDestroy {\r\n\r\n    @Input()\r\n    public list: Array<Color>;\r\n\r\n    @Output()\r\n    public selectionChange = new EventEmitter<Color>(false);\r\n\r\n    @Input()\r\n    public direction: 'down' | 'up' | 'left' | 'right' = 'up';\r\n\r\n    @Input()\r\n    public activeColor: Color;\r\n\r\n    public showChildren: boolean = false;\r\n\r\n    private hooks: Array<Function> = [];\r\n\r\n    constructor(\r\n        private readonly renderer: Renderer2,\r\n        @Inject(DOCUMENT) private readonly document,\r\n        private readonly cdr: ChangeDetectorRef) {\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.removeListeners();\r\n        this.cdr.detach();\r\n    }\r\n\r\n    private removeListeners(): void {\r\n        this.hooks.forEach((callback) => callback());\r\n        this.hooks.length = 0;\r\n    }\r\n\r\n    /**\r\n     * emit color change\r\n     */\r\n    public onSelectionChange(color: Color): void {\r\n        this.selectionChange.next(color);\r\n    }\r\n\r\n    public onLongPress(): void {\r\n        this.showChildren = true;\r\n        this.listenDocumentClick();\r\n    }\r\n\r\n    private listenDocumentClick(): void {\r\n        this.hooks.push(this.renderer.listen(this.document, 'mousedown', () => this.closeList()));\r\n        this.hooks.push(this.renderer.listen(this.document, 'touchstart', () => this.closeList()));\r\n    }\r\n\r\n    private closeList(): void {\r\n        if (this.showChildren) {\r\n            this.showChildren = false;\r\n            this.cdr.markForCheck();\r\n            this.removeListeners();\r\n        }\r\n    }\r\n\r\n    @HostBinding('className')\r\n    public get className(): string {\r\n        return `direction-${this.direction}`;\r\n    }\r\n}","import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[inputChange]'\r\n})\r\nexport class ColorPickerInputDirective {\r\n    @Input()\r\n    public min: string;\r\n\r\n    @Input()\r\n    public max: string;\r\n\r\n    @Output()\r\n    public inputChange = new EventEmitter<number>();\r\n\r\n    @HostListener('input', ['$event'])\r\n    public inputChanges(event: any): void {\r\n        const element = event.target as HTMLInputElement || event.srcElement as HTMLInputElement;\r\n        const value = element.value;\r\n\r\n        const numeric = parseFloat(value);\r\n        if (!isNaN(numeric) && numeric >= parseInt(this.min, 10) &&\r\n            numeric <= parseInt(this.max, 10)) {\r\n            this.inputChange.emit(numeric);\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({ name: 'chunks' })\r\nexport class ChunksPipe implements PipeTransform {\r\n    transform(arr: any, chunkSize: number) {\r\n        return arr.reduce((prev, cur, i) => (i % chunkSize) ? prev : prev.concat([arr.slice(i, i + chunkSize)]), []);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({ name: 'reverse' })\r\nexport class ReversePipe implements PipeTransform {\r\n    transform(arr: Array<any>, isReversed: boolean = true) {\r\n        if (isReversed) {\r\n            return arr.slice().reverse();\r\n        }\r\n\r\n        return arr;\r\n    }\r\n}\r\n","import { Color, ColorString } from './color.class';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { Rgba } from './rgba.class';\r\nimport { Hsla } from './hsla.class';\r\nimport { Hsva } from './hsva.class';\r\n\r\nexport enum ColorType {\r\n    hex = 'hex',\r\n    hexa = 'hexa',\r\n    rgba = 'rgba',\r\n    rgb = 'rgb',\r\n    hsla = 'hsla',\r\n    hsl = 'hsl',\r\n    cmyk = 'cmyk'\r\n}\r\n\r\nexport class ColorPickerControl {\r\n\r\n    private modelValue: Color = null;\r\n    private hueValue: Color = null;\r\n    private initValue: Color = null;\r\n    private readonly valueChanged: Subject<Color> = new Subject();\r\n\r\n    public readonly presetsVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n    public initType: ColorType = null;\r\n    public readonly alphaChannelVisibilityChanges: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n    public readonly valueChanges = this.valueChanged.asObservable().pipe(distinctUntilChanged((x, y) => x.toRgbaString() == y.toRgbaString()));\r\n\r\n    private colorPresets: Array<Array<Color> | Color> = [];\r\n\r\n    constructor() {\r\n        const color = Color.from(new Rgba(255, 0, 0, 1));\r\n        this.setValue(color);\r\n        this.setHueColor(color);\r\n    }\r\n\r\n    public setValueFrom(color: ColorString | Color | Rgba | Hsla | Hsva): this {\r\n        const newColor = Color.from(color);\r\n        if (!this.initValue) {\r\n            this.initValue = Color.from(color);\r\n        }\r\n\r\n        if (typeof color === 'string') {\r\n            this.finOutInputType(color);\r\n        }\r\n        this.setHueColor(newColor);\r\n        this.setValue(newColor);\r\n        return this;\r\n    }\r\n\r\n    private setHueColor(color: Color) {\r\n        if (this.hueValue && color.getHsva().hue > 0 || !this.hueValue) {\r\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\r\n        }\r\n    }\r\n\r\n    public get hue() {\r\n        return this.hueValue;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * used for two-way data binding\r\n     */\r\n    public set hue(hueColor: Color) {\r\n        this.hueValue = hueColor;\r\n    }\r\n\r\n    private setValue(value: Color): this {\r\n        this.modelValue = value;\r\n        this.valueChanged.next(value);\r\n        return this;\r\n    }\r\n\r\n    public get value(): Color {\r\n        return this.modelValue;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * used for two-way data binding\r\n     */\r\n    public set value(value: Color) {\r\n        this.setValue(value);\r\n    }\r\n\r\n    /**\r\n     * reset color to initial\r\n     */\r\n    public reset(): this {\r\n        let color;\r\n        if (!this.initValue) {\r\n            color = Color.from(new Rgba(255, 0, 0, 1));\r\n            this.hueValue = new Color().setHsva(color.getHsva().hue);\r\n        } else {\r\n            color = this.initValue.clone();\r\n            this.setHueColor(color);\r\n        }\r\n\r\n        this.setValue(color);\r\n        return this;\r\n    }\r\n\r\n    public isAlphaChannelEnabled(): boolean {\r\n        return this.alphaChannelVisibilityChanges.value;\r\n    }\r\n\r\n    public showAlphaChannel(): this {\r\n        this.alphaChannelVisibilityChanges.next(true);\r\n        return this;\r\n    }\r\n\r\n    public hideAlphaChannel(): this {\r\n        this.alphaChannelVisibilityChanges.next(false);\r\n        return this;\r\n    }\r\n\r\n    private finOutInputType(colorString: ColorString) {\r\n        const str = colorString.replace(/ /g, '').toLowerCase();\r\n        if (str[0] === '#') {\r\n            this.initType = ColorType.hex;\r\n            if (str.length > 7) {\r\n                this.initType = ColorType.hexa;\r\n            }\r\n        }\r\n\r\n        const OpenParenthesis = str.indexOf('(');\r\n        const colorTypeName = str.substr(0, OpenParenthesis);\r\n        switch (colorTypeName) {\r\n            case ColorType.rgba:\r\n                this.initType = ColorType.rgba;\r\n                break;\r\n            case ColorType.rgb:\r\n                this.initType = ColorType.rgb;\r\n                break;\r\n            case ColorType.hsla:\r\n                this.initType = ColorType.hsla;\r\n                break;\r\n            case ColorType.hsl:\r\n                this.initType = ColorType.hsl;\r\n                break;\r\n            case ColorType.cmyk:\r\n                this.initType = ColorType.cmyk;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public setColorPresets(colorPresets: Array<Array<ColorString> | ColorString>): this {\r\n        this.colorPresets = this.setPresets(colorPresets);\r\n        return this;\r\n    }\r\n\r\n    private setPresets(colorPresets: Array<Array<ColorString> | ColorString>): Array<Color> {\r\n        const presets = [];\r\n\r\n        for (const color of colorPresets) {\r\n            if (Array.isArray(color)) {\r\n                presets.push(this.setPresets(color));\r\n            } else {\r\n                presets.push(new Color(color));\r\n            }\r\n        }\r\n        return presets;\r\n    }\r\n\r\n    public get presets() {\r\n        return this.colorPresets;\r\n    }\r\n\r\n    public hasPresets(): boolean {\r\n        return this.colorPresets.length > 0;\r\n    }\r\n\r\n    public isPresetVisible(): boolean {\r\n        return this.presetsVisibilityChanges.value;\r\n    }\r\n\r\n    public showPresets(): this {\r\n        this.presetsVisibilityChanges.next(true);\r\n        return this;\r\n    }\r\n\r\n    public hidePresets(): this {\r\n        this.presetsVisibilityChanges.next(false);\r\n        return this;\r\n    }\r\n}\r\n","import { Color } from './color.class';\r\nimport { ColorType } from './control.class';\r\n\r\n\r\nexport function getValueByType(color: Color, type: ColorType): string {\r\n    switch (type) {\r\n        case ColorType.hex:\r\n            return color.toHexString();\r\n        case ColorType.hexa:\r\n            return color.toHexString(true);\r\n        case ColorType.rgb:\r\n            return color.toRgbString();\r\n        case ColorType.rgba:\r\n            return color.toRgbaString();\r\n        case ColorType.hsl:\r\n            return color.toHslString();\r\n        case ColorType.hsla:\r\n            return color.toHslaString();\r\n        default:\r\n            return color.toRgbaString();\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    OnDestroy,\r\n    OnChanges,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ColorString } from './../../helpers/color.class';\r\nimport { ColorPickerControl } from './../../helpers/control.class';\r\nimport { getValueByType } from './../../helpers/helper.functions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: `chrome-picker`,\r\n    templateUrl: `./chrome-picker.component.html`,\r\n    styleUrls: [\r\n        `./../parts/base.style.scss`,\r\n        `./chrome-picker.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ChromePickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    public selectedPresentation: number = 0;\r\n    public presentations = ['rgba', 'hsla', 'hex'];\r\n\r\n    @Input()\r\n    public color: string;\r\n\r\n    @Input()\r\n    public control: ColorPickerControl;\r\n\r\n    @Output()\r\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\r\n\r\n    private subscriptions: Array<Subscription> = [];\r\n\r\n    constructor(private readonly cdr: ChangeDetectorRef) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.control) {\r\n            this.control = new ColorPickerControl();\r\n        }\r\n\r\n        if (this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n\r\n        /**\r\n         * set color presets\r\n         * defined by this chrome color picker component\r\n         */\r\n        if (!this.control.hasPresets()) {\r\n            this.control\r\n                .setColorPresets([\r\n                    ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\r\n                    ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\r\n                    ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\r\n                    ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\r\n                    ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\r\n                    ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\r\n                    ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\r\n                    ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'],\r\n                    ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\r\n                    ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\r\n                    ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\r\n                    ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\r\n                    ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\r\n                    ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\r\n                    ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\r\n                    ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\r\n                    ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\r\n                    ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\r\n                    ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\r\n                ]);\r\n        }\r\n\r\n        this.subscriptions.push(\r\n            this.control.valueChanges.subscribe((value) => {\r\n                this.cdr.markForCheck();\r\n                this.colorChange.emit(getValueByType(value, this.control.initType));\r\n            })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.cdr.detach();\r\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\r\n        this.subscriptions.length = 0;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n    }\r\n\r\n    public changePresentation(): void {\r\n        this.selectedPresentation =\r\n            this.selectedPresentation === this.presentations.length - 1 ? 0 : this.selectedPresentation + 1;\r\n    }\r\n\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    OnChanges,\r\n    OnDestroy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ColorString } from './../../helpers/color.class';\r\nimport { ColorPickerControl } from './../../helpers/control.class';\r\nimport { getValueByType } from './../../helpers/helper.functions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: `sketch-picker`,\r\n    templateUrl: `./sketch-picker.component.html`,\r\n    styleUrls: [\r\n        `./../parts/base.style.scss`,\r\n        `./sketch-picker.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SketchPickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    @Input()\r\n    public color: string;\r\n\r\n    @Input()\r\n    public control: ColorPickerControl;\r\n\r\n    @Output()\r\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\r\n\r\n    private subscriptions: Array<Subscription> = [];\r\n\r\n    constructor(private readonly cdr: ChangeDetectorRef) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.control) {\r\n            this.control = new ColorPickerControl();\r\n        }\r\n\r\n        if (this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n\r\n        if (!this.control.hasPresets()) {\r\n            /**\r\n             * set color presets\r\n             * defined by sketch color picker component\r\n             */\r\n            this.control\r\n                .setColorPresets([\r\n                    '#d0041b', '#8b572a', '#f5a623', '#f8e71c', '#7ed321', '#417506', '#bd10e0', '#9013fe',\r\n                    '#4a90e2', '#50e3c2', '#b8e986', '#030303', '#4a4a4a', '#9b9b9b', '#fff'\r\n                ]);\r\n        }\r\n\r\n        this.subscriptions.push(\r\n            this.control.valueChanges.subscribe((value) => {\r\n                this.cdr.markForCheck();\r\n                this.colorChange.emit(getValueByType(value, this.control.initType));\r\n            })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.cdr.detach();\r\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\r\n        this.subscriptions.length = 0;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    OnChanges,\r\n    OnDestroy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ColorString } from './../../helpers/color.class';\r\nimport { ColorPickerControl } from './../../helpers/control.class';\r\nimport { getValueByType } from './../../helpers/helper.functions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: `compact-picker`,\r\n    templateUrl: `./compact-picker.component.html`,\r\n    styleUrls: [\r\n        `./../parts/base.style.scss`,\r\n        `./compact-picker.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CompactPickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    @Input()\r\n    public color: string;\r\n\r\n    @Input()\r\n    public control: ColorPickerControl;\r\n\r\n    @Output()\r\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\r\n\r\n    private subscriptions: Array<Subscription> = [];\r\n\r\n    constructor(private readonly cdr: ChangeDetectorRef) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.control) {\r\n            this.control = new ColorPickerControl();\r\n        }\r\n\r\n        if (this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n\r\n        /**\r\n         * set color presets\r\n         * defined by compact color picker component\r\n         */\r\n        if (!this.control.hasPresets()) {\r\n            this.control\r\n                .setColorPresets([\r\n                    '#6da6e8', '#74c283', '#f9d948', '#f5943f', '#f66c6c', '#ef8ab8', '#696cd4', '#6c6c6c', '#f6f5f5'\r\n                ]);\r\n        }\r\n\r\n        this.subscriptions.push(\r\n            this.control.valueChanges.subscribe((value) => {\r\n                this.cdr.markForCheck();\r\n                this.colorChange.emit(getValueByType(value, this.control.initType));\r\n            })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.cdr.detach();\r\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\r\n        this.subscriptions.length = 0;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n    }\r\n}","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    OnDestroy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ColorString } from './../../helpers/color.class';\r\nimport { ColorPickerControl } from './../../helpers/control.class';\r\nimport { getValueByType } from './../../helpers/helper.functions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: `github-picker`,\r\n    templateUrl: `./github-picker.component.html`,\r\n    styleUrls: [\r\n        `./../parts/base.style.scss`,\r\n        `./github-picker.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GithubPickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    @Input()\r\n    public color: string;\r\n\r\n    @Input()\r\n    public control: ColorPickerControl;\r\n\r\n    @Output()\r\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\r\n\r\n    private subscriptions: Array<Subscription> = [];\r\n\r\n    constructor(private readonly cdr: ChangeDetectorRef) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.control) {\r\n            this.control = new ColorPickerControl();\r\n        }\r\n\r\n        if (this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n\r\n        if (!this.control.hasPresets()) {\r\n            /**\r\n             * set color presets\r\n             * defined by github color picker component\r\n             */\r\n            this.control\r\n                .setColorPresets([\r\n                    '#b80000', '#db3e00', '#fccb00', '#008b02', '#006b76', '#1273de', '#004dcf', '#5300eb',\r\n                    '#eb9694', '#fad0c3', '#fef3bd', '#c1e1c5', '#bedadc', '#c4def6', '#bed3f3', '#d4c4fb'\r\n                ]);\r\n        }\r\n\r\n        this.subscriptions.push(\r\n            this.control.valueChanges.subscribe((value) => {\r\n                this.cdr.markForCheck();\r\n                this.colorChange.emit(getValueByType(value, this.control.initType));\r\n            })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.cdr.detach();\r\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\r\n        this.subscriptions.length = 0;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n    }\r\n}","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    OnDestroy,\r\n    ChangeDetectorRef,\r\n    OnChanges\r\n} from '@angular/core';\r\nimport { ColorString } from './../../helpers/color.class';\r\nimport { ColorPickerControl } from './../../helpers/control.class';\r\nimport { getValueByType } from './../../helpers/helper.functions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: `swatches-picker`,\r\n    templateUrl: `./swatches-picker.component.html`,\r\n    styleUrls: [\r\n        `./../parts/base.style.scss`,\r\n        `./swatches-picker.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SwatchesPickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    @Input()\r\n    public color: string;\r\n\r\n    @Output()\r\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\r\n\r\n    public control: ColorPickerControl = new ColorPickerControl();\r\n    public childControl: ColorPickerControl = new ColorPickerControl();\r\n    private subscriptions: Array<Subscription> = [];\r\n\r\n    private mapColors = {\r\n        '#E6315B': [\r\n            '#fc8da7', '#fa7d9a', '#f56484', '#f04a71', '#e82c58', '#e31746', '#de0235',\r\n            '#d60234', '#d10232', '#c70230', '#b8022c', '#ab0229', '#9c0225', '#8f0122',\r\n            '#8c0122', '#82011f', '#78011b', '#690117', '#5c0012', '#4f0010', '#42000c'\r\n        ],\r\n        '#793183': [\r\n            '#ef8dfc', '#eb7dfa', '#e664f5', '#dc4af0', '#d22ce8', '#cb17e3', '#c402de',\r\n            '#c002d9', '#bb02d4', '#b002c7', '#a202b8', '#9702ab', '#8a029c', '#7e018f',\r\n            '#7a018a', '#730182', '#6c0178', '#5e0169', '#54015c', '#49014f', '#3d0142'\r\n        ],\r\n        '#009DE7': [\r\n            '#8dd9fc', '#7dd2fa', '#64c7f5', '#4abbf0', '#2cade8', '#17a2e3', '#0298de',\r\n            '#0295d9', '#0291d4', '#0289c7', '#027eb8', '#0275ab', '#026b9c', '#01628f',\r\n            '#015f8a', '#015982', '#015278', '#014869', '#013f5c', '#01364f', '#012e42'\r\n        ],\r\n        '#00B59C': [\r\n            '#8dfeea', '#7dfbe4', '#63f4db', '#4befd2', '#2de7c6', '#16e2be', '#03deb7',\r\n            '#01ddb6', '#01d4ae', '#01c7a4', '#01b897', '#01aa8b', '#019b80', '#019076',\r\n            '#018c73', '#01836c', '#017763', '#016857', '#005c4e', '#005044', '#004239'\r\n        ],\r\n        '#FFCE00': [\r\n            '#fce68d', '#fae17d', '#f5da64', '#f0cf4a', '#e8c22c', '#e5bc17', '#deb202',\r\n            '#deb100', '#d4aa02', '#c7a002', '#b89302', '#ab8902', '#9c7d02', '#8f7301',\r\n            '#8c7001', '#826801', '#786201', '#695601', '#5c4b00', '#4f4100', '#423700'\r\n        ],\r\n        '#FF4A21': [\r\n            '#fca28d', '#fa947d', '#f57f64', '#f0694a', '#e84f2c', '#e33c17', '#de2a02',\r\n            '#d92a02', '#d42902', '#c72602', '#b82302', '#ab2102', '#9c1e02', '#8f1b01',\r\n            '#8a1a01', '#821901', '#781701', '#691300', '#5c1100', '#4f0e00', '#420c00'\r\n        ],\r\n        '#D6D5D6': [\r\n            '#fff', '#f2f2f2', '#e5e5e5', '#d9d9d9', '#cccccc', '#bfbfbf', '#b3b3b3',\r\n            '#a6a6a6', '#999999', '#8c8c8c', '#808080', '#737373', '#666666', '#595959',\r\n            '#4d4d4d', '#424242', '#363636', '#262626', '#1a1a1a', '#0f0f0f', '#000'\r\n        ]\r\n    };\r\n\r\n    constructor(private readonly cdr: ChangeDetectorRef) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.color) {\r\n            this.childControl.setValueFrom(this.color);\r\n        } else {\r\n            this.control.setValueFrom('#E6315B');\r\n        }\r\n\r\n        /**\r\n         * set color presets\r\n         * defined by swatches color picker component\r\n         */\r\n        this.control.setColorPresets([\r\n            '#e6315b', '#793183', '#009de7', '#00b59c', '#ffce00', '#ff4a21', '#d6d5d6'\r\n        ]);\r\n\r\n        /**\r\n         * initially open first group\r\n         */\r\n        this.childControl.setColorPresets(this.mapColors['#E6315B']);\r\n\r\n        this.subscriptions.push(\r\n            this.childControl.valueChanges.subscribe((value) => {\r\n                this.colorChange.emit(getValueByType(value, this.childControl.initType));\r\n            })\r\n        );\r\n\r\n        this.subscriptions.push(\r\n            this.control.valueChanges.subscribe((value) => {\r\n                this.cdr.markForCheck();\r\n                const presets = this.mapColors[value.toHexString()];\r\n                if (presets) {\r\n                    this.childControl.setColorPresets(presets);\r\n                }\r\n                this.colorChange.emit(getValueByType(this.childControl.value, this.childControl.initType));\r\n            })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.cdr.detach();\r\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\r\n        this.subscriptions.length = 0;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\r\n            this.childControl.setValueFrom(this.color);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    OnDestroy,\r\n    OnChanges\r\n} from '@angular/core';\r\nimport { ColorString } from './../../helpers/color.class';\r\nimport { ColorPickerControl } from './../../helpers/control.class';\r\nimport { getValueByType } from './../../helpers/helper.functions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: `ip-picker`,\r\n    templateUrl: `./ip-picker.component.html`,\r\n    styleUrls: [\r\n        `./../parts/base.style.scss`,\r\n        `./ip-picker.component.scss`\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class IpPickerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    @Input()\r\n    public color: string;\r\n\r\n    @Input()\r\n    public control: ColorPickerControl;\r\n\r\n    @Output()\r\n    public colorChange: EventEmitter<ColorString> = new EventEmitter(false);\r\n\r\n    private subscriptions: Array<Subscription> = [];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.control) {\r\n            this.control = new ColorPickerControl();\r\n        }\r\n\r\n        /**\r\n         * set color presets\r\n         * defined by this chrome color picker component\r\n         */\r\n        if (!this.control.hasPresets()) {\r\n            this.control\r\n                .setColorPresets([\r\n                    ['#f44336', '#ffebee', '#ffcdd2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\r\n                    ['#E91E63', '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f'],\r\n                    ['#9C27B0', '#F3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c'],\r\n                    ['#673AB7', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92'],\r\n                    ['#3F51B5', '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e'],\r\n                    ['#2196F3', '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0D47a1'],\r\n                    ['#03A9F4', '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'],\r\n                    ['#00BCD4', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'],\r\n                    ['#009688', '#E0F2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40'],\r\n                    ['#4CAF50', '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20'],\r\n                    ['#8BC34A', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e'],\r\n                    ['#cddc39', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#c0dc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717'],\r\n                    ['#ffeb3b', '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17'],\r\n                    ['#ffc107', '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'],\r\n                    ['#ff9800', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100'],\r\n                    ['#ff5722', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c'],\r\n                    ['#795548', '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723'],\r\n                    ['#9e9e9e', '#fafafa', '#f5f5f5', '#eee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121'],\r\n                    ['#607d8b', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#60708b', '#546e7a', '#455a64', '#37474f', '#263238']\r\n                ]);\r\n        }\r\n\r\n        if (this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n\r\n        this.subscriptions.push(\r\n            this.control.valueChanges.subscribe((value) => {\r\n                this.colorChange.emit(getValueByType(value, this.control.initType));\r\n            })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\r\n        this.subscriptions.length = 0;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {\r\n            this.control.setValueFrom(this.color);\r\n        }\r\n    }\r\n\r\n}","/*\r\n * ngx-color-picker\r\n *\r\n * By Ivan Pintar, http://www.pintar-ivan.com\r\n * Licensed under the MIT License\r\n * See https://github.com/pIvan/ngx-color-picker/blob/master/README.md\r\n */\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * parts\r\n */\r\nimport { SaturationComponent } from './components/parts/saturation/saturation.component';\r\nimport { IndicatorComponent } from './components/parts/indicator/indicator.component';\r\nimport { HueComponent } from './components/parts/hue/hue.component';\r\nimport { AlphaComponent } from './components/parts/alpha/alpha.component';\r\nimport { RgbaComponent } from './components/parts/inputs/rgba-input/rgba-input.component';\r\nimport { HslaComponent } from './components/parts/inputs/hsla-input/hsla-input.component';\r\nimport { HexComponent } from './components/parts/inputs/hex-input/hex-input.component';\r\nimport { ColorPresetsComponent } from './components/parts/color-presets/color-presets.component';\r\nimport { ColorPresetComponent } from './components/parts/color-preset/color-preset.component';\r\nimport { ColorPresetSublist } from './components/parts/color-preset-sublist/color-preset-sublist.component';\r\n\r\nexport { SaturationComponent } from './components/parts/saturation/saturation.component';\r\nexport { IndicatorComponent } from './components/parts/indicator/indicator.component';\r\nexport { HueComponent } from './components/parts/hue/hue.component';\r\nexport { AlphaComponent } from './components/parts/alpha/alpha.component';\r\nexport { RgbaComponent } from './components/parts/inputs/rgba-input/rgba-input.component';\r\nexport { HslaComponent } from './components/parts/inputs/hsla-input/hsla-input.component';\r\nexport { HexComponent } from './components/parts/inputs/hex-input/hex-input.component';\r\nexport { ColorPresetsComponent } from './components/parts/color-presets/color-presets.component';\r\nexport { ColorPresetComponent } from './components/parts/color-preset/color-preset.component';\r\nexport { ColorPresetSublist } from './components/parts/color-preset-sublist/color-preset-sublist.component';\r\n/**\r\n * directives\r\n */\r\nimport { ColorPickerInputDirective } from './directives/color-picker-input.directive';\r\n\r\n/**\r\n * pipes\r\n */\r\nimport { ChunksPipe } from './pipes/chunks.pipe';\r\nimport { ReversePipe } from './pipes/reverse.pipe';\r\n\r\n/**\r\n * pickers\r\n */\r\nimport { ChromePickerComponent } from './components/chrome-picker/chrome-picker.component';\r\nimport { SketchPickerComponent } from './components/sketch-picker/sketch-picker.component';\r\nimport { CompactPickerComponent } from './components/compact-picker/compact-picker.component';\r\nimport { GithubPickerComponent } from './components/github-picker/github-picker.component';\r\nimport { SwatchesPickerComponent } from './components/swatches-picker/swatches-picker.component';\r\nimport { IpPickerComponent } from './components/ip-picker/ip-picker.component';\r\n\r\nexport { ChromePickerComponent } from './components/chrome-picker/chrome-picker.component';\r\nexport { SketchPickerComponent } from './components/sketch-picker/sketch-picker.component';\r\nexport { CompactPickerComponent } from './components/compact-picker/compact-picker.component';\r\nexport { GithubPickerComponent } from './components/github-picker/github-picker.component';\r\nexport { SwatchesPickerComponent } from './components/swatches-picker/swatches-picker.component';\r\nexport { IpPickerComponent } from './components/ip-picker/ip-picker.component';\r\n\r\n/**\r\n * services\r\n */\r\nimport { ColorPickerConfig, IColorPickerConfig } from './services/color-picker.service';\r\n\r\n/**\r\n * exports\r\n */\r\nexport { Color } from './helpers/color.class';\r\nexport { ColorPickerControl } from './helpers/control.class';\r\nexport { ColorsTable } from './helpers/colors-table.class';\r\nexport { IColorPickerConfig } from './services/color-picker.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    providers: [\r\n        ColorPickerConfig\r\n    ],\r\n    declarations: [\r\n        SaturationComponent,\r\n        IndicatorComponent,\r\n        HueComponent,\r\n        AlphaComponent,\r\n\r\n        RgbaComponent,\r\n        HslaComponent,\r\n        HexComponent,\r\n\r\n        ColorPresetsComponent,\r\n        ColorPresetComponent,\r\n        ColorPresetSublist,\r\n\r\n        ColorPickerInputDirective,\r\n        ChunksPipe,\r\n        ReversePipe,\r\n\r\n        /**\r\n         * prepared components\r\n         */\r\n        ChromePickerComponent,\r\n        SketchPickerComponent,\r\n        SwatchesPickerComponent,\r\n        GithubPickerComponent,\r\n        CompactPickerComponent,\r\n        IpPickerComponent\r\n    ],\r\n    exports: [\r\n        SaturationComponent,\r\n        IndicatorComponent,\r\n        HueComponent,\r\n        AlphaComponent,\r\n\r\n        RgbaComponent,\r\n        HslaComponent,\r\n        HexComponent,\r\n\r\n        ColorPresetsComponent,\r\n\r\n        ChromePickerComponent,\r\n        SketchPickerComponent,\r\n        SwatchesPickerComponent,\r\n        GithubPickerComponent,\r\n        CompactPickerComponent,\r\n        IpPickerComponent\r\n    ]\r\n})\r\nexport class ColorPickerModule {\r\n\r\n    public static forRoot<T extends IColorPickerConfig>(configuration?: T): ModuleWithProviders<ColorPickerModule> {\r\n        return {\r\n            ngModule: ColorPickerModule,\r\n            providers: [\r\n                { provide: ColorPickerConfig, useValue: configuration || new ColorPickerConfig() }\r\n            ]\r\n        };\r\n    }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseComponent as ɵb} from './lib/components/parts/base.component';\nexport {ListAnimation as ɵd,OpacityAnimation as ɵc} from './lib/components/parts/color-preset-sublist/color-preset-sublist.animation';\nexport {ColorPickerInputDirective as ɵe} from './lib/directives/color-picker-input.directive';\nexport {BaseColor as ɵi} from './lib/helpers/base-color.class';\nexport {Rgba as ɵh} from './lib/helpers/rgba.class';\nexport {ChunksPipe as ɵf} from './lib/pipes/chunks.pipe';\nexport {ReversePipe as ɵg} from './lib/pipes/reverse.pipe';\nexport {ColorPickerConfig as ɵa} from './lib/services/color-picker.service';"]}