import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { ColorPickerControl } from './../../helpers/control.class';
import { getValueByType } from './../../helpers/helper.functions';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../parts/saturation/saturation.component';
import * as ɵngcc2 from '../parts/hue/hue.component';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../parts/indicator/indicator.component';
import * as ɵngcc5 from '../parts/inputs/hex-input/hex-input.component';
import * as ɵngcc6 from '../parts/inputs/rgba-input/rgba-input.component';
import * as ɵngcc7 from '../parts/alpha/alpha.component';
import * as ɵngcc8 from '../parts/color-presets/color-presets.component';

function SketchPickerComponent_alpha_component_5_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "alpha-component", 12);
    ɵngcc0.ɵɵlistener("colorChange", function SketchPickerComponent_alpha_component_5_Template_alpha_component_colorChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.control.value = $event; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("color", ctx_r0.control.value);
} }
function SketchPickerComponent_color_presets_component_15_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "color-presets-component", 13);
    ɵngcc0.ɵɵlistener("colorChange", function SketchPickerComponent_color_presets_component_15_Template_color_presets_component_colorChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.control.value = $event; })("hueChange", function SketchPickerComponent_color_presets_component_15_Template_color_presets_component_hueChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.control.hue = $event; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("color", ctx_r1.control.value)("colorPresets", ctx_r1.control.presets)("hue", ctx_r1.control.hue);
} }
export class SketchPickerComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.colorChange = new EventEmitter(false);
        this.subscriptions = [];
    }
    ngOnInit() {
        if (!this.control) {
            this.control = new ColorPickerControl();
        }
        if (this.color) {
            this.control.setValueFrom(this.color);
        }
        if (!this.control.hasPresets()) {
            /**
             * set color presets
             * defined by sketch color picker component
             */
            this.control
                .setColorPresets([
                '#d0041b', '#8b572a', '#f5a623', '#f8e71c', '#7ed321', '#417506', '#bd10e0', '#9013fe',
                '#4a90e2', '#50e3c2', '#b8e986', '#030303', '#4a4a4a', '#9b9b9b', '#fff'
            ]);
        }
        this.subscriptions.push(this.control.valueChanges.subscribe((value) => {
            this.cdr.markForCheck();
            this.colorChange.emit(getValueByType(value, this.control.initType));
        }));
    }
    ngOnDestroy() {
        this.cdr.detach();
        this.subscriptions.forEach((subscription) => subscription.unsubscribe());
        this.subscriptions.length = 0;
    }
    ngOnChanges(changes) {
        if (this.color && this.control && getValueByType(this.control.value, this.control.initType) !== this.color) {
            this.control.setValueFrom(this.color);
        }
    }
}
SketchPickerComponent.ɵfac = function SketchPickerComponent_Factory(t) { return new (t || SketchPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
SketchPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SketchPickerComponent, selectors: [["sketch-picker"]], inputs: { control: "control", color: "color" }, outputs: { colorChange: "colorChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 17, vars: 18, consts: [[3, "hue", "color", "colorChange"], [1, "controls"], [1, "controls-row", "hue-alpha"], [1, "column"], [3, "hue", "color", "hueChange", "colorChange"], [3, "color", "colorChange", 4, "ngIf"], [1, "column", "indicator-column"], ["colorType", "rgba", 3, "color"], [1, "controls-row", "presentation"], ["label", "", 3, "color", "hue", "colorChange", "hueChange"], ["label", "", 3, "alpha", "color", "hue", "colorChange", "hueChange"], [3, "color", "colorPresets", "hue", "colorChange", "hueChange", 4, "ngIf"], [3, "color", "colorChange"], [3, "color", "colorPresets", "hue", "colorChange", "hueChange"]], template: function SketchPickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "saturation-component", 0);
        ɵngcc0.ɵɵlistener("colorChange", function SketchPickerComponent_Template_saturation_component_colorChange_0_listener($event) { return ctx.control.value = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "hue-component", 4);
        ɵngcc0.ɵɵlistener("hueChange", function SketchPickerComponent_Template_hue_component_hueChange_4_listener($event) { return ctx.control.hue = $event; })("colorChange", function SketchPickerComponent_Template_hue_component_colorChange_4_listener($event) { return ctx.control.value = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, SketchPickerComponent_alpha_component_5_Template, 1, 1, "alpha-component", 5);
        ɵngcc0.ɵɵpipe(6, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 6);
        ɵngcc0.ɵɵelement(8, "indicator-component", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 8);
        ɵngcc0.ɵɵelementStart(10, "div", 3);
        ɵngcc0.ɵɵelementStart(11, "hex-input-component", 9);
        ɵngcc0.ɵɵlistener("colorChange", function SketchPickerComponent_Template_hex_input_component_colorChange_11_listener($event) { return ctx.control.value = $event; })("hueChange", function SketchPickerComponent_Template_hex_input_component_hueChange_11_listener($event) { return ctx.control.hue = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "div", 3);
        ɵngcc0.ɵɵelementStart(13, "rgba-input-component", 10);
        ɵngcc0.ɵɵlistener("colorChange", function SketchPickerComponent_Template_rgba_input_component_colorChange_13_listener($event) { return ctx.control.value = $event; })("hueChange", function SketchPickerComponent_Template_rgba_input_component_hueChange_13_listener($event) { return ctx.control.hue = $event; });
        ɵngcc0.ɵɵpipe(14, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(15, SketchPickerComponent_color_presets_component_15_Template, 1, 3, "color-presets-component", 11);
        ɵngcc0.ɵɵpipe(16, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("hue", ctx.control.hue)("color", ctx.control.value);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("hue", ctx.control.hue)("color", ctx.control.value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(6, 12, ctx.control.alphaChannelVisibilityChanges));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("color", ctx.control.value);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("color", ctx.control.value)("hue", ctx.control.hue);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("alpha", ɵngcc0.ɵɵpipeBind1(14, 14, ctx.control.alphaChannelVisibilityChanges))("color", ctx.control.value)("hue", ctx.control.hue);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(16, 16, ctx.control.presetsVisibilityChanges));
    } }, directives: [ɵngcc1.SaturationComponent, ɵngcc2.HueComponent, ɵngcc3.NgIf, ɵngcc4.IndicatorComponent, ɵngcc5.HexComponent, ɵngcc6.RgbaComponent, ɵngcc7.AlphaComponent, ɵngcc8.ColorPresetsComponent], pipes: [ɵngcc3.AsyncPipe], styles: ["[_nghost-%COMP%], [_nghost-%COMP%]     *{padding:0;margin:0;box-sizing:border-box}", "[_nghost-%COMP%]{display:block;padding:9px;width:220px;border-radius:4px;background:#fff;box-shadow:0 0 2px rgba(0,0,0,.3),0 1px 4px rgba(0,0,0,.3)}saturation-component[_ngcontent-%COMP%]{height:146px;border-radius:2px;box-shadow:inset 0 0 2px rgba(0,0,0,.6)}saturation-component[_ngcontent-%COMP%]     .pointer{border-width:2px;box-shadow:0 0 2px rgba(0,0,0,.6);width:10px;height:10px}.controls[_ngcontent-%COMP%]{padding:4px 0 0}alpha-component[_ngcontent-%COMP%], hue-component[_ngcontent-%COMP%]{height:10px;border-radius:2px;box-shadow:inset 0 0 2px rgba(0,0,0,.6)}hue-component[_ngcontent-%COMP%]{margin-bottom:4px}.controls-row[_ngcontent-%COMP%]{display:table;width:100%}.column[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle}.indicator-column[_ngcontent-%COMP%]{width:25px}indicator-component[_ngcontent-%COMP%]{height:24px;width:100%;box-shadow:inset 0 0 2px rgba(0,0,0,.6);border-radius:2px}color-presets-component[_ngcontent-%COMP%]{border-top:1px solid #e0e0e0;padding:10px 9px 0;margin:8px -9px 0}color-presets-component[_ngcontent-%COMP%]     .row{padding:10px 0 0}[_nghost-%COMP%]   indicator-component[_ngcontent-%COMP%]     svg{vertical-align:5%}.controls-row.hue-alpha[_ngcontent-%COMP%]{padding-bottom:9px}.controls-row.hue-alpha[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%]:first-child{padding-right:5px}.hue-alpha[_ngcontent-%COMP%]     .pointer{width:6px;margin:0 0 0 -3px;height:100%;top:0;border-radius:2px;border:1px solid #898989}.presentation[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%]:first-child{width:56px}.presentation[_ngcontent-%COMP%]     input{height:20px;font-size:11px}[_nghost-%COMP%]     .reflection, [_nghost-%COMP%]     color-preset{height:16px;width:16px;border-radius:2px}[_nghost-%COMP%]     color-preset{box-shadow:inset 0 0 2px rgba(0,0,0,.4)}[_nghost-%COMP%]     color-preset.selected{box-shadow:inset 0 1px 4px rgba(0,0,0,.4)}[_nghost-%COMP%]     .row>color-preset, [_nghost-%COMP%]     .row>color-preset-sublist{margin:0 0 0 10px}[_nghost-%COMP%]     .row>color-preset-sublist:first-child, [_nghost-%COMP%]     .row>color-preset:first-child{margin:0}"], changeDetection: 0 });
SketchPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
SketchPickerComponent.propDecorators = {
    color: [{ type: Input }],
    control: [{ type: Input }],
    colorChange: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SketchPickerComponent, [{
        type: Component,
        args: [{
                selector: `sketch-picker`,
                template: "<saturation-component [hue]=\"control.hue\" [(color)]=\"control.value\"></saturation-component>\r\n\r\n<div class=\"controls\">\r\n    <div class=\"controls-row hue-alpha\">\r\n        <div class=\"column\">\r\n            <hue-component [(hue)]=\"control.hue\" [(color)]=\"control.value\"></hue-component>\r\n            <alpha-component *ngIf=\"control.alphaChannelVisibilityChanges | async\" [(color)]=\"control.value\"></alpha-component>\r\n        </div>\r\n        <div class=\"column indicator-column\">\r\n            <indicator-component colorType=\"rgba\" [color]=\"control.value\"></indicator-component>\r\n        </div>\r\n    </div>\r\n    <div class=\"controls-row presentation\">\r\n        <div class=\"column\">\r\n            <hex-input-component label [(color)]=\"control.value\" [(hue)]=\"control.hue\"></hex-input-component>\r\n        </div>\r\n        <div class=\"column\">\r\n            <rgba-input-component [alpha]=\"control.alphaChannelVisibilityChanges | async\" label [(color)]=\"control.value\" [(hue)]=\"control.hue\"></rgba-input-component>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<color-presets-component *ngIf=\"control.presetsVisibilityChanges | async\" [(color)]=\"control.value\" [colorPresets]=\"control.presets\" [(hue)]=\"control.hue\"></color-presets-component>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host,:host ::ng-deep *{padding:0;margin:0;box-sizing:border-box}", ":host{display:block;padding:9px;width:220px;border-radius:4px;background:#fff;box-shadow:0 0 2px rgba(0,0,0,.3),0 1px 4px rgba(0,0,0,.3)}saturation-component{height:146px;border-radius:2px;box-shadow:inset 0 0 2px rgba(0,0,0,.6)}saturation-component ::ng-deep .pointer{border-width:2px;box-shadow:0 0 2px rgba(0,0,0,.6);width:10px;height:10px}.controls{padding:4px 0 0}alpha-component,hue-component{height:10px;border-radius:2px;box-shadow:inset 0 0 2px rgba(0,0,0,.6)}hue-component{margin-bottom:4px}.controls-row{display:table;width:100%}.column{display:table-cell;vertical-align:middle}.indicator-column{width:25px}indicator-component{height:24px;width:100%;box-shadow:inset 0 0 2px rgba(0,0,0,.6);border-radius:2px}color-presets-component{border-top:1px solid #e0e0e0;padding:10px 9px 0;margin:8px -9px 0}color-presets-component ::ng-deep .row{padding:10px 0 0}:host indicator-component ::ng-deep svg{vertical-align:5%}.controls-row.hue-alpha{padding-bottom:9px}.controls-row.hue-alpha .column:first-child{padding-right:5px}.hue-alpha ::ng-deep .pointer{width:6px;margin:0 0 0 -3px;height:100%;top:0;border-radius:2px;border:1px solid #898989}.presentation .column:first-child{width:56px}.presentation ::ng-deep input{height:20px;font-size:11px}:host ::ng-deep .reflection,:host ::ng-deep color-preset{height:16px;width:16px;border-radius:2px}:host ::ng-deep color-preset{box-shadow:inset 0 0 2px rgba(0,0,0,.4)}:host ::ng-deep color-preset.selected{box-shadow:inset 0 1px 4px rgba(0,0,0,.4)}:host ::ng-deep .row>color-preset,:host ::ng-deep .row>color-preset-sublist{margin:0 0 0 10px}:host ::ng-deep .row>color-preset-sublist:first-child,:host ::ng-deep .row>color-preset:first-child{margin:0}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { colorChange: [{
            type: Output
        }], control: [{
            type: Input
        }], color: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,