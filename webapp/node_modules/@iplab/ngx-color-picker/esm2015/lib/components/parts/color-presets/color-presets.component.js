import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';
import { Color } from './../../../helpers/color.class';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../color-preset-sublist/color-preset-sublist.component';
import * as ɵngcc3 from '../color-preset/color-preset.component';
import * as ɵngcc4 from '../../../pipes/chunks.pipe';

const _c0 = function (a0, a1) { return { "first": a0, "last": a1 }; };
function ColorPresetsComponent_div_0_ng_template_1_color_preset_sublist_0_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "color-preset-sublist", 5);
    ɵngcc0.ɵɵlistener("selectionChange", function ColorPresetsComponent_div_0_ng_template_1_color_preset_sublist_0_Template_color_preset_sublist_selectionChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(3); return ctx_r11.onSelectionChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext();
    const preset_r5 = ctx_r13.$implicit;
    const first_r6 = ctx_r13.first;
    const last_r7 = ctx_r13.last;
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("list", preset_r5)("direction", ctx_r8.direction)("activeColor", ctx_r8.color)("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c0, first_r6, last_r7));
} }
function ColorPresetsComponent_div_0_ng_template_1_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "color-preset", 6);
    ɵngcc0.ɵɵlistener("selectionChange", function ColorPresetsComponent_div_0_ng_template_1_ng_template_1_Template_color_preset_selectionChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(3); return ctx_r14.onSelectionChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext();
    const first_r6 = ctx_r16.first;
    const last_r7 = ctx_r16.last;
    const preset_r5 = ctx_r16.$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c0, first_r6, last_r7))("color", preset_r5)("activeColor", ctx_r10.color);
} }
function ColorPresetsComponent_div_0_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ColorPresetsComponent_div_0_ng_template_1_color_preset_sublist_0_Template, 1, 7, "color-preset-sublist", 3);
    ɵngcc0.ɵɵtemplate(1, ColorPresetsComponent_div_0_ng_template_1_ng_template_1_Template, 1, 6, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
} if (rf & 2) {
    const preset_r5 = ctx.$implicit;
    const _r9 = ɵngcc0.ɵɵreference(2);
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.isList(preset_r5))("ngIfElse", _r9);
} }
function ColorPresetsComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, ColorPresetsComponent_div_0_ng_template_1_Template, 3, 2, "ng-template", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const chunk_r1 = ctx.$implicit;
    const first_r2 = ctx.first;
    const last_r3 = ctx.last;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(2, _c0, first_r2, last_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", chunk_r1);
} }
export class ColorPresetsComponent {
    constructor() {
        this.columns = 8;
        this.hueChange = new EventEmitter(false);
        this.colorChange = new EventEmitter(false);
        this.direction = 'up';
    }
    onSelectionChange(color) {
        const selectedRgbaColor = color.getRgba();
        const selectedHsvaColor = color.getHsva();
        const newColor = new Color().setRgba(selectedRgbaColor.red, selectedRgbaColor.green, selectedRgbaColor.blue, selectedRgbaColor.alpha);
        const hueColor = new Color().setHsva(selectedHsvaColor.hue);
        this.hueChange.emit(hueColor);
        this.colorChange.emit(newColor);
    }
    isList(colorPreset) {
        return Array.isArray(colorPreset);
    }
}
ColorPresetsComponent.ɵfac = function ColorPresetsComponent_Factory(t) { return new (t || ColorPresetsComponent)(); };
ColorPresetsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ColorPresetsComponent, selectors: [["color-presets-component"]], inputs: { columns: "columns", direction: "direction", colorPresets: "colorPresets", hue: "hue", color: "color" }, outputs: { hueChange: "hueChange", colorChange: "colorChange" }, decls: 2, vars: 4, consts: [["class", "row", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "row", 3, "ngClass"], ["ngFor", "", 3, "ngForOf"], [3, "list", "direction", "activeColor", "ngClass", "selectionChange", 4, "ngIf", "ngIfElse"], ["colorPreset", ""], [3, "list", "direction", "activeColor", "ngClass", "selectionChange"], [3, "ngClass", "color", "activeColor", "selectionChange"]], template: function ColorPresetsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ColorPresetsComponent_div_0_Template, 2, 5, "div", 0);
        ɵngcc0.ɵɵpipe(1, "chunks");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(1, 1, ctx.colorPresets, ctx.columns));
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc2.ColorPresetSublist, ɵngcc3.ColorPresetComponent], pipes: [ɵngcc4.ChunksPipe], styles: ["[_nghost-%COMP%], [_nghost-%COMP%]     *{padding:0;margin:0;box-sizing:border-box}", "[_nghost-%COMP%]{display:block;font-size:0}[_nghost-%COMP%]   .row[_ngcontent-%COMP%]:first-child{padding:0}color-preset-sublist[_ngcontent-%COMP%]:first-child, color-preset[_ngcontent-%COMP%]:first-child{margin:0}"], changeDetection: 0 });
ColorPresetsComponent.propDecorators = {
    columns: [{ type: Input }],
    colorPresets: [{ type: Input }],
    hue: [{ type: Input }],
    hueChange: [{ type: Output }],
    color: [{ type: Input }],
    colorChange: [{ type: Output }],
    direction: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorPresetsComponent, [{
        type: Component,
        args: [{
                selector: `color-presets-component`,
                template: "<div class=\"row\" *ngFor=\"let chunk of colorPresets | chunks: columns; let first = first; let last = last;\" [ngClass]=\"{ 'first': first, 'last': last }\">\r\n    <ng-template ngFor let-preset let-first=\"first\" let-last=\"last\" [ngForOf]=\"chunk\">\r\n        <color-preset-sublist \r\n            [list]=\"preset\" \r\n            *ngIf=\"isList(preset); else colorPreset\" \r\n            [direction]=\"direction\"\r\n            [activeColor]=\"color\"\r\n            [ngClass]=\"{ 'first': first, 'last': last }\"\r\n            (selectionChange)=\"onSelectionChange($event)\"></color-preset-sublist>\r\n\r\n        <ng-template #colorPreset>\r\n            <color-preset \r\n                [ngClass]=\"{ 'first': first, 'last': last }\"\r\n                [color]=\"preset\" \r\n                [activeColor]=\"color\" \r\n                (selectionChange)=\"onSelectionChange($event)\"></color-preset>\r\n        </ng-template>\r\n    </ng-template>\r\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host,:host ::ng-deep *{padding:0;margin:0;box-sizing:border-box}", ":host{display:block;font-size:0}:host .row:first-child{padding:0}color-preset-sublist:first-child,color-preset:first-child{margin:0}"]
            }]
    }], function () { return []; }, { columns: [{
            type: Input
        }], hueChange: [{
            type: Output
        }], colorChange: [{
            type: Output
        }], direction: [{
            type: Input
        }], colorPresets: [{
            type: Input
        }], hue: [{
            type: Input
        }], color: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItcHJlc2V0cy5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lwbGFiL25neC1jb2xvci1waWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL3BhcnRzL2NvbG9yLXByZXNldHMvY29sb3ItcHJlc2V0cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFXdkQsTUFBTSxPQUFPLHFCQUFxQjtBQUNsQyxJQVZBO0FBQ0csUUFXUSxZQUFPLEdBQVcsQ0FBQyxDQUFDO0FBQy9CLFFBUVcsY0FBUyxHQUFHLElBQUksWUFBWSxDQUFRLEtBQUssQ0FBQyxDQUFDO0FBQ3RELFFBS1csZ0JBQVcsR0FBRyxJQUFJLFlBQVksQ0FBUSxLQUFLLENBQUMsQ0FBQztBQUN4RCxRQUVXLGNBQVMsR0FBcUMsSUFBSSxDQUFDO0FBQzlELElBZUEsQ0FBQztBQUFDLElBZFMsaUJBQWlCLENBQUMsS0FBWTtBQUFJLFFBQ3JDLE1BQU0saUJBQWlCLEdBQUcsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ2xELFFBQVEsTUFBTSxpQkFBaUIsR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDbEQsUUFDUSxNQUFNLFFBQVEsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUMsS0FBSyxFQUFFLGlCQUFpQixDQUFDLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM5SSxRQUFRLE1BQU0sUUFBUSxHQUFHLElBQUksS0FBSyxFQUFFLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3BFLFFBQ1EsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDdEMsUUFBUSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN4QyxJQUFJLENBQUM7QUFDTCxJQUNXLE1BQU0sQ0FBQyxXQUF3QztBQUFJLFFBQ3RELE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUMxQyxJQUFJLENBQUM7QUFDTDtpREE5Q0MsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRTtDQUF5QixrQkFDbkM7Ozs7O0dBQTZDLGtCQUs3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTSxxUEFDbEQsK0tBQ0k7QUFBQztBQUVHLHNCQUFKLEtBQUs7QUFDUiwyQkFFRyxLQUFLO0FBQ1Isa0JBRUcsS0FBSztBQUNSLHdCQUVHLE1BQU07QUFDVCxvQkFFRyxLQUFLO0FBQ1IsMEJBRUcsTUFBTTtBQUNULHdCQUVHLEtBQUs7QUFDVDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBakNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVdBLEFBQUEsQUFBQSxBQUFBLEFBVEEsQUFZQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBU0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQWdCQSxBQUFBLEFBZEEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQTdDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUdBLEFBQUEsQUFHQSxBQUFBLEFBR0EsQUFBQSxBQUdBLEFBQUEsQUFHQSxBQUFBLEFBR0EsQUFBQSxBQUdBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICcuLy4uLy4uLy4uL2hlbHBlcnMvY29sb3IuY2xhc3MnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogYGNvbG9yLXByZXNldHMtY29tcG9uZW50YCxcclxuICAgIHRlbXBsYXRlVXJsOiBgLi9jb2xvci1wcmVzZXRzLmNvbXBvbmVudC5odG1sYCxcclxuICAgIHN0eWxlVXJsczogW1xyXG4gICAgICAgIGAuLy4uL2Jhc2Uuc3R5bGUuc2Nzc2AsXHJcbiAgICAgICAgYC4vY29sb3ItcHJlc2V0cy5jb21wb25lbnQuc2Nzc2BcclxuICAgIF0sXHJcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29sb3JQcmVzZXRzQ29tcG9uZW50IHtcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgcHVibGljIGNvbHVtbnM6IG51bWJlciA9IDg7XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHB1YmxpYyBjb2xvclByZXNldHM6IEFycmF5PEFycmF5PENvbG9yPiB8IENvbG9yPjtcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgcHVibGljIGh1ZTogQ29sb3I7XHJcblxyXG4gICAgQE91dHB1dCgpXHJcbiAgICBwdWJsaWMgaHVlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxDb2xvcj4oZmFsc2UpO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBwdWJsaWMgY29sb3I6IENvbG9yO1xyXG5cclxuICAgIEBPdXRwdXQoKVxyXG4gICAgcHVibGljIGNvbG9yQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxDb2xvcj4oZmFsc2UpO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBwdWJsaWMgZGlyZWN0aW9uOiAnZG93bicgfCAndXAnIHwgJ2xlZnQnIHwgJ3JpZ2h0JyA9ICd1cCc7XHJcblxyXG4gICAgcHVibGljIG9uU2VsZWN0aW9uQ2hhbmdlKGNvbG9yOiBDb2xvcik6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdGVkUmdiYUNvbG9yID0gY29sb3IuZ2V0UmdiYSgpO1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdGVkSHN2YUNvbG9yID0gY29sb3IuZ2V0SHN2YSgpO1xyXG5cclxuICAgICAgICBjb25zdCBuZXdDb2xvciA9IG5ldyBDb2xvcigpLnNldFJnYmEoc2VsZWN0ZWRSZ2JhQ29sb3IucmVkLCBzZWxlY3RlZFJnYmFDb2xvci5ncmVlbiwgc2VsZWN0ZWRSZ2JhQ29sb3IuYmx1ZSwgc2VsZWN0ZWRSZ2JhQ29sb3IuYWxwaGEpO1xyXG4gICAgICAgIGNvbnN0IGh1ZUNvbG9yID0gbmV3IENvbG9yKCkuc2V0SHN2YShzZWxlY3RlZEhzdmFDb2xvci5odWUpO1xyXG5cclxuICAgICAgICB0aGlzLmh1ZUNoYW5nZS5lbWl0KGh1ZUNvbG9yKTtcclxuICAgICAgICB0aGlzLmNvbG9yQ2hhbmdlLmVtaXQobmV3Q29sb3IpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpc0xpc3QoY29sb3JQcmVzZXQ6IEFycmF5PEFycmF5PENvbG9yPiB8IENvbG9yPik6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KGNvbG9yUHJlc2V0KTtcclxuICAgIH1cclxufSJdfQ==