import { Component, Input, ChangeDetectionStrategy, Renderer2, Inject, ChangeDetectorRef, Output, EventEmitter, HostBinding } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { OpacityAnimation, ListAnimation } from './color-preset-sublist.animation';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../color-preset/color-preset.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../../../pipes/reverse.pipe';

function ColorPresetSublist_div_3_color_preset_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "color-preset", 5);
    ɵngcc0.ɵɵlistener("selectionChange", function ColorPresetSublist_div_3_color_preset_1_Template_color_preset_selectionChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.onSelectionChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const preset_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("color", preset_r2)("activeColor", ctx_r1.activeColor);
} }
function ColorPresetSublist_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵtemplate(1, ColorPresetSublist_div_3_color_preset_1_Template, 1, 2, "color-preset", 4);
    ɵngcc0.ɵɵpipe(2, "reverse");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("@opacityAnimation", ctx_r0.showChildren)("@listAnimation", ctx_r0.direction);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(2, 3, ctx_r0.list, ctx_r0.direction == "up" || ctx_r0.direction == "right"));
} }
export class ColorPresetSublist {
    constructor(renderer, document, cdr) {
        this.renderer = renderer;
        this.document = document;
        this.cdr = cdr;
        this.selectionChange = new EventEmitter(false);
        this.direction = 'up';
        this.showChildren = false;
        this.hooks = [];
    }
    ngOnDestroy() {
        this.removeListeners();
        this.cdr.detach();
    }
    removeListeners() {
        this.hooks.forEach((callback) => callback());
        this.hooks.length = 0;
    }
    /**
     * emit color change
     */
    onSelectionChange(color) {
        this.selectionChange.next(color);
    }
    onLongPress() {
        this.showChildren = true;
        this.listenDocumentClick();
    }
    listenDocumentClick() {
        this.hooks.push(this.renderer.listen(this.document, 'mousedown', () => this.closeList()));
        this.hooks.push(this.renderer.listen(this.document, 'touchstart', () => this.closeList()));
    }
    closeList() {
        if (this.showChildren) {
            this.showChildren = false;
            this.cdr.markForCheck();
            this.removeListeners();
        }
    }
    get className() {
        return `direction-${this.direction}`;
    }
}
ColorPresetSublist.ɵfac = function ColorPresetSublist_Factory(t) { return new (t || ColorPresetSublist)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ColorPresetSublist.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ColorPresetSublist, selectors: [["color-preset-sublist"]], hostVars: 1, hostBindings: function ColorPresetSublist_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("className", ctx.className);
    } }, inputs: { direction: "direction", list: "list", activeColor: "activeColor" }, outputs: { selectionChange: "selectionChange" }, decls: 4, vars: 8, consts: [[3, "show-depth-title", "color", "activeColor", "longPress", "selectionChange"], [1, "reflection"], ["class", "sublist", 4, "ngIf"], [1, "sublist"], [3, "color", "activeColor", "selectionChange", 4, "ngFor", "ngForOf"], [3, "color", "activeColor", "selectionChange"]], template: function ColorPresetSublist_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "color-preset", 0);
        ɵngcc0.ɵɵlistener("longPress", function ColorPresetSublist_Template_color_preset_longPress_0_listener() { return ctx.onLongPress(); })("selectionChange", function ColorPresetSublist_Template_color_preset_selectionChange_0_listener($event) { return ctx.onSelectionChange($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "div", 1);
        ɵngcc0.ɵɵtemplate(3, ColorPresetSublist_div_3_Template, 3, 6, "div", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("show-depth-title", ctx.list.length > 1)("color", ctx.list[0])("activeColor", ctx.activeColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("background-color", ctx.list[0].toRgbaString());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("background-color", ctx.list[0].toRgbaString());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showChildren);
    } }, directives: [ɵngcc1.ColorPresetComponent, ɵngcc2.NgIf, ɵngcc2.NgForOf], pipes: [ɵngcc3.ReversePipe], styles: ["[_nghost-%COMP%], [_nghost-%COMP%]     *{padding:0;margin:0;box-sizing:border-box}", "[_nghost-%COMP%]{position:relative;display:inline-block}color-preset[_ngcontent-%COMP%]{position:relative;z-index:3}.reflection[_ngcontent-%COMP%]{display:none;position:absolute;height:100%;width:100%;z-index:2;right:-2px;top:-2px;opacity:.5}.reflection[_ngcontent-%COMP%] + .reflection[_ngcontent-%COMP%]{opacity:.2;right:-4px;top:-4px;z-index:1}color-preset[_ngcontent-%COMP%]:hover + .reflection[_ngcontent-%COMP%], color-preset[_ngcontent-%COMP%]:hover + .reflection[_ngcontent-%COMP%] + .reflection[_ngcontent-%COMP%]{display:block}.sublist[_ngcontent-%COMP%]{position:absolute;bottom:-8px;left:-8px;right:-8px;background:#fff;border-radius:2px;box-shadow:0 0 2px rgba(0,0,0,.3),0 2px 4px rgba(0,0,0,.3);padding:8px 5px;text-align:center;z-index:1000}.sublist[_ngcontent-%COMP%]   color-preset[_ngcontent-%COMP%]{margin:8px 0 0}.sublist[_ngcontent-%COMP%]   color-preset[_ngcontent-%COMP%]:first-child{margin:0}.direction-down[_nghost-%COMP%]   .sublist[_ngcontent-%COMP%]{bottom:auto;top:-8px}"], data: { animation: [OpacityAnimation, ListAnimation] }, changeDetection: 0 });
ColorPresetSublist.ctorParameters = () => [
    { type: Renderer2 },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: ChangeDetectorRef }
];
ColorPresetSublist.propDecorators = {
    list: [{ type: Input }],
    selectionChange: [{ type: Output }],
    direction: [{ type: Input }],
    activeColor: [{ type: Input }],
    className: [{ type: HostBinding, args: ['className',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorPresetSublist, [{
        type: Component,
        args: [{
                selector: `color-preset-sublist`,
                template: "<color-preset [show-depth-title]=\"list.length > 1\" [color]=\"list[0]\" [activeColor]=\"activeColor\" (longPress)=\"onLongPress()\" (selectionChange)=\"onSelectionChange($event)\"></color-preset>\r\n<div class=\"reflection\" [style.backgroundColor]=\"list[0].toRgbaString()\"></div>\r\n<div class=\"reflection\" [style.backgroundColor]=\"list[0].toRgbaString()\"></div>\r\n\r\n<div class=\"sublist\" *ngIf=\"showChildren\" [@opacityAnimation]=\"showChildren\" [@listAnimation]=\"direction\">\r\n    <color-preset \r\n        *ngFor=\"let preset of list | reverse : (direction == 'up' || direction == 'right')\"\r\n        [color]=\"preset\"\r\n        [activeColor]=\"activeColor\"\r\n        (selectionChange)=\"onSelectionChange($event)\"></color-preset>\r\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                animations: [OpacityAnimation, ListAnimation],
                styles: [":host,:host ::ng-deep *{padding:0;margin:0;box-sizing:border-box}", ":host{position:relative;display:inline-block}color-preset{position:relative;z-index:3}.reflection{display:none;position:absolute;height:100%;width:100%;z-index:2;right:-2px;top:-2px;opacity:.5}.reflection+.reflection{opacity:.2;right:-4px;top:-4px;z-index:1}color-preset:hover+.reflection,color-preset:hover+.reflection+.reflection{display:block}.sublist{position:absolute;bottom:-8px;left:-8px;right:-8px;background:#fff;border-radius:2px;box-shadow:0 0 2px rgba(0,0,0,.3),0 2px 4px rgba(0,0,0,.3);padding:8px 5px;text-align:center;z-index:1000}.sublist color-preset{margin:8px 0 0}.sublist color-preset:first-child{margin:0}:host(.direction-down) .sublist{bottom:auto;top:-8px}"]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{
            type: Output
        }], direction: [{
            type: Input
        }], className: [{
            type: HostBinding,
            args: ['className']
        }], list: [{
            type: Input
        }], activeColor: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,