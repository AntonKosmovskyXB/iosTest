import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';
import { Color } from './../../../../helpers/color.class';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../../directives/color-picker-input.directive';
import * as ɵngcc2 from '@angular/common';

function RgbaComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "R");
    ɵngcc0.ɵɵelementEnd();
} }
function RgbaComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "G");
    ɵngcc0.ɵɵelementEnd();
} }
function RgbaComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "B");
    ɵngcc0.ɵɵelementEnd();
} }
function RgbaComponent_div_9_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "A");
    ɵngcc0.ɵɵelementEnd();
} }
function RgbaComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 0);
    ɵngcc0.ɵɵelementStart(1, "input", 4);
    ɵngcc0.ɵɵlistener("inputChange", function RgbaComponent_div_9_Template_input_inputChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onInputChange($event, "A"); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(2, RgbaComponent_div_9_span_2_Template, 2, 0, "span", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r3.value == null ? null : ctx_r3.value.getAlpha().toString());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.labelVisible);
} }
export class RgbaComponent {
    constructor() {
        this.hueChange = new EventEmitter(false);
        this.colorChange = new EventEmitter(false);
        this.isAlphaVisible = true;
    }
    set label(value) {
        this.labelVisible = true;
    }
    set alpha(isVisible) {
        this.isAlphaVisible = isVisible;
    }
    get value() {
        return this.color ? this.color.getRgba() : null;
    }
    onInputChange(newValue, color) {
        const value = this.value;
        const red = color === 'R' ? newValue : value.red;
        const green = color === 'G' ? newValue : value.green;
        const blue = color === 'B' ? newValue : value.blue;
        const alpha = color === 'A' ? newValue : value.alpha;
        const newColor = new Color().setRgba(red, green, blue, alpha);
        const hue = new Color().setHsva(newColor.getHsva().hue);
        this.hueChange.emit(hue);
        this.colorChange.emit(newColor);
    }
}
RgbaComponent.ɵfac = function RgbaComponent_Factory(t) { return new (t || RgbaComponent)(); };
RgbaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RgbaComponent, selectors: [["rgba-input-component"]], inputs: { label: "label", alpha: "alpha", hue: "hue", color: "color" }, outputs: { hueChange: "hueChange", colorChange: "colorChange" }, decls: 10, vars: 7, consts: [[1, "column"], ["type", "text", "pattern", "[0-9]*", "min", "0", "max", "255", 3, "value", "inputChange"], [4, "ngIf"], ["class", "column", 4, "ngIf"], ["type", "text", "pattern", "[0-9]+([\\.,][0-9]{1,2})?", "min", "0", "max", "1", 3, "value", "inputChange"]], template: function RgbaComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1);
        ɵngcc0.ɵɵlistener("inputChange", function RgbaComponent_Template_input_inputChange_1_listener($event) { return ctx.onInputChange($event, "R"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, RgbaComponent_span_2_Template, 2, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 0);
        ɵngcc0.ɵɵelementStart(4, "input", 1);
        ɵngcc0.ɵɵlistener("inputChange", function RgbaComponent_Template_input_inputChange_4_listener($event) { return ctx.onInputChange($event, "G"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, RgbaComponent_span_5_Template, 2, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 0);
        ɵngcc0.ɵɵelementStart(7, "input", 1);
        ɵngcc0.ɵɵlistener("inputChange", function RgbaComponent_Template_input_inputChange_7_listener($event) { return ctx.onInputChange($event, "B"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, RgbaComponent_span_8_Template, 2, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, RgbaComponent_div_9_Template, 3, 2, "div", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.value == null ? null : ctx.value.getRed().toString());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labelVisible);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", ctx.value == null ? null : ctx.value.getGreen().toString());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labelVisible);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", ctx.value == null ? null : ctx.value.getBlue().toString());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labelVisible);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isAlphaVisible);
    } }, directives: [ɵngcc1.ColorPickerInputDirective, ɵngcc2.NgIf], styles: ["[_nghost-%COMP%], [_nghost-%COMP%]     *{padding:0;margin:0;box-sizing:border-box}", "[_nghost-%COMP%]{display:table;width:100%;text-align:center;color:#b4b4b4;font-size:11px}.column[_ngcontent-%COMP%]{display:table-cell;padding:0 2px}input[_ngcontent-%COMP%]{width:100%;border:1px solid #dadada;color:#272727;text-align:center;font-size:12px;-webkit-appearance:none;border-radius:0;margin:0 0 6px;height:26px;outline:none}", ""], changeDetection: 0 });
RgbaComponent.propDecorators = {
    hue: [{ type: Input }],
    hueChange: [{ type: Output }],
    color: [{ type: Input }],
    colorChange: [{ type: Output }],
    label: [{ type: Input }],
    alpha: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RgbaComponent, [{
        type: Component,
        args: [{
                selector: `rgba-input-component`,
                template: "<div class=\"column\">\r\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" [value]=\"value?.getRed().toString()\" (inputChange)=\"onInputChange($event, 'R')\" />\r\n    <span *ngIf=\"labelVisible\">R</span>\r\n</div>\r\n<div class=\"column\">\r\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" [value]=\"value?.getGreen().toString()\" (inputChange)=\"onInputChange($event, 'G')\" />\r\n    <span *ngIf=\"labelVisible\">G</span>\r\n</div>\r\n<div class=\"column\">\r\n    <input type=\"text\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" [value]=\"value?.getBlue().toString()\" (inputChange)=\"onInputChange($event, 'B')\" />\r\n    <span *ngIf=\"labelVisible\">B</span>\r\n</div>\r\n<div class=\"column\" *ngIf=\"isAlphaVisible\">\r\n    <input type=\"text\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" [value]=\"value?.getAlpha().toString()\" (inputChange)=\"onInputChange($event, 'A')\" />\r\n    <span *ngIf=\"labelVisible\">A</span>\r\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host,:host ::ng-deep *{padding:0;margin:0;box-sizing:border-box}", ":host{display:table;width:100%;text-align:center;color:#b4b4b4;font-size:11px}.column{display:table-cell;padding:0 2px}input{width:100%;border:1px solid #dadada;color:#272727;text-align:center;font-size:12px;-webkit-appearance:none;border-radius:0;margin:0 0 6px;height:26px;outline:none}", ""]
            }]
    }], function () { return []; }, { hueChange: [{
            type: Output
        }], colorChange: [{
            type: Output
        }], label: [{
            type: Input
        }], alpha: [{
            type: Input
        }], hue: [{
            type: Input
        }], color: [{
            type: Input
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmdiYS1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lwbGFiL25neC1jb2xvci1waWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL3BhcnRzL2lucHV0cy9yZ2JhLWlucHV0L3JnYmEtaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEcsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYTFELE1BQU0sT0FBTyxhQUFhO0FBQzFCLElBWEE7QUFDRyxRQWVRLGNBQVMsR0FBRyxJQUFJLFlBQVksQ0FBUSxLQUFLLENBQUMsQ0FBQztBQUN0RCxRQUtXLGdCQUFXLEdBQUcsSUFBSSxZQUFZLENBQVEsS0FBSyxDQUFDLENBQUM7QUFDeEQsUUFRVyxtQkFBYyxHQUFZLElBQUksQ0FBQztBQUMxQyxJQXVCQSxDQUFDO0FBQ0QsSUE5QkksSUFDVyxLQUFLLENBQUMsS0FBSztBQUMxQixRQUFRLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0FBQ2pDLElBQUksQ0FBQztBQUNMLElBR0ksSUFDVyxLQUFLLENBQUMsU0FBa0I7QUFDdkMsUUFBUSxJQUFJLENBQUMsY0FBYyxHQUFHLFNBQVMsQ0FBQztBQUN4QyxJQUFJLENBQUM7QUFDTCxJQUNJLElBQVcsS0FBSztBQUNwQixRQUFRLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ3hELElBQUksQ0FBQztBQUNMLElBQ1csYUFBYSxDQUFDLFFBQWdCLEVBQUUsS0FBNEI7QUFDdkUsUUFBUSxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0FBQ2pDLFFBQVEsTUFBTSxHQUFHLEdBQUcsS0FBSyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO0FBQ3pELFFBQVEsTUFBTSxLQUFLLEdBQUcsS0FBSyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0FBQzdELFFBQVEsTUFBTSxJQUFJLEdBQUcsS0FBSyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO0FBQzNELFFBQVEsTUFBTSxLQUFLLEdBQUcsS0FBSyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0FBQzdELFFBQ1EsTUFBTSxRQUFRLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDdEUsUUFBUSxNQUFNLEdBQUcsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDaEUsUUFDUSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNqQyxRQUFRLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3hDLElBQUksQ0FBQztBQUNMO3lDQXZEQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFO2NBQXNCLGtCQUNoQzs7Ozs7Ozs7R0FBMEMsa0JBTTFDLGVBQWUsRUFBRTtlQUF1QixDQUFDLE1BQU07Ozs7OzswQ0FDbEQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FoQkFDSTtBQUFDO0FBRUcsa0JBQUosS0FBSztBQUNSLHdCQUVHLE1BQU07QUFDVCxvQkFFRyxLQUFLO0FBQ1IsMEJBRUcsTUFBTTtBQUNULG9CQUlHLEtBQUs7QUFDUixvQkFNRyxLQUFLO0FBQ1Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF0Q0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBYUEsQUFBQSxBQUFBLEFBQUEsQUFWQSxBQWdCQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFTQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBd0JBLEFBQUEsQUE3QkEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUlBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQXREQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUdBLEFBQUEsQUFHQSxBQUFBLEFBR0EsQUFBQSxBQUdBLEFBQUEsQUFLQSxBQUFBLEFBT0EsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4vLi4vLi4vLi4vLi4vaGVscGVycy9jb2xvci5jbGFzcyc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogYHJnYmEtaW5wdXQtY29tcG9uZW50YCxcclxuICAgIHRlbXBsYXRlVXJsOiBgLi9yZ2JhLWlucHV0LmNvbXBvbmVudC5odG1sYCxcclxuICAgIHN0eWxlVXJsczogW1xyXG4gICAgICAgIGAuLy4uLy4uL2Jhc2Uuc3R5bGUuc2Nzc2AsXHJcbiAgICAgICAgYC4vLi4vaW5wdXQuY29tcG9uZW50LnNjc3NgLFxyXG4gICAgICAgIGAuL3JnYmEtaW5wdXQuY29tcG9uZW50LnNjc3NgXHJcbiAgICBdLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFJnYmFDb21wb25lbnQge1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBwdWJsaWMgaHVlOiBDb2xvcjtcclxuXHJcbiAgICBAT3V0cHV0KClcclxuICAgIHB1YmxpYyBodWVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPENvbG9yPihmYWxzZSk7XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHB1YmxpYyBjb2xvcjogQ29sb3I7XHJcblxyXG4gICAgQE91dHB1dCgpXHJcbiAgICBwdWJsaWMgY29sb3JDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPENvbG9yPihmYWxzZSk7XHJcblxyXG4gICAgcHVibGljIGxhYmVsVmlzaWJsZTogYm9vbGVhbjtcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgcHVibGljIHNldCBsYWJlbCh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMubGFiZWxWaXNpYmxlID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaXNBbHBoYVZpc2libGU6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBwdWJsaWMgc2V0IGFscGhhKGlzVmlzaWJsZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuaXNBbHBoYVZpc2libGUgPSBpc1Zpc2libGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCB2YWx1ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb2xvciA/IHRoaXMuY29sb3IuZ2V0UmdiYSgpIDogbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25JbnB1dENoYW5nZShuZXdWYWx1ZTogbnVtYmVyLCBjb2xvcjogJ1InIHwgJ0cnIHwgJ0InIHwgJ0EnKSB7XHJcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnZhbHVlO1xyXG4gICAgICAgIGNvbnN0IHJlZCA9IGNvbG9yID09PSAnUicgPyBuZXdWYWx1ZSA6IHZhbHVlLnJlZDtcclxuICAgICAgICBjb25zdCBncmVlbiA9IGNvbG9yID09PSAnRycgPyBuZXdWYWx1ZSA6IHZhbHVlLmdyZWVuO1xyXG4gICAgICAgIGNvbnN0IGJsdWUgPSBjb2xvciA9PT0gJ0InID8gbmV3VmFsdWUgOiB2YWx1ZS5ibHVlO1xyXG4gICAgICAgIGNvbnN0IGFscGhhID0gY29sb3IgPT09ICdBJyA/IG5ld1ZhbHVlIDogdmFsdWUuYWxwaGE7XHJcblxyXG4gICAgICAgIGNvbnN0IG5ld0NvbG9yID0gbmV3IENvbG9yKCkuc2V0UmdiYShyZWQsIGdyZWVuLCBibHVlLCBhbHBoYSk7XHJcbiAgICAgICAgY29uc3QgaHVlID0gbmV3IENvbG9yKCkuc2V0SHN2YShuZXdDb2xvci5nZXRIc3ZhKCkuaHVlKTtcclxuXHJcbiAgICAgICAgdGhpcy5odWVDaGFuZ2UuZW1pdChodWUpO1xyXG4gICAgICAgIHRoaXMuY29sb3JDaGFuZ2UuZW1pdChuZXdDb2xvcik7XHJcbiAgICB9XHJcbn1cclxuIl19